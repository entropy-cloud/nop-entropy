<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <parent>
        <artifactId>nop-entropy</artifactId>
        <groupId>io.github.entropy-cloud</groupId>
        <version>2.0.0-SNAPSHOT</version>
    </parent>

    <modelVersion>4.0.0</modelVersion>

    <artifactId>nop-quarkus</artifactId>
    <packaging>pom</packaging>

    <modules>
        <module>nop-quarkus-core-starter</module>
        <module>nop-quarkus-web-starter</module>
        <module>nop-quarkus-grpc</module>
        <module>nop-quarkus-web-orm-starter</module>
        <module>nop-quarkus-web</module>
        <module>nop-quarkus-mcp</module>
    </modules>

    <!-- 1. 新增: 统一的属性配置 -->
    <!-- 这些属性将被所有子模块继承 -->
    <properties>
        <!-- 默认跳过所有Quarkus相关模块的构建 -->
        <maven.compiler.skip>true</maven.compiler.skip>
        <maven.test.skip>true</maven.test.skip>
        <maven.install.skip>true</maven.install.skip>
        <maven.deploy.skip>true</maven.deploy.skip>

        <!-- 默认的Java编译版本 -->
        <java.version>17</java.version>
        <maven.compiler.source>${java.version}</maven.compiler.source>
        <maven.compiler.target>${java.version}</maven.compiler.target>
    </properties>


    <!-- 2. 新增: 统一的Profile，用于条件化构建 -->
    <profiles>
        <profile>
            <id>build-quarkus-modules-on-jdk17-plus</id>
            <activation>
                <!-- 当JDK版本为17或更高时激活 -->
                <jdk>[17,)</jdk>
            </activation>
            <properties>
                <!-- 激活时，覆盖默认属性，启用构建 -->
                <maven.compiler.skip>false</maven.compiler.skip>
                <maven.test.skip>false</maven.test.skip>
                <maven.install.skip>false</maven.install.skip>
                <maven.deploy.skip>false</maven.deploy.skip>
            </properties>
        </profile>
    </profiles>

    <!-- 3. 新增: 统一的插件管理 -->
    <build>
        <pluginManagement>
            <plugins>
                <!-- 统一管理compiler插件，确保所有子模块行为一致 -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <configuration>
                        <source>${maven.compiler.source}</source>
                        <target>${maven.compiler.target}</target>
                        <skip>${maven.compiler.skip}</skip>
                    </configuration>
                </plugin>
            </plugins>
        </pluginManagement>
    </build>

</project>