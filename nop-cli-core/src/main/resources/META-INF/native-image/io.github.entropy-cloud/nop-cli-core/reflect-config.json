[
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "boolean"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "addDataSourceProperty",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object"
        ]
      },
      {
        "name": "addHealthCheckProperty",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "copyStateTo",
        "parameterTypes": [
          "com.zaxxer.hikari.HikariConfig"
        ]
      },
      {
        "name": "getCatalog",
        "parameterTypes": []
      },
      {
        "name": "getConnectionInitSql",
        "parameterTypes": []
      },
      {
        "name": "getConnectionTestQuery",
        "parameterTypes": []
      },
      {
        "name": "getConnectionTimeout",
        "parameterTypes": []
      },
      {
        "name": "getDataSource",
        "parameterTypes": []
      },
      {
        "name": "getDataSourceClassName",
        "parameterTypes": []
      },
      {
        "name": "getDataSourceJNDI",
        "parameterTypes": []
      },
      {
        "name": "getDataSourceProperties",
        "parameterTypes": []
      },
      {
        "name": "getDriverClassName",
        "parameterTypes": []
      },
      {
        "name": "getExceptionOverrideClassName",
        "parameterTypes": []
      },
      {
        "name": "getHealthCheckProperties",
        "parameterTypes": []
      },
      {
        "name": "getHealthCheckRegistry",
        "parameterTypes": []
      },
      {
        "name": "getIdleTimeout",
        "parameterTypes": []
      },
      {
        "name": "getInitializationFailTimeout",
        "parameterTypes": []
      },
      {
        "name": "getJdbcUrl",
        "parameterTypes": []
      },
      {
        "name": "getKeepaliveTime",
        "parameterTypes": []
      },
      {
        "name": "getLeakDetectionThreshold",
        "parameterTypes": []
      },
      {
        "name": "getMaxLifetime",
        "parameterTypes": []
      },
      {
        "name": "getMaximumPoolSize",
        "parameterTypes": []
      },
      {
        "name": "getMetricRegistry",
        "parameterTypes": []
      },
      {
        "name": "getMetricsTrackerFactory",
        "parameterTypes": []
      },
      {
        "name": "getMinimumIdle",
        "parameterTypes": []
      },
      {
        "name": "getPassword",
        "parameterTypes": []
      },
      {
        "name": "getPoolName",
        "parameterTypes": []
      },
      {
        "name": "getScheduledExecutor",
        "parameterTypes": []
      },
      {
        "name": "getSchema",
        "parameterTypes": []
      },
      {
        "name": "getThreadFactory",
        "parameterTypes": []
      },
      {
        "name": "getTransactionIsolation",
        "parameterTypes": []
      },
      {
        "name": "getUsername",
        "parameterTypes": []
      },
      {
        "name": "getValidationTimeout",
        "parameterTypes": []
      },
      {
        "name": "isAllowPoolSuspension",
        "parameterTypes": []
      },
      {
        "name": "isAutoCommit",
        "parameterTypes": []
      },
      {
        "name": "isIsolateInternalQueries",
        "parameterTypes": []
      },
      {
        "name": "isReadOnly",
        "parameterTypes": []
      },
      {
        "name": "isRegisterMbeans",
        "parameterTypes": []
      },
      {
        "name": "seal",
        "parameterTypes": []
      },
      {
        "name": "setAllowPoolSuspension",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setAutoCommit",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setCatalog",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setConnectionInitSql",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setConnectionTestQuery",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setConnectionTimeout",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "setDataSource",
        "parameterTypes": [
          "javax.sql.DataSource"
        ]
      },
      {
        "name": "setDataSourceClassName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDataSourceJNDI",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDataSourceProperties",
        "parameterTypes": [
          "java.util.Properties"
        ]
      },
      {
        "name": "setDriverClassName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setExceptionOverrideClassName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setHealthCheckProperties",
        "parameterTypes": [
          "java.util.Properties"
        ]
      },
      {
        "name": "setHealthCheckRegistry",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "setIdleTimeout",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "setInitializationFailTimeout",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "setIsolateInternalQueries",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setJdbcUrl",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setKeepaliveTime",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "setLeakDetectionThreshold",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "setMaxLifetime",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "setMaximumPoolSize",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setMetricRegistry",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "setMetricsTrackerFactory",
        "parameterTypes": [
          "com.zaxxer.hikari.metrics.MetricsTrackerFactory"
        ]
      },
      {
        "name": "setMinimumIdle",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setPassword",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setPoolName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setReadOnly",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setRegisterMbeans",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setScheduledExecutor",
        "parameterTypes": [
          "java.util.concurrent.ScheduledExecutorService"
        ]
      },
      {
        "name": "setSchema",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setThreadFactory",
        "parameterTypes": [
          "java.util.concurrent.ThreadFactory"
        ]
      },
      {
        "name": "setTransactionIsolation",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setUsername",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setValidationTimeout",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "validate",
        "parameterTypes": []
      }
    ],
    "name": "com.zaxxer.hikari.HikariConfig"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "evictConnection",
        "parameterTypes": [
          "java.sql.Connection"
        ]
      },
      {
        "name": "getConnection",
        "parameterTypes": []
      },
      {
        "name": "getConnection",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "getHikariConfigMXBean",
        "parameterTypes": []
      },
      {
        "name": "getHikariPoolMXBean",
        "parameterTypes": []
      },
      {
        "name": "getLogWriter",
        "parameterTypes": []
      },
      {
        "name": "getLoginTimeout",
        "parameterTypes": []
      },
      {
        "name": "getParentLogger",
        "parameterTypes": []
      },
      {
        "name": "isClosed",
        "parameterTypes": []
      },
      {
        "name": "isRunning",
        "parameterTypes": []
      },
      {
        "name": "isWrapperFor",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "setHealthCheckRegistry",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "setLogWriter",
        "parameterTypes": [
          "java.io.PrintWriter"
        ]
      },
      {
        "name": "setLoginTimeout",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setMetricRegistry",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "setMetricsTrackerFactory",
        "parameterTypes": [
          "com.zaxxer.hikari.metrics.MetricsTrackerFactory"
        ]
      },
      {
        "name": "toString",
        "parameterTypes": []
      },
      {
        "name": "unwrap",
        "parameterTypes": [
          "java.lang.Class"
        ]
      }
    ],
    "name": "com.zaxxer.hikari.HikariDataSource"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "com.zaxxer.hikari.pool.HikariProxyConnection"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowWrite": true,
        "name": "delegate"
      }
    ],
    "methods": [],
    "name": "com.zaxxer.hikari.pool.ProxyConnection"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.ai.core.initialize.AiCoreInitializer"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "readExchange",
        "parameterTypes": [
          "io.nop.commons.text.tokenizer.TextScanner"
        ]
      },
      {
        "name": "writeExchange",
        "parameterTypes": [
          "java.lang.StringBuilder",
          "io.nop.ai.core.api.messages.AiChatExchange"
        ]
      },
      {
        "name": "writeRequest",
        "parameterTypes": [
          "java.lang.StringBuilder",
          "io.nop.ai.core.api.messages.Prompt",
          "io.nop.ai.core.api.chat.AiChatOptions",
          "long",
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.ai.core.persist.DefaultAiChatExchangePersister"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.ai.core.persist.DefaultAiChatResponseCache"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "normalizePromptPath",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.ai.core.prompt.PromptTemplateManager"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getResource",
        "parameterTypes": [
          "io.nop.ai.core.api.messages.AiChatExchange",
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.ai.core.service.DefaultAiChatLogger"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowWrite": true,
        "name": "mockService"
      }
    ],
    "methods": [
      {
        "name": "addToolCalls",
        "parameterTypes": [
          "java.util.Map",
          "java.util.List"
        ]
      },
      {
        "name": "addTools",
        "parameterTypes": [
          "java.util.Map",
          "io.nop.ai.core.api.messages.Prompt"
        ]
      },
      {
        "name": "buildHttpRequest",
        "parameterTypes": [
          "java.lang.String",
          "io.nop.ai.core.model.LlmModel",
          "io.nop.ai.core.api.messages.Prompt",
          "io.nop.ai.core.api.chat.AiChatOptions"
        ]
      },
      {
        "name": "buildLlmModelPath",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "checkThink",
        "parameterTypes": [
          "io.nop.ai.core.api.messages.AiChatExchange",
          "io.nop.ai.core.model.LlmModel",
          "java.lang.String"
        ]
      },
      {
        "name": "checkThink",
        "parameterTypes": [
          "io.nop.ai.core.api.messages.AiChatExchange",
          "io.nop.ai.core.model.LlmModel",
          "java.lang.String",
          "java.util.Map"
        ]
      },
      {
        "name": "checkThink",
        "parameterTypes": [
          "io.nop.ai.core.api.messages.AiChatResponse",
          "io.nop.ai.core.model.LlmModel",
          "java.lang.String"
        ]
      },
      {
        "name": "doSendChat",
        "parameterTypes": [
          "java.lang.String",
          "io.nop.ai.core.model.LlmModel",
          "io.nop.ai.core.api.messages.Prompt",
          "io.nop.ai.core.api.chat.AiChatOptions",
          "io.nop.api.core.util.ICancelToken"
        ]
      },
      {
        "name": "generateSessionId",
        "parameterTypes": []
      },
      {
        "name": "getApiKey",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getBaseUrl",
        "parameterTypes": [
          "java.lang.String",
          "io.nop.ai.core.model.LlmModel"
        ]
      },
      {
        "name": "getBaseUrl",
        "parameterTypes": [
          "java.lang.String",
          "io.nop.ai.core.model.LlmModel",
          "java.lang.String"
        ]
      },
      {
        "name": "getInteger",
        "parameterTypes": [
          "java.util.Map",
          "java.lang.String"
        ]
      },
      {
        "name": "getLlmName",
        "parameterTypes": [
          "io.nop.ai.core.api.chat.AiChatOptions"
        ]
      },
      {
        "name": "getMessageContent",
        "parameterTypes": [
          "io.nop.ai.core.api.messages.AiMessage"
        ]
      },
      {
        "name": "getMessageStatus",
        "parameterTypes": [
          "java.util.Map",
          "java.lang.String"
        ]
      },
      {
        "name": "getModel",
        "parameterTypes": [
          "java.lang.String",
          "io.nop.ai.core.model.LlmModel",
          "io.nop.ai.core.api.chat.AiChatOptions"
        ]
      },
      {
        "name": "getModelModel",
        "parameterTypes": [
          "io.nop.ai.core.model.LlmModel",
          "java.lang.String"
        ]
      },
      {
        "name": "getRateLimiter",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getRole",
        "parameterTypes": [
          "io.nop.ai.core.api.messages.AiMessage"
        ]
      },
      {
        "name": "getString",
        "parameterTypes": [
          "java.util.Map",
          "java.lang.String"
        ]
      },
      {
        "name": "initBody",
        "parameterTypes": [
          "java.lang.String",
          "io.nop.ai.core.model.LlmModel",
          "java.lang.String",
          "java.util.Map",
          "io.nop.ai.core.api.messages.Prompt",
          "io.nop.ai.core.api.chat.AiChatOptions"
        ]
      },
      {
        "name": "initBody",
        "parameterTypes": [
          "java.lang.String",
          "io.nop.ai.core.model.LlmModel",
          "java.util.Map",
          "io.nop.ai.core.api.messages.Prompt",
          "io.nop.ai.core.api.chat.AiChatOptions"
        ]
      },
      {
        "name": "initHeaders",
        "parameterTypes": [
          "io.nop.http.api.client.HttpRequest",
          "io.nop.ai.core.api.chat.AiChatOptions"
        ]
      },
      {
        "name": "loadLlmModel",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "logRequest",
        "parameterTypes": [
          "io.nop.ai.core.api.messages.AiMessage"
        ]
      },
      {
        "name": "logResponse",
        "parameterTypes": [
          "io.nop.ai.core.api.messages.AiChatExchange"
        ]
      },
      {
        "name": "logResponse",
        "parameterTypes": [
          "io.nop.ai.core.api.messages.AiChatResponse"
        ]
      },
      {
        "name": "parseHttpResponse",
        "parameterTypes": [
          "java.lang.String",
          "io.nop.ai.core.model.LlmModel",
          "java.util.Map",
          "io.nop.ai.core.api.messages.AiChatExchange"
        ]
      },
      {
        "name": "parseHttpResponse",
        "parameterTypes": [
          "java.lang.String",
          "io.nop.ai.core.model.LlmModel",
          "java.util.Map",
          "io.nop.ai.core.api.messages.AiChatResponse"
        ]
      },
      {
        "name": "parseToResult",
        "parameterTypes": [
          "io.nop.ai.core.api.messages.AiChatExchange",
          "io.nop.ai.core.model.LlmModel",
          "java.util.Map"
        ]
      },
      {
        "name": "parseToResult",
        "parameterTypes": [
          "io.nop.ai.core.api.messages.AiChatResponse",
          "io.nop.ai.core.model.LlmModel",
          "java.util.Map"
        ]
      },
      {
        "name": "parseToolCalls",
        "parameterTypes": [
          "io.nop.ai.core.model.LlmModel",
          "java.util.Map"
        ]
      },
      {
        "name": "setIfNotNull",
        "parameterTypes": [
          "java.util.Map",
          "java.lang.String",
          "java.lang.Object"
        ]
      },
      {
        "name": "setOptions",
        "parameterTypes": [
          "io.nop.ai.core.model.LlmModel",
          "java.util.Map",
          "io.nop.ai.core.api.messages.Prompt",
          "io.nop.ai.core.api.chat.AiChatOptions"
        ]
      },
      {
        "name": "toMessage",
        "parameterTypes": [
          "io.nop.ai.core.api.messages.AiMessage",
          "io.nop.ai.core.model.LlmModelModel",
          "boolean",
          "io.nop.ai.core.api.chat.AiChatOptions"
        ]
      }
    ],
    "name": "io.nop.ai.core.service.DefaultAiChatService"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [
      {
        "name": "API_STATUS_BAD_REQUEST"
      },
      {
        "name": "API_STATUS_FAIL"
      },
      {
        "name": "API_STATUS_FORBIDDEN"
      },
      {
        "name": "API_STATUS_NOT_FOUND"
      },
      {
        "name": "API_STATUS_OK"
      },
      {
        "name": "API_STATUS_TIMEOUT"
      },
      {
        "name": "API_STATUS_UNAUTHORIZED"
      },
      {
        "name": "ARG_KEY_PROP"
      },
      {
        "name": "ARG_ORDER_PROP"
      },
      {
        "name": "ATTR_SERVICE_CONTEXT"
      },
      {
        "name": "AUTH_FOR_ALL"
      },
      {
        "name": "AUTH_FOR_DELETE"
      },
      {
        "name": "AUTH_FOR_READ"
      },
      {
        "name": "AUTH_FOR_WRITE"
      },
      {
        "name": "BEAN_PROP_INCLUDE_JSON_IGNORE"
      },
      {
        "name": "BEAN_PROP_INCLUDE_READABLE"
      },
      {
        "name": "BEAN_PROP_INCLUDE_WRITABLE"
      },
      {
        "name": "BEAN_SCOPE_PROTOTYPE"
      },
      {
        "name": "BEAN_SCOPE_REQUEST"
      },
      {
        "name": "BEAN_SCOPE_SINGLETON"
      },
      {
        "name": "CONFIG_BEAN_CONTAINER"
      },
      {
        "name": "CONFIG_BEAN_ID"
      },
      {
        "name": "CONFIG_BEAN_TYPE"
      },
      {
        "name": "CONFIG_VALUE_NONE"
      },
      {
        "name": "DELTA_PATH_PREFIX"
      },
      {
        "name": "DIRECTIVE_PROP_META"
      },
      {
        "name": "EMPTY_STRING_ARRAY"
      },
      {
        "name": "ENCODED_PARAM_SELECTION"
      },
      {
        "name": "GRAPHQL_EXTENSION_BIZ_FATAL"
      },
      {
        "name": "GRAPHQL_EXTENSION_ERROR_CODE"
      },
      {
        "name": "GRAPHQL_EXTENSION_MSG"
      },
      {
        "name": "GRAPHQL_EXTENSION_STATUS"
      },
      {
        "name": "HEADER_ACCESS_TOKEN"
      },
      {
        "name": "HEADER_ACTOR"
      },
      {
        "name": "HEADER_APP_ID"
      },
      {
        "name": "HEADER_APP_ZONE"
      },
      {
        "name": "HEADER_BIZ_FAIL"
      },
      {
        "name": "HEADER_BIZ_KEY"
      },
      {
        "name": "HEADER_CLIENT_ADDR"
      },
      {
        "name": "HEADER_CONTENT_TYPE"
      },
      {
        "name": "HEADER_COOKIE"
      },
      {
        "name": "HEADER_DEVICE_ID"
      },
      {
        "name": "HEADER_HOST"
      },
      {
        "name": "HEADER_ID"
      },
      {
        "name": "HEADER_LOCALE"
      },
      {
        "name": "HEADER_ONE_WAY"
      },
      {
        "name": "HEADER_REL_ID"
      },
      {
        "name": "HEADER_SELECTION"
      },
      {
        "name": "HEADER_SHARD"
      },
      {
        "name": "HEADER_SVC_ACTION"
      },
      {
        "name": "HEADER_SVC_NAME"
      },
      {
        "name": "HEADER_SVC_ROUTE"
      },
      {
        "name": "HEADER_SVC_TAGS"
      },
      {
        "name": "HEADER_TAGS"
      },
      {
        "name": "HEADER_TASK_ID"
      },
      {
        "name": "HEADER_TENANT"
      },
      {
        "name": "HEADER_TIMEOUT"
      },
      {
        "name": "HEADER_TIMEZONE"
      },
      {
        "name": "HEADER_TRACE"
      },
      {
        "name": "HEADER_TXN_BRANCH_ID"
      },
      {
        "name": "HEADER_TXN_BRANCH_NO"
      },
      {
        "name": "HEADER_TXN_GROUP"
      },
      {
        "name": "HEADER_TXN_ID"
      },
      {
        "name": "HEADER_USER_ID"
      },
      {
        "name": "HEADER_VERSION"
      },
      {
        "name": "HTTP_HEADER_PREFIX"
      },
      {
        "name": "INTERCEPTOR_PRIORITY_API_CONTEXT"
      },
      {
        "name": "INTERCEPTOR_PRIORITY_AUTH"
      },
      {
        "name": "INTERCEPTOR_PRIORITY_CACHE"
      },
      {
        "name": "INTERCEPTOR_PRIORITY_FLOW_CONTROL"
      },
      {
        "name": "INTERCEPTOR_PRIORITY_SINGLE_SESSION"
      },
      {
        "name": "INTERCEPTOR_PRIORITY_TCC"
      },
      {
        "name": "INTERCEPTOR_PRIORITY_TRANSACTIONAL"
      },
      {
        "name": "MDC_NOP_SESSION"
      },
      {
        "name": "MDC_NOP_TENANT"
      },
      {
        "name": "MDC_NOP_TRACE"
      },
      {
        "name": "MDC_NOP_USER"
      },
      {
        "name": "META_KEY_TAGS"
      },
      {
        "name": "NO_VALUE"
      },
      {
        "name": "PARAM_BIZ_OBJ_NAME"
      },
      {
        "name": "PARAM_DISPLAY_NAME"
      },
      {
        "name": "PARAM_ENTITY_NAME"
      },
      {
        "name": "PARAM_FIELD_DISPLAY_NAME"
      },
      {
        "name": "PARAM_FIELD_NAME"
      },
      {
        "name": "PARAM_OBJ_NAME"
      },
      {
        "name": "PARAM_PROP_NAME"
      },
      {
        "name": "PARAM_REF_BIZ_OBJ_NAME"
      },
      {
        "name": "PARAM_REF_ENTITY_NAME"
      },
      {
        "name": "PROP_TARGET_HOST"
      },
      {
        "name": "SYS_PARAM_SELECTION"
      },
      {
        "name": "TEMP_HEADER_PREFIX"
      },
      {
        "name": "TENANT_PATH_PREFIX"
      },
      {
        "name": "TREE_BEAN_PROP_BODY"
      },
      {
        "name": "TREE_BEAN_PROP_LOC"
      },
      {
        "name": "TREE_BEAN_PROP_TYPE"
      },
      {
        "name": "XML_PROP_TYPE"
      },
      {
        "name": "YES_VALUE"
      }
    ],
    "methods": [],
    "name": "io.nop.api.core.ApiConstants"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.api.core.auth.ISecurityContext"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "attrs",
        "parameterTypes": []
      },
      {
        "name": "containsLabel",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "containsValue",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "deepClone",
        "parameterTypes": []
      },
      {
        "name": "freeze",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "frozen",
        "parameterTypes": []
      },
      {
        "name": "getAttrs",
        "parameterTypes": []
      },
      {
        "name": "getDescription",
        "parameterTypes": []
      },
      {
        "name": "getLabel",
        "parameterTypes": []
      },
      {
        "name": "getLabelByValue",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "getLabels",
        "parameterTypes": []
      },
      {
        "name": "getLocale",
        "parameterTypes": []
      },
      {
        "name": "getLocation",
        "parameterTypes": []
      },
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "getOptionByLabel",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getOptionByValue",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "getOptionCount",
        "parameterTypes": []
      },
      {
        "name": "getOptions",
        "parameterTypes": []
      },
      {
        "name": "getTagSet",
        "parameterTypes": []
      },
      {
        "name": "getValueByLabel",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getValueType",
        "parameterTypes": []
      },
      {
        "name": "getValues",
        "parameterTypes": []
      },
      {
        "name": "isDeprecated",
        "parameterTypes": []
      },
      {
        "name": "isInternal",
        "parameterTypes": []
      },
      {
        "name": "isNormalized",
        "parameterTypes": []
      },
      {
        "name": "isStatic",
        "parameterTypes": []
      },
      {
        "name": "normalize",
        "parameterTypes": []
      },
      {
        "name": "setAttr",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object"
        ]
      },
      {
        "name": "setAttrs",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "setDeprecated",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setDescription",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setInternal",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setLabel",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setLocale",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setLocation",
        "parameterTypes": [
          "io.nop.api.core.util.SourceLocation"
        ]
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setNormalized",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setOptions",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setStatic",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setTagSet",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setValueType",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.api.core.beans.DictBean"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "deepClone",
        "parameterTypes": []
      },
      {
        "name": "freeze",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "frozen",
        "parameterTypes": []
      },
      {
        "name": "getAttrs",
        "parameterTypes": []
      },
      {
        "name": "getCode",
        "parameterTypes": []
      },
      {
        "name": "getDescription",
        "parameterTypes": []
      },
      {
        "name": "getGroup",
        "parameterTypes": []
      },
      {
        "name": "getLabel",
        "parameterTypes": []
      },
      {
        "name": "getValue",
        "parameterTypes": []
      },
      {
        "name": "isDeprecated",
        "parameterTypes": []
      },
      {
        "name": "isInternal",
        "parameterTypes": []
      },
      {
        "name": "setAttr",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object"
        ]
      },
      {
        "name": "setAttrs",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "setCode",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDeprecated",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setDescription",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setGroup",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setInternal",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setLabel",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setValue",
        "parameterTypes": [
          "java.lang.Object"
        ]
      }
    ],
    "name": "io.nop.api.core.beans.DictOptionBean"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [
      {
        "name": "BETWEEN_POSTFIX"
      },
      {
        "name": "BETWEEN_PREFIX"
      },
      {
        "name": "DUMMY_TAG_NAME"
      },
      {
        "name": "FILTER_ATTR_EXCLUDE_MAX"
      },
      {
        "name": "FILTER_ATTR_EXCLUDE_MIN"
      },
      {
        "name": "FILTER_ATTR_MAX"
      },
      {
        "name": "FILTER_ATTR_MAX_NAME"
      },
      {
        "name": "FILTER_ATTR_MIN"
      },
      {
        "name": "FILTER_ATTR_MIN_NAME"
      },
      {
        "name": "FILTER_ATTR_NAME"
      },
      {
        "name": "FILTER_ATTR_OWNER"
      },
      {
        "name": "FILTER_ATTR_VALUE"
      },
      {
        "name": "FILTER_ATTR_VALUE_NAME"
      },
      {
        "name": "FILTER_ATTR_VALUE_OWNER"
      },
      {
        "name": "FILTER_OP_ALWAYS_FALSE"
      },
      {
        "name": "FILTER_OP_ALWAYS_TRUE"
      },
      {
        "name": "FILTER_OP_AND"
      },
      {
        "name": "FILTER_OP_BETWEEN"
      },
      {
        "name": "FILTER_OP_CONTAINS"
      },
      {
        "name": "FILTER_OP_DATETIME_BETWEEN"
      },
      {
        "name": "FILTER_OP_DATE_BETWEEN"
      },
      {
        "name": "FILTER_OP_ENDS_WITH"
      },
      {
        "name": "FILTER_OP_EQ"
      },
      {
        "name": "FILTER_OP_EXPR"
      },
      {
        "name": "FILTER_OP_GE"
      },
      {
        "name": "FILTER_OP_GT"
      },
      {
        "name": "FILTER_OP_ICONTAINS"
      },
      {
        "name": "FILTER_OP_IN"
      },
      {
        "name": "FILTER_OP_IS_BLANK"
      },
      {
        "name": "FILTER_OP_IS_EMPTY"
      },
      {
        "name": "FILTER_OP_IS_FALSE"
      },
      {
        "name": "FILTER_OP_IS_NULL"
      },
      {
        "name": "FILTER_OP_IS_NUMBER"
      },
      {
        "name": "FILTER_OP_IS_TRUE"
      },
      {
        "name": "FILTER_OP_LE"
      },
      {
        "name": "FILTER_OP_LENGTH"
      },
      {
        "name": "FILTER_OP_LENGTH_BETWEEN"
      },
      {
        "name": "FILTER_OP_LIKE"
      },
      {
        "name": "FILTER_OP_LT"
      },
      {
        "name": "FILTER_OP_NE"
      },
      {
        "name": "FILTER_OP_NOT"
      },
      {
        "name": "FILTER_OP_NOT_BETWEEN"
      },
      {
        "name": "FILTER_OP_NOT_BLANK"
      },
      {
        "name": "FILTER_OP_NOT_CONTAINS"
      },
      {
        "name": "FILTER_OP_NOT_EMPTY"
      },
      {
        "name": "FILTER_OP_NOT_FALSE"
      },
      {
        "name": "FILTER_OP_NOT_IN"
      },
      {
        "name": "FILTER_OP_NOT_NULL"
      },
      {
        "name": "FILTER_OP_NOT_NUMBER"
      },
      {
        "name": "FILTER_OP_NOT_TRUE"
      },
      {
        "name": "FILTER_OP_OR"
      },
      {
        "name": "FILTER_OP_REGEX"
      },
      {
        "name": "FILTER_OP_SQL"
      },
      {
        "name": "FILTER_OP_STARTS_WITH"
      },
      {
        "name": "FILTER_TAG_NAME"
      }
    ],
    "methods": [],
    "name": "io.nop.api.core.beans.FilterBeanConstants"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.api.core.beans.query.OrderFieldBean"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.api.core.beans.query.QueryBean"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.api.core.json.IJsonString"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getInputStream",
        "parameterTypes": []
      },
      {
        "name": "getPath",
        "parameterTypes": []
      },
      {
        "name": "lastModified",
        "parameterTypes": []
      },
      {
        "name": "length",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.api.core.resource.IResourceReference"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [
      {
        "name": "CHARSET_ISO_8859_1"
      },
      {
        "name": "CHARSET_UTF8"
      },
      {
        "name": "ENCODING_UTF8"
      },
      {
        "allowWrite": true,
        "name": "FUTURE_DATE"
      },
      {
        "allowWrite": true,
        "name": "INVALID_DATE"
      },
      {
        "name": "JAVA_ESCAPE_CHARS"
      },
      {
        "name": "JAVA_ESCAPE_STRS"
      }
    ],
    "methods": [
      {
        "name": "_indexOf",
        "parameterTypes": [
          "[C",
          "char"
        ]
      },
      {
        "name": "appendQuery",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "decodeURL",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "decodeURL",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "dropZero",
        "parameterTypes": [
          "double"
        ]
      },
      {
        "name": "encodeStringMap",
        "parameterTypes": [
          "java.util.Map",
          "char",
          "char"
        ]
      },
      {
        "name": "encodeURL",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "encodeURL",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "escape",
        "parameterTypes": [
          "java.lang.CharSequence",
          "[C",
          "[Ljava.lang.String;"
        ]
      },
      {
        "name": "escapeJava",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "fileSizeString",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "getStdPath",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "hasText",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "indexOfInRange",
        "parameterTypes": [
          "java.lang.CharSequence",
          "int",
          "int",
          "int"
        ]
      },
      {
        "name": "isAllDigit",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "isAllZero",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "isAsciiLetter",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "isBlank",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "isDigit",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "isEmpty",
        "parameterTypes": [
          "java.lang.CharSequence"
        ]
      },
      {
        "name": "isEmptyObject",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "isNotBlank",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "isNotEmpty",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "isSpace",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "join",
        "parameterTypes": [
          "java.lang.Iterable",
          "java.lang.String"
        ]
      },
      {
        "name": "join",
        "parameterTypes": [
          "java.lang.Iterable",
          "java.lang.String",
          "boolean"
        ]
      },
      {
        "name": "onlyChars",
        "parameterTypes": [
          "java.lang.String",
          "boolean",
          "boolean",
          "java.lang.String"
        ]
      },
      {
        "name": "parseSlotScope",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "parseStringMap",
        "parameterTypes": [
          "java.lang.String",
          "char",
          "char"
        ]
      },
      {
        "name": "quote",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "renderTemplate",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String",
          "java.lang.String",
          "java.util.function.Function"
        ]
      },
      {
        "name": "renderTemplate",
        "parameterTypes": [
          "java.lang.String",
          "java.util.function.Function"
        ]
      },
      {
        "name": "renderTemplate2",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String",
          "java.lang.String",
          "java.util.function.BiFunction"
        ]
      },
      {
        "name": "renderTemplateForScope",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String",
          "java.lang.String",
          "java.util.Map"
        ]
      },
      {
        "name": "split",
        "parameterTypes": [
          "java.lang.String",
          "char"
        ]
      },
      {
        "name": "strip",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "stripedSplit",
        "parameterTypes": [
          "java.lang.String",
          "char"
        ]
      },
      {
        "name": "stripedSplit",
        "parameterTypes": [
          "java.lang.String",
          "char",
          "boolean"
        ]
      }
    ],
    "name": "io.nop.api.core.util.ApiStringHelper"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.api.core.util.Guard"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.api.core.util.ICancelToken"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.api.core.util.ICancellable"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.api.core.util.ICloneable"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.api.core.util.IComponentModel"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.api.core.util.IDeepCloneable"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "freeze",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "frozen",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.api.core.util.IFreezable"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getLocation",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.api.core.util.ISourceLocationGetter"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "setLocation",
        "parameterTypes": [
          "io.nop.api.core.util.SourceLocation"
        ]
      }
    ],
    "name": "io.nop.api.core.util.ISourceLocationSetter"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.api.core.util.IWithIdentifier"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "buildChunkProcessor",
        "parameterTypes": [
          "io.nop.batch.core.IBatchTaskContext"
        ]
      }
    ],
    "name": "io.nop.batch.core.BatchTaskBuilder"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "processChunk",
        "parameterTypes": [
          "io.nop.batch.core.IBatchTaskContext",
          "int",
          "io.nop.batch.core.IBatchChunkProcessorProvider$IBatchChunkProcessor"
        ]
      },
      {
        "name": "propagateContext",
        "parameterTypes": [
          "io.nop.api.core.context.IContext",
          "io.nop.batch.core.IBatchTaskContext"
        ]
      }
    ],
    "name": "io.nop.batch.core.impl.BatchTask"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.batch.core.impl.BatchTaskContextImpl"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "processChunk",
        "parameterTypes": [
          "io.nop.batch.core.IBatchTaskContext",
          "int"
        ]
      }
    ],
    "name": "io.nop.batch.core.impl.BatchTaskExecution"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.batch.dao.entity.NopBatchFile"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.batch.dao.entity.NopBatchRecordResult"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.batch.dao.entity.NopBatchTask"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.batch.dao.entity.NopBatchTaskVar"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "newInstance",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.batch.dao.entity._gen._NopBatchFile"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "newInstance",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.batch.dao.entity._gen._NopBatchRecordResult"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "newInstance",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.batch.dao.entity._gen._NopBatchTask"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "newInstance",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.batch.dao.entity._gen._NopBatchTaskVar"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.batch.dao.history.DaoBatchHistoryStoreBuilder"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "loadExistingTask",
        "parameterTypes": [
          "io.nop.dao.api.IEntityDao",
          "io.nop.batch.core.IBatchTaskContext"
        ]
      },
      {
        "name": "newTask",
        "parameterTypes": [
          "io.nop.dao.api.IEntityDao"
        ]
      },
      {
        "name": "saveTask",
        "parameterTypes": [
          "io.nop.dao.api.IEntityDao",
          "io.nop.batch.dao.entity.NopBatchTask"
        ]
      },
      {
        "name": "taskDao",
        "parameterTypes": []
      },
      {
        "name": "updateTask",
        "parameterTypes": [
          "io.nop.dao.api.IEntityDao",
          "io.nop.batch.dao.entity.NopBatchTask"
        ]
      }
    ],
    "name": "io.nop.batch.dao.store.DaoBatchStateStore"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.batch.dsl.manager.BatchTaskManagerImpl"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.batch.dsl.model.BatchConsumerModel"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.batch.dsl.model.BatchFileReaderModel"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.batch.dsl.model.BatchFileWriterModel"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.batch.dsl.model.BatchGeneratorModel"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.batch.dsl.model.BatchListenersModel"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.batch.dsl.model.BatchLoaderDispatcherModel"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.batch.dsl.model.BatchLoaderModel"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.batch.dsl.model.BatchOrmReaderModel"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.batch.dsl.model.BatchOrmWriterModel"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.batch.dsl.model.BatchProcessorModel"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.batch.dsl.model.BatchTaskModel"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "copyTo",
        "parameterTypes": [
          "io.nop.batch.dsl.model.BatchConsumerModel"
        ]
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "outputJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      }
    ],
    "name": "io.nop.batch.dsl.model._gen._BatchConsumerModel"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "copyTo",
        "parameterTypes": [
          "io.nop.batch.dsl.model.BatchFileReaderModel"
        ]
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "outputJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      }
    ],
    "name": "io.nop.batch.dsl.model._gen._BatchFileReaderModel"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "copyTo",
        "parameterTypes": [
          "io.nop.batch.dsl.model.BatchFileWriterModel"
        ]
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "outputJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      }
    ],
    "name": "io.nop.batch.dsl.model._gen._BatchFileWriterModel"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "copyTo",
        "parameterTypes": [
          "io.nop.batch.dsl.model.BatchGeneratorModel"
        ]
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "outputJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      }
    ],
    "name": "io.nop.batch.dsl.model._gen._BatchGeneratorModel"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "copyTo",
        "parameterTypes": [
          "io.nop.batch.dsl.model.BatchListenersModel"
        ]
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "outputJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      }
    ],
    "name": "io.nop.batch.dsl.model._gen._BatchListenersModel"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "copyTo",
        "parameterTypes": [
          "io.nop.batch.dsl.model.BatchLoaderDispatcherModel"
        ]
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "outputJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      }
    ],
    "name": "io.nop.batch.dsl.model._gen._BatchLoaderDispatcherModel"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "copyTo",
        "parameterTypes": [
          "io.nop.batch.dsl.model.BatchLoaderModel"
        ]
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "outputJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      }
    ],
    "name": "io.nop.batch.dsl.model._gen._BatchLoaderModel"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "copyTo",
        "parameterTypes": [
          "io.nop.batch.dsl.model.BatchOrmReaderModel"
        ]
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "outputJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      }
    ],
    "name": "io.nop.batch.dsl.model._gen._BatchOrmReaderModel"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "copyTo",
        "parameterTypes": [
          "io.nop.batch.dsl.model.BatchOrmWriterModel"
        ]
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "outputJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      }
    ],
    "name": "io.nop.batch.dsl.model._gen._BatchOrmWriterModel"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "copyTo",
        "parameterTypes": [
          "io.nop.batch.dsl.model.BatchProcessorModel"
        ]
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "outputJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      }
    ],
    "name": "io.nop.batch.dsl.model._gen._BatchProcessorModel"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "copyTo",
        "parameterTypes": [
          "io.nop.batch.dsl.model.BatchTaskModel"
        ]
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "outputJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      }
    ],
    "name": "io.nop.batch.dsl.model._gen._BatchTaskModel"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.batch.gen.model.BatchGenCaseModel"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.batch.gen.model.BatchGenModel"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "doParseResource",
        "parameterTypes": [
          "io.nop.core.resource.IResource"
        ]
      }
    ],
    "name": "io.nop.batch.gen.model.BatchGenModelParser"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [
      {
        "name": "LOG"
      },
      {
        "name": "s_loc"
      }
    ],
    "methods": [
      {
        "name": "execute",
        "parameterTypes": [
          "java.lang.String",
          "io.nop.core.lang.eval.IEvalScope"
        ]
      },
      {
        "name": "execute",
        "parameterTypes": [
          "java.lang.String",
          "java.util.Map",
          "io.nop.core.lang.eval.IEvalScope"
        ]
      },
      {
        "name": "forPostcompile",
        "parameterTypes": [
          "java.lang.String",
          "boolean"
        ]
      },
      {
        "name": "forPrecompile",
        "parameterTypes": [
          "java.lang.String",
          "boolean"
        ]
      },
      {
        "name": "forPrecompile2",
        "parameterTypes": [
          "java.lang.String",
          "boolean"
        ]
      },
      {
        "name": "forProjectTpl",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String",
          "boolean"
        ]
      },
      {
        "name": "getTargetPath",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getTplPath",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "loadTpl",
        "parameterTypes": [
          "io.nop.core.resource.IResource"
        ]
      },
      {
        "name": "loadTpl",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "loadTplFromResource",
        "parameterTypes": [
          "io.nop.core.resource.IResource"
        ]
      },
      {
        "name": "newCodeGenerator",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "renderModel",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String",
          "java.lang.String",
          "io.nop.core.lang.eval.IEvalScope"
        ]
      },
      {
        "name": "runPostcompile",
        "parameterTypes": [
          "java.io.File",
          "java.lang.String",
          "boolean"
        ]
      },
      {
        "name": "runPrecompile",
        "parameterTypes": [
          "java.io.File",
          "java.lang.String",
          "boolean"
        ]
      },
      {
        "name": "runPrecompile2",
        "parameterTypes": [
          "java.io.File",
          "java.lang.String",
          "boolean"
        ]
      },
      {
        "name": "runProjectFile",
        "parameterTypes": [
          "java.io.File",
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "withTargetDir",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "withTplDir",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.codegen.XCodeGenerator"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "addField",
        "parameterTypes": [
          "io.nop.codegen.graalvm.ReflectField"
        ]
      },
      {
        "name": "addMethod",
        "parameterTypes": [
          "io.nop.codegen.graalvm.ReflectMethod"
        ]
      },
      {
        "name": "getFields",
        "parameterTypes": []
      },
      {
        "name": "getMethods",
        "parameterTypes": []
      },
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "isAllDeclaredConstructors",
        "parameterTypes": []
      },
      {
        "name": "isAllDeclaredMethods",
        "parameterTypes": []
      },
      {
        "name": "isAllPublicConstructors",
        "parameterTypes": []
      },
      {
        "name": "isAllPublicMethods",
        "parameterTypes": []
      },
      {
        "name": "isEmpty",
        "parameterTypes": []
      },
      {
        "name": "isUnsafeAllocated",
        "parameterTypes": []
      },
      {
        "name": "merge",
        "parameterTypes": [
          "io.nop.codegen.graalvm.ReflectClass"
        ]
      },
      {
        "name": "remove",
        "parameterTypes": [
          "io.nop.codegen.graalvm.ReflectClass"
        ]
      },
      {
        "name": "setAllDeclaredConstructors",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setAllDeclaredMethods",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setAllPublicConstructors",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setAllPublicMethods",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setFields",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setMethods",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setUnsafeAllocated",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "sort",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.codegen.graalvm.ReflectClass"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "isAllowUnsafeAccess",
        "parameterTypes": []
      },
      {
        "name": "isAllowWrite",
        "parameterTypes": []
      },
      {
        "name": "merge",
        "parameterTypes": [
          "io.nop.codegen.graalvm.ReflectField"
        ]
      },
      {
        "name": "setAllowUnsafeAccess",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setAllowWrite",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.codegen.graalvm.ReflectField"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "compareTo",
        "parameterTypes": [
          "io.nop.codegen.graalvm.ReflectMethod"
        ]
      },
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "getParameterTypes",
        "parameterTypes": []
      },
      {
        "name": "getSignature",
        "parameterTypes": []
      },
      {
        "name": "merge",
        "parameterTypes": [
          "io.nop.codegen.graalvm.ReflectMethod"
        ]
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setParameterTypes",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "toParamString",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.codegen.graalvm.ReflectMethod"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.codegen.initialize.CodeGenAfterInitialization"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.codegen.initialize.CodeGenCoreInitializer"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.commons.bytes.ByteString"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "async",
        "parameterTypes": []
      },
      {
        "name": "clone",
        "parameterTypes": []
      },
      {
        "name": "destroyOnRemove",
        "parameterTypes": []
      },
      {
        "name": "expireAfterAccess",
        "parameterTypes": [
          "java.time.Duration"
        ]
      },
      {
        "name": "expireAfterWrite",
        "parameterTypes": [
          "java.time.Duration"
        ]
      },
      {
        "name": "getExpireAfterAccess",
        "parameterTypes": []
      },
      {
        "name": "getExpireAfterWrite",
        "parameterTypes": []
      },
      {
        "name": "getMaximumSize",
        "parameterTypes": []
      },
      {
        "name": "getMaximumWeight",
        "parameterTypes": []
      },
      {
        "name": "getRefreshAfterWrite",
        "parameterTypes": []
      },
      {
        "name": "isAsync",
        "parameterTypes": []
      },
      {
        "name": "isCacheTypeChanged",
        "parameterTypes": [
          "io.nop.commons.cache.CacheConfig"
        ]
      },
      {
        "name": "isDestroyOnRemove",
        "parameterTypes": []
      },
      {
        "name": "isUseMetrics",
        "parameterTypes": []
      },
      {
        "name": "isWeakKeys",
        "parameterTypes": []
      },
      {
        "name": "isWeakValues",
        "parameterTypes": []
      },
      {
        "name": "newConfig",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "newConfig",
        "parameterTypes": [
          "int",
          "long"
        ]
      },
      {
        "name": "setAsync",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setDestroyOnRemove",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setExpireAfterAccess",
        "parameterTypes": [
          "java.time.Duration"
        ]
      },
      {
        "name": "setExpireAfterWrite",
        "parameterTypes": [
          "java.time.Duration"
        ]
      },
      {
        "name": "setMaximumSize",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "setMaximumWeight",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "setRefreshAfterWrite",
        "parameterTypes": [
          "java.time.Duration"
        ]
      },
      {
        "name": "setUseMetrics",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setWeakKeys",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setWeakValues",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "useMetrics",
        "parameterTypes": []
      },
      {
        "name": "weakKeys",
        "parameterTypes": []
      },
      {
        "name": "weakValues",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.commons.cache.CacheConfig"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "buildCache",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "buildFullName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "clearAllCache",
        "parameterTypes": []
      },
      {
        "name": "getCache",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getConfig",
        "parameterTypes": []
      },
      {
        "name": "refreshConfig",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.commons.cache.LocalCacheProvider"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "add",
        "parameterTypes": [
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "add",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "addAllUnique",
        "parameterTypes": [
          "java.util.Collection"
        ]
      },
      {
        "name": "clear",
        "parameterTypes": []
      },
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "contains",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "containsKey",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "emptyList",
        "parameterTypes": []
      },
      {
        "name": "freeze",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "freezeList",
        "parameterTypes": []
      },
      {
        "name": "fromList",
        "parameterTypes": [
          "java.util.List",
          "java.util.function.Function"
        ]
      },
      {
        "name": "frozen",
        "parameterTypes": []
      },
      {
        "name": "get",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "getByKey",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getKey",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "indexOf",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "keySet",
        "parameterTypes": []
      },
      {
        "name": "lastIndexOf",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "remove",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "remove",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "removeByKey",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "set",
        "parameterTypes": [
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "size",
        "parameterTypes": []
      },
      {
        "name": "sort",
        "parameterTypes": []
      },
      {
        "name": "sort",
        "parameterTypes": [
          "java.util.Comparator"
        ]
      },
      {
        "name": "toString",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.commons.collections.KeyedList"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "expandList",
        "parameterTypes": [
          "java.util.Collection",
          "int"
        ]
      },
      {
        "name": "pop",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "push",
        "parameterTypes": [
          "java.util.List",
          "java.lang.Object"
        ]
      },
      {
        "name": "push",
        "parameterTypes": [
          "java.util.List",
          "java.lang.Object",
          "[Ljava.lang.Object;"
        ]
      },
      {
        "name": "reduceRight",
        "parameterTypes": [
          "java.util.List",
          "java.util.function.BiFunction",
          "java.lang.Object"
        ]
      },
      {
        "name": "reverse",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "shift",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "slice",
        "parameterTypes": [
          "java.util.List",
          "int",
          "java.lang.Integer"
        ]
      },
      {
        "name": "splice",
        "parameterTypes": [
          "java.util.List",
          "int",
          "int"
        ]
      },
      {
        "name": "splice",
        "parameterTypes": [
          "java.util.List",
          "int",
          "int",
          "[Ljava.lang.Object;"
        ]
      },
      {
        "name": "unshift",
        "parameterTypes": [
          "java.util.List",
          "java.lang.Object"
        ]
      },
      {
        "name": "unshift",
        "parameterTypes": [
          "java.util.List",
          "java.lang.Object",
          "[Ljava.lang.Object;"
        ]
      }
    ],
    "name": "io.nop.commons.collections.ListFunctions"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "concat",
        "parameterTypes": [
          "java.util.Collection",
          "java.lang.Object"
        ]
      },
      {
        "name": "concat",
        "parameterTypes": [
          "java.util.Collection",
          "java.lang.Object",
          "[Ljava.lang.Object;"
        ]
      },
      {
        "name": "every",
        "parameterTypes": [
          "java.lang.Iterable",
          "java.util.function.Predicate"
        ]
      },
      {
        "name": "filter",
        "parameterTypes": [
          "java.lang.Iterable",
          "java.util.function.Predicate"
        ]
      },
      {
        "name": "flatMap",
        "parameterTypes": [
          "java.util.Collection",
          "java.util.function.Function"
        ]
      },
      {
        "name": "hasNext",
        "parameterTypes": [
          "java.util.Collection",
          "int"
        ]
      },
      {
        "name": "includes",
        "parameterTypes": [
          "java.util.Collection",
          "java.lang.Object"
        ]
      },
      {
        "name": "join",
        "parameterTypes": [
          "java.util.Collection",
          "java.lang.String"
        ]
      },
      {
        "name": "map",
        "parameterTypes": [
          "java.util.Collection",
          "java.util.function.Function"
        ]
      },
      {
        "name": "reduce",
        "parameterTypes": [
          "java.util.Collection",
          "java.util.function.BiFunction",
          "java.lang.Object"
        ]
      },
      {
        "name": "some",
        "parameterTypes": [
          "java.util.Collection",
          "java.util.function.Predicate"
        ]
      },
      {
        "name": "toString",
        "parameterTypes": [
          "java.util.Collection"
        ]
      }
    ],
    "name": "io.nop.commons.collections.SetFunctions"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.commons.concurrent.executor.BaseThreadPoolConfig"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.commons.concurrent.executor.ThreadPoolConfig"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.commons.lang.IAttributeSet"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getTagSet",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.commons.lang.ITagSetSupport"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.commons.lang.impl.Cancellable"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [
      {
        "name": "LOG"
      },
      {
        "allowWrite": true,
        "name": "s_instance"
      }
    ],
    "methods": [
      {
        "name": "instance",
        "parameterTypes": []
      },
      {
        "name": "print",
        "parameterTypes": []
      },
      {
        "name": "registerInstance",
        "parameterTypes": [
          "io.micrometer.core.instrument.MeterRegistry"
        ]
      }
    ],
    "name": "io.nop.commons.metrics.GlobalMeterRegistry"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.commons.service.ILifeCycle"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "checkIsActive",
        "parameterTypes": []
      },
      {
        "name": "doStart",
        "parameterTypes": []
      },
      {
        "name": "doStop",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.commons.service.LifeCycleSupport"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [
      {
        "name": "lower"
      },
      {
        "name": "upper"
      }
    ],
    "methods": [
      {
        "name": "normalize",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "valueOf",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "values",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.commons.text.CharacterCase"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.commons.text.marker.IMarkedString"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getMarkerDumpText",
        "parameterTypes": [
          "io.nop.commons.text.marker.Marker"
        ]
      }
    ],
    "name": "io.nop.commons.text.marker.MarkedString"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "addMarker",
        "parameterTypes": [
          "io.nop.commons.text.marker.Marker"
        ]
      }
    ],
    "name": "io.nop.commons.text.marker.MarkedStringBuilderT"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [
      {
        "name": "ANY"
      },
      {
        "name": "ARRAY"
      },
      {
        "name": "BIGINT"
      },
      {
        "name": "BOOLEAN"
      },
      {
        "name": "CHAR"
      },
      {
        "name": "DATE"
      },
      {
        "name": "DATETIME"
      },
      {
        "name": "DECIMAL"
      },
      {
        "name": "DOUBLE"
      },
      {
        "name": "FLOAT"
      },
      {
        "name": "GEOMETRY"
      },
      {
        "name": "INTEGER"
      },
      {
        "name": "JSON"
      },
      {
        "name": "NUMERIC"
      },
      {
        "name": "OTHER"
      },
      {
        "name": "REAL"
      },
      {
        "name": "SMALLINT"
      },
      {
        "name": "TIME"
      },
      {
        "name": "TIMESTAMP"
      },
      {
        "name": "TINYINT"
      },
      {
        "name": "VARBINARY"
      },
      {
        "name": "VARCHAR"
      }
    ],
    "methods": [
      {
        "name": "convert",
        "parameterTypes": [
          "java.lang.Object",
          "java.util.function.Function"
        ]
      },
      {
        "name": "fromJavaClass",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "fromJdbcType",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "fromStdDataTYpe",
        "parameterTypes": [
          "io.nop.commons.type.StdDataType"
        ]
      },
      {
        "name": "fromStdName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getJdbcType",
        "parameterTypes": []
      },
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "getNames",
        "parameterTypes": []
      },
      {
        "name": "getStdDataType",
        "parameterTypes": []
      },
      {
        "name": "isAllowPrecision",
        "parameterTypes": []
      },
      {
        "name": "isAllowScale",
        "parameterTypes": []
      },
      {
        "name": "isCompatibleWith",
        "parameterTypes": [
          "io.nop.commons.type.StdSqlType"
        ]
      },
      {
        "name": "valueOf",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "values",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.commons.type.StdSqlType"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [
      {
        "name": "COMPACT_DATE_FORMATTER"
      },
      {
        "name": "COMPACT_DATE_TIME_FORMATTER"
      },
      {
        "name": "DATETIME_FORMATTER"
      },
      {
        "name": "DATE_FORMATTER"
      },
      {
        "name": "INVALID_DATE"
      },
      {
        "name": "ONE_DAY_TS"
      },
      {
        "name": "ONE_HOUR_TS"
      },
      {
        "name": "ONE_MINUTE_TS"
      },
      {
        "name": "PATTERN_MS"
      },
      {
        "name": "TIMESTAMP_FORMATTER"
      },
      {
        "name": "TIME_FORMATTER"
      }
    ],
    "methods": [
      {
        "name": "buildFormatter",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "currentDate",
        "parameterTypes": []
      },
      {
        "name": "currentDateTime",
        "parameterTypes": []
      },
      {
        "name": "currentLocalDate",
        "parameterTypes": []
      },
      {
        "name": "currentTimeMillis",
        "parameterTypes": []
      },
      {
        "name": "dateDiff",
        "parameterTypes": [
          "java.time.LocalDate",
          "java.time.LocalDate"
        ]
      },
      {
        "name": "dateMillis",
        "parameterTypes": [
          "int",
          "int",
          "int"
        ]
      },
      {
        "name": "dateTimeToMillis",
        "parameterTypes": [
          "java.time.LocalDateTime"
        ]
      },
      {
        "name": "dateTimeToTimestamp",
        "parameterTypes": [
          "java.time.LocalDateTime"
        ]
      },
      {
        "name": "dateToMillis",
        "parameterTypes": [
          "java.time.LocalDate"
        ]
      },
      {
        "name": "diffDays",
        "parameterTypes": [
          "java.time.LocalDate",
          "java.time.LocalDate"
        ]
      },
      {
        "name": "firstDayOfMonth",
        "parameterTypes": [
          "java.time.LocalDate"
        ]
      },
      {
        "name": "firstDayOfNextMonth",
        "parameterTypes": [
          "java.time.LocalDate"
        ]
      },
      {
        "name": "firstDayOfNextYear",
        "parameterTypes": [
          "java.time.LocalDate"
        ]
      },
      {
        "name": "firstDayOfYear",
        "parameterTypes": [
          "java.time.LocalDate"
        ]
      },
      {
        "name": "firstInMonth",
        "parameterTypes": [
          "java.time.LocalDate",
          "int"
        ]
      },
      {
        "name": "formatDate",
        "parameterTypes": [
          "java.time.LocalDate",
          "java.lang.String"
        ]
      },
      {
        "name": "formatDate",
        "parameterTypes": [
          "java.util.Date",
          "java.lang.String"
        ]
      },
      {
        "name": "formatDateTime",
        "parameterTypes": [
          "java.time.LocalDateTime",
          "java.lang.String"
        ]
      },
      {
        "name": "formatJavaDate",
        "parameterTypes": [
          "java.util.Date",
          "java.lang.String"
        ]
      },
      {
        "name": "formatLocalDate",
        "parameterTypes": [
          "java.time.LocalDate",
          "java.lang.String"
        ]
      },
      {
        "name": "formatLocalDateTime",
        "parameterTypes": [
          "java.time.LocalDateTime",
          "java.lang.String"
        ]
      },
      {
        "name": "formatLocalTime",
        "parameterTypes": [
          "java.time.LocalTime",
          "java.lang.String"
        ]
      },
      {
        "name": "formatTime",
        "parameterTypes": [
          "java.time.LocalTime",
          "java.lang.String"
        ]
      },
      {
        "name": "formatTimestamp",
        "parameterTypes": [
          "java.sql.Timestamp",
          "java.lang.String"
        ]
      },
      {
        "name": "formatTimestampNoMillis",
        "parameterTypes": [
          "java.sql.Timestamp"
        ]
      },
      {
        "name": "fromUTC",
        "parameterTypes": [
          "java.time.LocalDateTime"
        ]
      },
      {
        "name": "getDayStart",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "getDayStartTs",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "getDayStartWithTimeZone",
        "parameterTypes": [
          "java.util.TimeZone",
          "long"
        ]
      },
      {
        "name": "getDayStartWithTimeZoneTs",
        "parameterTypes": [
          "java.util.TimeZone",
          "long"
        ]
      },
      {
        "name": "getHourStart",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "getHourStartTs",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "getMinuteStart",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "getMinuteStartTs",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "getMonthEnd",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "getMonthEndTs",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "getMonthEndWithTimeZone",
        "parameterTypes": [
          "java.util.TimeZone",
          "long"
        ]
      },
      {
        "name": "getMonthEndWithTimeZoneTs",
        "parameterTypes": [
          "java.util.TimeZone",
          "long"
        ]
      },
      {
        "name": "getMonthStart",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "getMonthStartTs",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "getMonthStartWithTimeZone",
        "parameterTypes": [
          "java.util.TimeZone",
          "long"
        ]
      },
      {
        "name": "getMonthStartWithTimeZoneTs",
        "parameterTypes": [
          "java.util.TimeZone",
          "long"
        ]
      },
      {
        "name": "getQuarterEnd",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "getQuarterEndTs",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "getQuarterEndWithTimeZone",
        "parameterTypes": [
          "java.util.TimeZone",
          "long"
        ]
      },
      {
        "name": "getQuarterEndWithTimeZoneTs",
        "parameterTypes": [
          "java.util.TimeZone",
          "long"
        ]
      },
      {
        "name": "getQuarterStart",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "getQuarterStartTs",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "getQuarterStartWithTimeZone",
        "parameterTypes": [
          "java.util.TimeZone",
          "long"
        ]
      },
      {
        "name": "getQuarterStartWithTimeZoneTs",
        "parameterTypes": [
          "java.util.TimeZone",
          "long"
        ]
      },
      {
        "name": "getWeekEnd",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "getWeekEndTs",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "getWeekEndWithTimeZone",
        "parameterTypes": [
          "java.util.TimeZone",
          "long"
        ]
      },
      {
        "name": "getWeekEndWithTimeZoneTs",
        "parameterTypes": [
          "java.util.TimeZone",
          "long"
        ]
      },
      {
        "name": "getWeekStart",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "getWeekStartTs",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "getWeekStartWithTimeZone",
        "parameterTypes": [
          "java.util.TimeZone",
          "long"
        ]
      },
      {
        "name": "getWeekStartWithTimeZoneTs",
        "parameterTypes": [
          "java.util.TimeZone",
          "long"
        ]
      },
      {
        "name": "getYearEnd",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "getYearEndTs",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "getYearEndWithTimeZone",
        "parameterTypes": [
          "java.util.TimeZone",
          "long"
        ]
      },
      {
        "name": "getYearEndWithTimeZoneTs",
        "parameterTypes": [
          "java.util.TimeZone",
          "long"
        ]
      },
      {
        "name": "getYearStart",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "getYearStartTs",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "getYearStartWithTimeZone",
        "parameterTypes": [
          "java.util.TimeZone",
          "long"
        ]
      },
      {
        "name": "getYearStartWithTimeZoneTs",
        "parameterTypes": [
          "java.util.TimeZone",
          "long"
        ]
      },
      {
        "name": "isMonthDay",
        "parameterTypes": [
          "java.time.LocalDate",
          "java.time.MonthDay"
        ]
      },
      {
        "name": "lastDayOfMonth",
        "parameterTypes": [
          "java.time.LocalDate"
        ]
      },
      {
        "name": "lastDayOfYear",
        "parameterTypes": [
          "java.time.LocalDate"
        ]
      },
      {
        "name": "localDateMillis",
        "parameterTypes": [
          "int",
          "int",
          "int"
        ]
      },
      {
        "name": "localDateTimeToMillis",
        "parameterTypes": [
          "java.time.LocalDateTime"
        ]
      },
      {
        "name": "localDateTimeToTimestamp",
        "parameterTypes": [
          "java.time.LocalDateTime"
        ]
      },
      {
        "name": "localDateToMillis",
        "parameterTypes": [
          "java.time.LocalDate"
        ]
      },
      {
        "name": "millisToDate",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "millisToDateTime",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "millisToLocalDate",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "millisToLocalDateTime",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "monthDiff",
        "parameterTypes": [
          "java.time.LocalDate",
          "java.time.LocalDate"
        ]
      },
      {
        "name": "now",
        "parameterTypes": []
      },
      {
        "name": "parseDataTime",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "parseDate",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "parseDate",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "parseDateTime",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "parseDuration",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "parseLocalDataTime",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "parseLocalDate",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "parseTime",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "registerFormatter",
        "parameterTypes": [
          "java.lang.String",
          "java.time.format.DateTimeFormatter"
        ]
      },
      {
        "name": "toDayOfWeek",
        "parameterTypes": [
          "java.time.LocalDate",
          "int"
        ]
      },
      {
        "name": "toUTC",
        "parameterTypes": [
          "java.time.LocalDateTime"
        ]
      },
      {
        "name": "toZone",
        "parameterTypes": [
          "java.time.LocalDateTime",
          "java.time.ZoneId"
        ]
      },
      {
        "name": "yearDiff",
        "parameterTypes": [
          "java.time.LocalDate",
          "java.time.LocalDate"
        ]
      },
      {
        "name": "zone",
        "parameterTypes": [
          "int",
          "int"
        ]
      }
    ],
    "name": "io.nop.commons.util.DateHelper"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [
      {
        "name": "CHARSET_1252"
      },
      {
        "name": "DIGITS"
      },
      {
        "name": "EMPTY_BYTES"
      },
      {
        "name": "EMPTY_STRING"
      },
      {
        "name": "EMPTY_STRINGS"
      },
      {
        "name": "ENV_ESCAPE_CHARS"
      },
      {
        "name": "ENV_ESCAPE_STRS"
      },
      {
        "name": "HTML_ESCAPE_CHARS"
      },
      {
        "name": "HTML_ESCAPE_STRS"
      },
      {
        "name": "INVALID_FILE_NAME_CHARS"
      },
      {
        "name": "INVALID_FILE_NAME_CHARS_STR"
      },
      {
        "name": "INVALID_FILE_NAME_REPLS"
      },
      {
        "name": "INVALID_FILE_PATH_CHARS"
      },
      {
        "name": "INVALID_FILE_PATH_CHARS_STR"
      },
      {
        "name": "JAVA_ESCAPE_CHARS"
      },
      {
        "name": "JAVA_ESCAPE_STRS"
      },
      {
        "name": "JSON_ESCAPE_CHARS"
      },
      {
        "name": "JSON_ESCAPE_STRS"
      },
      {
        "name": "LINE_PATTERN"
      },
      {
        "name": "LOG"
      },
      {
        "name": "LOWER_CASE"
      },
      {
        "name": "QUOTE_CN_CHARS"
      },
      {
        "name": "QUOTE_EN_STRS"
      },
      {
        "name": "REGEX_BR"
      },
      {
        "name": "REGEX_P"
      },
      {
        "name": "REGEX_TAG"
      },
      {
        "name": "SPECIAL_CHARS"
      },
      {
        "name": "SQL_ESCAPE_CHARS"
      },
      {
        "name": "SQL_ESCAPE_CHARS_SLASH"
      },
      {
        "name": "SQL_ESCAPE_STRS"
      },
      {
        "name": "SQL_ESCAPE_STRS_SLASH"
      },
      {
        "name": "UPPER_CASE"
      },
      {
        "name": "XML_ATTR_ESCAPE_CHARS"
      },
      {
        "name": "XML_ATTR_ESCAPE_STRS"
      },
      {
        "name": "XML_ESCAPE_CHARS"
      },
      {
        "name": "XML_ESCAPE_STRS"
      },
      {
        "name": "XML_VALUE_ESCAPE_CHARS"
      },
      {
        "name": "XML_VALUE_ESCAPE_STRS"
      }
    ],
    "methods": [
      {
        "name": "_containsControlAscii",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "_escapeControlAscii",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "_indexOf",
        "parameterTypes": [
          "[C",
          "char"
        ]
      },
      {
        "name": "_isValidXmlNamePart",
        "parameterTypes": [
          "java.lang.String",
          "boolean",
          "boolean"
        ]
      },
      {
        "name": "_searchNotDigit",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "_toString",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "_unescapeXml",
        "parameterTypes": [
          "char",
          "char",
          "char",
          "char"
        ]
      },
      {
        "name": "absolutePath",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "appendPath",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "arrayAwareToString",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "asRawText",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "beanPropName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "bytesToHex",
        "parameterTypes": [
          "[B"
        ]
      },
      {
        "name": "bytesToHex",
        "parameterTypes": [
          "[B",
          "boolean"
        ]
      },
      {
        "name": "camelCase",
        "parameterTypes": [
          "java.lang.String",
          "boolean"
        ]
      },
      {
        "name": "camelCase",
        "parameterTypes": [
          "java.lang.String",
          "char",
          "boolean"
        ]
      },
      {
        "name": "camelCaseToHyphen",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "camelCaseToUnderscore",
        "parameterTypes": [
          "java.lang.String",
          "boolean"
        ]
      },
      {
        "name": "capitalize",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "chompStartChars",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "classNameToPath",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "colCodeToPropName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "commaDelimitedListToSet",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "commaDelimitedListToStringArray",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "configVarToEnv",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "containsAnyChar",
        "parameterTypes": [
          "java.lang.CharSequence",
          "java.lang.String"
        ]
      },
      {
        "name": "containsDigits",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "containsLowerCase",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "containsSpecialChar",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "containsUpperCase",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "containsWhitespace",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "countChar",
        "parameterTypes": [
          "java.lang.String",
          "char"
        ]
      },
      {
        "name": "countContains",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "decapitalize",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "decodeBase64",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "decodeBase64Url",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "decodeDupEscape",
        "parameterTypes": [
          "java.lang.String",
          "char"
        ]
      },
      {
        "name": "decodeHexByte",
        "parameterTypes": [
          "java.lang.CharSequence",
          "int"
        ]
      },
      {
        "name": "decodeHexNibble",
        "parameterTypes": [
          "char"
        ]
      },
      {
        "name": "decodeProp",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "delete",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "deleteAny",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "delimitedListToStringArray",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "delimitedListToStringArray",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "dropZero",
        "parameterTypes": [
          "double"
        ]
      },
      {
        "name": "emptyAsNull",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "encodeBase64",
        "parameterTypes": [
          "[B"
        ]
      },
      {
        "name": "encodeBase64Url",
        "parameterTypes": [
          "[B"
        ]
      },
      {
        "name": "encodeDupEscape",
        "parameterTypes": [
          "java.lang.String",
          "char"
        ]
      },
      {
        "name": "encodeProp",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "encodeQuery",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "encodeQuery",
        "parameterTypes": [
          "java.util.Map",
          "java.lang.String"
        ]
      },
      {
        "name": "encodeUriPath",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "endWith",
        "parameterTypes": [
          "java.lang.CharSequence",
          "char"
        ]
      },
      {
        "name": "endsWithIgnoreCase",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "envToConfigVar",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "escape",
        "parameterTypes": [
          "java.lang.CharSequence",
          "[C",
          "[Ljava.lang.String;"
        ]
      },
      {
        "name": "escapeCRLF",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "escapeCharTo",
        "parameterTypes": [
          "char",
          "[C",
          "[Ljava.lang.String;",
          "java.lang.Appendable"
        ]
      },
      {
        "name": "escapeHtml",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "escapeJava",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "escapeJavadoc",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "escapeJson",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "escapeJsonCharTo",
        "parameterTypes": [
          "char",
          "java.lang.Appendable"
        ]
      },
      {
        "name": "escapeJsonTo",
        "parameterTypes": [
          "java.lang.CharSequence",
          "java.lang.Appendable"
        ]
      },
      {
        "name": "escapeSql",
        "parameterTypes": [
          "java.lang.String",
          "boolean"
        ]
      },
      {
        "name": "escapeTo",
        "parameterTypes": [
          "java.lang.CharSequence",
          "[C",
          "[Ljava.lang.String;",
          "java.lang.Appendable"
        ]
      },
      {
        "name": "escapeUnicode",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "escapeXml",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "escapeXmlAttr",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "escapeXmlAttrTo",
        "parameterTypes": [
          "java.lang.CharSequence",
          "java.lang.Appendable"
        ]
      },
      {
        "name": "escapeXmlTo",
        "parameterTypes": [
          "java.lang.CharSequence",
          "java.lang.Appendable"
        ]
      },
      {
        "name": "escapeXmlValue",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "escapeXmlValueTo",
        "parameterTypes": [
          "java.lang.CharSequence",
          "java.lang.Appendable"
        ]
      },
      {
        "name": "escapeYaml",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "fileExt",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "fileFullName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "fileNameNoExt",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "filePath",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "fileSizeString",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "fileType",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "firstPart",
        "parameterTypes": [
          "java.lang.String",
          "char"
        ]
      },
      {
        "name": "forEachTemplateVar",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String",
          "java.lang.String",
          "java.util.function.Consumer"
        ]
      },
      {
        "name": "forEachTemplateVar",
        "parameterTypes": [
          "java.lang.String",
          "java.util.function.Consumer"
        ]
      },
      {
        "name": "format",
        "parameterTypes": [
          "java.lang.String",
          "[Ljava.lang.Object;"
        ]
      },
      {
        "name": "formatDate",
        "parameterTypes": [
          "java.util.Date",
          "java.lang.String"
        ]
      },
      {
        "name": "formatDegree",
        "parameterTypes": [
          "java.lang.Number"
        ]
      },
      {
        "name": "formatLocalDate",
        "parameterTypes": [
          "java.time.LocalDate",
          "java.lang.String"
        ]
      },
      {
        "name": "formatLocalDateTime",
        "parameterTypes": [
          "java.time.LocalDateTime",
          "java.lang.String"
        ]
      },
      {
        "name": "formatNumber",
        "parameterTypes": [
          "java.lang.Number"
        ]
      },
      {
        "name": "formatNumber",
        "parameterTypes": [
          "java.lang.Number",
          "java.lang.String"
        ]
      },
      {
        "name": "fullClassName",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "generateUUID",
        "parameterTypes": []
      },
      {
        "name": "generateUUID",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "getNamespace",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getXmlProlog",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "hasClass",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "hasLength",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "hasNamespace",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "head",
        "parameterTypes": [
          "java.lang.String",
          "int"
        ]
      },
      {
        "name": "hexToBytes",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "hmacSha256",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "i18n",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "indexOfAnyChar",
        "parameterTypes": [
          "java.lang.CharSequence",
          "java.lang.String"
        ]
      },
      {
        "name": "indexOfIgnoreCase",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "intToHex",
        "parameterTypes": [
          "int",
          "int"
        ]
      },
      {
        "name": "internList",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "isAbsolutePath",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "isAllAsciiLetter",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "isAllChar",
        "parameterTypes": [
          "java.lang.String",
          "char"
        ]
      },
      {
        "name": "isAsciiVarPart",
        "parameterTypes": [
          "char"
        ]
      },
      {
        "name": "isAsciiVarStart",
        "parameterTypes": [
          "char"
        ]
      },
      {
        "name": "isCanonicalFilePath",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "isEmptyObject",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "isGraphQLNamePart",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "isGraphQLNameStart",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "isHexChar",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "isInt",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "isInt",
        "parameterTypes": [
          "java.lang.String",
          "boolean"
        ]
      },
      {
        "name": "isJavaDefaultImportType",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "isJavaIdentifierPart",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "isJavaIdentifierStart",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "isJavaKeyword",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "isJavaScriptKeyword",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "isNo",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "isNonNegativeInt",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "isNumber",
        "parameterTypes": [
          "java.lang.CharSequence"
        ]
      },
      {
        "name": "isQuotedString",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "isSafeAsciiToken",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "isSecretVar",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "isSpaceInLine",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "isUSASCII",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "isValidClassName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "isValidConfigVar",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "isValidFileName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "isValidFilePath",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "isValidFileType",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "isValidFormat",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "isValidHtmlAttrName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "isValidId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "isValidJavaVarName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "isValidNopModuleId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "isValidNopModuleName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "isValidPropName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "isValidPropPath",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "isValidSimpleVarName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "isValidTokenName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "isValidVPath",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "isValidXmlName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "isValidXmlName",
        "parameterTypes": [
          "java.lang.String",
          "boolean",
          "boolean"
        ]
      },
      {
        "name": "isValidXmlNamespaceName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "isWhitespace",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "isXLangKeyword",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "isXmlNamePart",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "isXmlNameStart",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "isYes",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "joinArray",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.String"
        ]
      },
      {
        "name": "lastPart",
        "parameterTypes": [
          "java.lang.String",
          "char"
        ]
      },
      {
        "name": "lastPart",
        "parameterTypes": [
          "java.lang.String",
          "char",
          "boolean"
        ]
      },
      {
        "name": "leftPad",
        "parameterTypes": [
          "java.lang.String",
          "int",
          "char"
        ]
      },
      {
        "name": "limitLen",
        "parameterTypes": [
          "java.lang.CharSequence",
          "int"
        ]
      },
      {
        "name": "limitLen",
        "parameterTypes": [
          "java.lang.CharSequence",
          "int",
          "int"
        ]
      },
      {
        "name": "limitUtf8Len",
        "parameterTypes": [
          "java.lang.CharSequence",
          "int"
        ]
      },
      {
        "name": "limitUtfLen",
        "parameterTypes": [
          "java.lang.CharSequence",
          "int",
          "int"
        ]
      },
      {
        "name": "longToHex",
        "parameterTypes": [
          "long",
          "int"
        ]
      },
      {
        "name": "lowerCase",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "maskPattern",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "maskSecretVar",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object"
        ]
      },
      {
        "name": "matchPath",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "matchSimplePattern",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "matchSimplePatternSet",
        "parameterTypes": [
          "java.lang.String",
          "java.util.Collection"
        ]
      },
      {
        "name": "matchSimplePatterns",
        "parameterTypes": [
          "java.lang.String",
          "[Ljava.lang.String;"
        ]
      },
      {
        "name": "matchWildcard",
        "parameterTypes": [
          "java.lang.CharSequence",
          "java.lang.CharSequence"
        ]
      },
      {
        "name": "maybeXml",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "md5Hash",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "mergeCsvSet",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "mergeTagSet",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "methodAdd",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "methodGet",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "methodGet",
        "parameterTypes": [
          "java.lang.String",
          "boolean"
        ]
      },
      {
        "name": "methodMake",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "methodSet",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "nextName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "nextPart",
        "parameterTypes": [
          "java.lang.String",
          "char"
        ]
      },
      {
        "name": "normalizeCRLF",
        "parameterTypes": [
          "java.lang.String",
          "boolean"
        ]
      },
      {
        "name": "normalizeChineseQuote",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "normalizeClassName",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String",
          "boolean"
        ]
      },
      {
        "name": "normalizeComment",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "normalizeConfigVar",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "normalizePath",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "onlyContainsWhitespace",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "packageName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "parseCsvList",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "parseCsvSet",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "parseDegree",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "parseFileSizeString",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "parseGenericComponentType",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "parseInt",
        "parameterTypes": [
          "java.lang.String",
          "int"
        ]
      },
      {
        "name": "parseNumber",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "parseQuery",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "parseSimpleQuery",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "parseSize",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "pathEndsWith",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "pathStartsWith",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "quote",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "quoteDupEscapeString",
        "parameterTypes": [
          "java.lang.String",
          "char"
        ]
      },
      {
        "name": "quoteIfNecessary",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "randomDigits",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "randomString",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "randomString",
        "parameterTypes": [
          "int",
          "java.lang.String"
        ]
      },
      {
        "name": "randomString",
        "parameterTypes": [
          "int",
          "java.lang.String",
          "io.nop.commons.util.random.IRandom"
        ]
      },
      {
        "name": "relativizePath",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "removeEnd",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "removeFileExt",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "removeFileType",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "removeHead",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "removeHtmlTag",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "removeLastPart",
        "parameterTypes": [
          "java.lang.String",
          "char"
        ]
      },
      {
        "name": "removeStart",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "removeTail",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "removeUrlQuery",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "repeat",
        "parameterTypes": [
          "java.lang.String",
          "int"
        ]
      },
      {
        "name": "replace",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "replaceChars",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "replaceFileExt",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "replaceFileType",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "rightPad",
        "parameterTypes": [
          "java.lang.String",
          "int",
          "char"
        ]
      },
      {
        "name": "safeFileName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "safeToString",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "safeXmlComment",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "sha256Hash",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "sha512Hash",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "shortText",
        "parameterTypes": [
          "java.lang.CharSequence",
          "int",
          "int"
        ]
      },
      {
        "name": "simpleClassName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "simplifyJavaType",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "simplifyJavaType",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "simplifyStdJavaType",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "skip",
        "parameterTypes": [
          "java.lang.String",
          "int"
        ]
      },
      {
        "name": "splitDupEscaped",
        "parameterTypes": [
          "java.lang.String",
          "char"
        ]
      },
      {
        "name": "splitToArray",
        "parameterTypes": [
          "java.lang.String",
          "char"
        ]
      },
      {
        "name": "splitToLines",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "startWith",
        "parameterTypes": [
          "java.lang.CharSequence",
          "char"
        ]
      },
      {
        "name": "startsWithAt",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String",
          "int"
        ]
      },
      {
        "name": "startsWithIgnoreCase",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "startsWithNamespace",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "startsWithPackage",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "startsWithPath",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "tail",
        "parameterTypes": [
          "java.lang.String",
          "int"
        ]
      },
      {
        "name": "toAbsolutePath",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "toCharset",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "toString",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.String"
        ]
      },
      {
        "name": "toStringArray",
        "parameterTypes": [
          "java.util.Collection"
        ]
      },
      {
        "name": "tokenizeToStringArray",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "tokenizeToStringArray",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String",
          "boolean",
          "boolean"
        ]
      },
      {
        "name": "trimLeft",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "unescapeJava",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "unescapeJson",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "unescapeXml",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "unquote",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "unquoteDupEscapeString",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "upperCase",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "utf8Bytes",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "utf8Length",
        "parameterTypes": [
          "java.lang.CharSequence"
        ]
      },
      {
        "name": "wrap",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "wrapExpr",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "xmlNameToPropName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "xmlNameToVarName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "xmlValueNeedEscape",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.commons.util.StringHelper"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.config.initialize.ConfigInitializer"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "create",
        "parameterTypes": [
          "java.lang.String",
          "io.nop.config.source.IConfigSource"
        ]
      },
      {
        "name": "createConnection",
        "parameterTypes": []
      },
      {
        "name": "getDriverClassName",
        "parameterTypes": []
      },
      {
        "name": "getJdbcUrl",
        "parameterTypes": []
      },
      {
        "name": "getPassword",
        "parameterTypes": []
      },
      {
        "name": "getRefreshInterval",
        "parameterTypes": []
      },
      {
        "name": "getSelectAllQuery",
        "parameterTypes": []
      },
      {
        "name": "getUserName",
        "parameterTypes": []
      },
      {
        "name": "setDriverClassName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setJdbcUrl",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setPassword",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setRefreshInterval",
        "parameterTypes": [
          "java.time.Duration"
        ]
      },
      {
        "name": "setSelectAllQuery",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setUserName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "valid",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.config.source.jdbc.JdbcConfig"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.converter.config.ConvertBuilderConfig"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.converter.config.ConvertConfig"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.converter.config.ConvertConverterConfig"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "copyTo",
        "parameterTypes": [
          "io.nop.converter.config.ConvertBuilderConfig"
        ]
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "outputJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      }
    ],
    "name": "io.nop.converter.config._gen._ConvertBuilderConfig"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "copyTo",
        "parameterTypes": [
          "io.nop.converter.config.ConvertConfig"
        ]
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "outputJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      }
    ],
    "name": "io.nop.converter.config._gen._ConvertConfig"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "copyTo",
        "parameterTypes": [
          "io.nop.converter.config.ConvertConverterConfig"
        ]
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "outputJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      }
    ],
    "name": "io.nop.converter.config._gen._ConvertConverterConfig"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "loadDslConverters",
        "parameterTypes": [
          "io.nop.converter.DocumentConverterManager",
          "java.util.Map"
        ]
      },
      {
        "name": "newConverter",
        "parameterTypes": [
          "io.nop.converter.config.ConvertConverterConfig"
        ]
      },
      {
        "name": "newConverter",
        "parameterTypes": [
          "java.lang.String",
          "io.nop.core.resource.component.ComponentModelConfig$LoaderConfig",
          "io.nop.core.resource.component.ComponentModelConfig$LoaderConfig"
        ]
      },
      {
        "name": "putConverter",
        "parameterTypes": [
          "java.util.Map",
          "java.lang.String",
          "java.lang.String",
          "io.nop.converter.IDocumentConverter",
          "boolean"
        ]
      },
      {
        "name": "registerBuilder",
        "parameterTypes": [
          "io.nop.converter.DocumentConverterManager",
          "io.nop.converter.config.ConvertBuilderConfig"
        ]
      }
    ],
    "name": "io.nop.converter.registration.ConverterRegistrationBean"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.core.context.ExecutionContextImpl"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.core.context.IEvalContext"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.core.context.IExecutionContext"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.core.context.IServiceContext"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "doParseResource",
        "parameterTypes": [
          "io.nop.core.resource.IResource"
        ]
      }
    ],
    "name": "io.nop.core.dict.DictModelParser"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "doStart",
        "parameterTypes": []
      },
      {
        "name": "doStop",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.core.execution.DefaultTaskExecutionQueue"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.core.initialize.impl.CoreInitializer"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.core.initialize.impl.ReflectionHelperMethodInitializer"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.core.initialize.impl.VirtualFileSystemInitializer"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "checkAllowChange",
        "parameterTypes": []
      },
      {
        "name": "checkMandatory",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object"
        ]
      },
      {
        "name": "checkMaxItems",
        "parameterTypes": [
          "java.lang.String",
          "java.util.Collection",
          "int"
        ]
      },
      {
        "name": "checkMinItems",
        "parameterTypes": [
          "java.lang.String",
          "java.util.Collection",
          "int"
        ]
      },
      {
        "name": "copyExtFieldsTo",
        "parameterTypes": [
          "io.nop.core.lang.ast.ASTNode"
        ]
      },
      {
        "name": "isListEquivalent",
        "parameterTypes": [
          "java.util.List",
          "java.util.List"
        ]
      },
      {
        "name": "isNodeEquivalent",
        "parameterTypes": [
          "io.nop.core.lang.ast.ASTNode",
          "io.nop.core.lang.ast.ASTNode"
        ]
      },
      {
        "name": "isValueEquivalent",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.Object"
        ]
      },
      {
        "name": "removeInList",
        "parameterTypes": [
          "java.util.List",
          "int"
        ]
      },
      {
        "name": "replaceInList",
        "parameterTypes": [
          "java.util.List",
          "int",
          "io.nop.core.lang.ast.ASTNode"
        ]
      },
      {
        "name": "serializeFields",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      }
    ],
    "name": "io.nop.core.lang.ast.ASTNode"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.core.lang.ast.IASTNode"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.core.lang.eval.IEvalAction"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.core.lang.eval.IEvalFunction"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.core.lang.eval.IEvalPredicate"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "serializeToJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      }
    ],
    "name": "io.nop.core.lang.json.IJsonSerializable"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "checkReadOnly",
        "parameterTypes": []
      },
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "containsKey",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "deepClone",
        "parameterTypes": []
      },
      {
        "name": "entrySet",
        "parameterTypes": []
      },
      {
        "name": "flatten",
        "parameterTypes": []
      },
      {
        "name": "forEach",
        "parameterTypes": [
          "java.util.function.BiConsumer"
        ]
      },
      {
        "name": "forEachEntry",
        "parameterTypes": [
          "java.util.function.BiConsumer"
        ]
      },
      {
        "name": "freeze",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "frozen",
        "parameterTypes": []
      },
      {
        "name": "get",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "getComment",
        "parameterTypes": []
      },
      {
        "name": "getLocValue",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getLocation",
        "parameterTypes": []
      },
      {
        "name": "getLocation",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "isEmpty",
        "parameterTypes": []
      },
      {
        "name": "keySet",
        "parameterTypes": []
      },
      {
        "name": "put",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object"
        ]
      },
      {
        "name": "remove",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "serializeToJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      },
      {
        "name": "setComment",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setLocation",
        "parameterTypes": [
          "io.nop.api.core.util.SourceLocation"
        ]
      },
      {
        "name": "size",
        "parameterTypes": []
      },
      {
        "name": "toString",
        "parameterTypes": []
      },
      {
        "name": "values",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.core.lang.json.JObject"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.core.lang.json.JsonTool"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.core.lang.sql.ISqlGenerator"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.core.lang.sql.SQL"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.core.lang.sql.SQL$SqlBuilder"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [
      {
        "name": "ANY"
      },
      {
        "name": "ARRAY"
      },
      {
        "name": "BIGINT"
      },
      {
        "name": "BOOLEAN"
      },
      {
        "name": "CHAR"
      },
      {
        "name": "DATE"
      },
      {
        "name": "DATETIME"
      },
      {
        "name": "DECIMAL"
      },
      {
        "name": "DOUBLE"
      },
      {
        "name": "FLOAT"
      },
      {
        "name": "GEOMETRY"
      },
      {
        "name": "INTEGER"
      },
      {
        "name": "JSON"
      },
      {
        "name": "NUMERIC"
      },
      {
        "name": "OTHER"
      },
      {
        "name": "REAL"
      },
      {
        "name": "SMALLINT"
      },
      {
        "name": "TIME"
      },
      {
        "name": "TIMESTAMP"
      },
      {
        "name": "TINYINT"
      },
      {
        "name": "VARBINARY"
      },
      {
        "name": "VARCHAR"
      }
    ],
    "methods": [
      {
        "name": "convert",
        "parameterTypes": [
          "java.lang.Object",
          "java.util.function.Function"
        ]
      },
      {
        "name": "fromJdbcType",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "fromStdName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getJdbcType",
        "parameterTypes": []
      },
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "getNames",
        "parameterTypes": []
      },
      {
        "name": "getStdDataType",
        "parameterTypes": []
      },
      {
        "name": "isAllowPrecision",
        "parameterTypes": []
      },
      {
        "name": "isAllowScale",
        "parameterTypes": []
      },
      {
        "name": "valueOf",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "values",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.core.lang.sql.StdSqlType"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "avg",
        "parameterTypes": [
          "java.util.Collection"
        ]
      },
      {
        "name": "avg",
        "parameterTypes": [
          "java.util.Collection",
          "java.util.function.Function"
        ]
      },
      {
        "name": "chunk",
        "parameterTypes": [
          "java.util.Collection",
          "int"
        ]
      },
      {
        "name": "compact",
        "parameterTypes": [
          "java.util.Collection"
        ]
      },
      {
        "name": "countBy",
        "parameterTypes": [
          "java.util.Collection",
          "java.lang.Object"
        ]
      },
      {
        "name": "delete",
        "parameterTypes": [
          "java.util.Map",
          "java.util.Collection"
        ]
      },
      {
        "name": "filterNull",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "findIndex",
        "parameterTypes": [
          "java.util.Collection",
          "java.util.function.Predicate"
        ]
      },
      {
        "name": "findWhere",
        "parameterTypes": [
          "java.util.Collection",
          "java.lang.String",
          "java.lang.Object"
        ]
      },
      {
        "name": "findWhere",
        "parameterTypes": [
          "java.util.Collection",
          "java.util.Map"
        ]
      },
      {
        "name": "first",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "first",
        "parameterTypes": [
          "java.util.List",
          "int"
        ]
      },
      {
        "name": "getFieldValue",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.String"
        ]
      },
      {
        "name": "groupBy",
        "parameterTypes": [
          "java.util.Collection",
          "java.lang.Object"
        ]
      },
      {
        "name": "indexBy",
        "parameterTypes": [
          "java.util.Collection",
          "java.lang.Object"
        ]
      },
      {
        "name": "indexByFields",
        "parameterTypes": [
          "java.util.Collection",
          "[Ljava.lang.String;"
        ]
      },
      {
        "name": "invert",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "isEmpty",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "join",
        "parameterTypes": [
          "java.util.Collection",
          "java.lang.String"
        ]
      },
      {
        "name": "last",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "last",
        "parameterTypes": [
          "java.util.List",
          "int"
        ]
      },
      {
        "name": "leftjoinMerge",
        "parameterTypes": [
          "java.util.List",
          "java.util.List",
          "java.lang.String",
          "java.lang.String",
          "java.lang.Object"
        ]
      },
      {
        "name": "max",
        "parameterTypes": [
          "java.util.Collection"
        ]
      },
      {
        "name": "max",
        "parameterTypes": [
          "java.util.Collection",
          "java.util.function.Function"
        ]
      },
      {
        "name": "mergeMap",
        "parameterTypes": [
          "java.util.Map",
          "java.util.Map"
        ]
      },
      {
        "name": "min",
        "parameterTypes": [
          "java.util.Collection"
        ]
      },
      {
        "name": "min",
        "parameterTypes": [
          "java.util.Collection",
          "java.util.function.Function"
        ]
      },
      {
        "name": "omit",
        "parameterTypes": [
          "java.util.Map",
          "java.util.Collection"
        ]
      },
      {
        "name": "pairs",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "partition",
        "parameterTypes": [
          "java.util.Collection",
          "java.util.function.Predicate"
        ]
      },
      {
        "name": "pick",
        "parameterTypes": [
          "java.lang.Object",
          "java.util.Collection"
        ]
      },
      {
        "name": "pickNotNull",
        "parameterTypes": [
          "java.lang.Object",
          "java.util.Collection"
        ]
      },
      {
        "name": "pluck",
        "parameterTypes": [
          "java.util.Collection",
          "java.lang.String"
        ]
      },
      {
        "name": "pluckAsMap",
        "parameterTypes": [
          "java.util.Collection",
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "pluckThenJoin",
        "parameterTypes": [
          "java.util.Collection",
          "java.lang.String"
        ]
      },
      {
        "name": "pluckUnique",
        "parameterTypes": [
          "java.util.Collection",
          "java.lang.String"
        ]
      },
      {
        "name": "removeAllWhere",
        "parameterTypes": [
          "java.util.Collection",
          "java.lang.String",
          "java.util.Collection"
        ]
      },
      {
        "name": "removeWhere",
        "parameterTypes": [
          "java.util.Collection",
          "java.lang.String",
          "java.lang.Object"
        ]
      },
      {
        "name": "rename",
        "parameterTypes": [
          "java.util.Map",
          "java.util.Map"
        ]
      },
      {
        "name": "retainAllWhere",
        "parameterTypes": [
          "java.util.Collection",
          "java.lang.String",
          "java.util.Collection"
        ]
      },
      {
        "name": "sortBy",
        "parameterTypes": [
          "java.util.Collection",
          "java.lang.Object"
        ]
      },
      {
        "name": "sum",
        "parameterTypes": [
          "java.util.Collection"
        ]
      },
      {
        "name": "sum",
        "parameterTypes": [
          "java.util.Collection",
          "java.util.function.Function"
        ]
      },
      {
        "name": "toJObject",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "toKeyedList",
        "parameterTypes": [
          "java.util.Collection",
          "java.lang.String"
        ]
      },
      {
        "name": "unique",
        "parameterTypes": [
          "java.util.Collection"
        ]
      },
      {
        "name": "where",
        "parameterTypes": [
          "java.util.Collection",
          "java.lang.String",
          "java.lang.Object"
        ]
      },
      {
        "name": "where",
        "parameterTypes": [
          "java.util.Collection",
          "java.util.Map"
        ]
      }
    ],
    "name": "io.nop.core.lang.utils.Underscore"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "calcChildMatchCount",
        "parameterTypes": [
          "io.nop.core.lang.xml.XNode",
          "io.nop.core.lang.xml.XNode"
        ]
      },
      {
        "name": "calcMatchCount",
        "parameterTypes": [
          "io.nop.core.lang.xml.XNode",
          "io.nop.core.lang.xml.XNode"
        ]
      },
      {
        "name": "containsAllAttrs",
        "parameterTypes": [
          "io.nop.core.lang.xml.XNode",
          "io.nop.core.lang.xml.XNode"
        ]
      },
      {
        "name": "findBestMatch",
        "parameterTypes": [
          "java.util.List",
          "io.nop.core.lang.xml.XNode"
        ]
      },
      {
        "name": "mergeIfAbsent",
        "parameterTypes": [
          "io.nop.core.lang.xml.XNode",
          "io.nop.core.lang.xml.XNode"
        ]
      },
      {
        "name": "normalizeMerged",
        "parameterTypes": [
          "io.nop.core.lang.xml.XNode"
        ]
      }
    ],
    "name": "io.nop.core.lang.utils.XNodeMergeHelper"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.core.lang.xml.IXNodeGenerator"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [
      {
        "name": "LOG"
      }
    ],
    "methods": [
      {
        "name": "_assignAttrs",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "_assignParent",
        "parameterTypes": [
          "io.nop.core.lang.xml.XNode"
        ]
      },
      {
        "name": "_getElements",
        "parameterTypes": []
      },
      {
        "name": "_isAllChildText",
        "parameterTypes": []
      },
      {
        "name": "_isAnyChildCDATA",
        "parameterTypes": []
      },
      {
        "name": "_isElement",
        "parameterTypes": [
          "io.nop.core.lang.xml.XNode",
          "java.lang.String"
        ]
      },
      {
        "name": "addAttrCsvSet",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "addChild",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "addJsonPrefix",
        "parameterTypes": []
      },
      {
        "name": "after",
        "parameterTypes": [
          "io.nop.api.core.util.SourceLocation",
          "java.lang.String",
          "boolean"
        ]
      },
      {
        "name": "after",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "append",
        "parameterTypes": [
          "io.nop.api.core.util.SourceLocation",
          "java.lang.String",
          "boolean"
        ]
      },
      {
        "name": "append",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "appendBodyXml",
        "parameterTypes": [
          "io.nop.api.core.util.SourceLocation",
          "java.lang.String",
          "boolean"
        ]
      },
      {
        "name": "appendBodyXml",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "appendChild",
        "parameterTypes": [
          "io.nop.core.lang.xml.XNode"
        ]
      },
      {
        "name": "appendChildren",
        "parameterTypes": [
          "java.util.Collection"
        ]
      },
      {
        "name": "appendContent",
        "parameterTypes": [
          "io.nop.api.core.util.SourceLocation",
          "java.lang.Object"
        ]
      },
      {
        "name": "appendContent",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "appendScript",
        "parameterTypes": [
          "io.nop.api.core.util.SourceLocation",
          "java.lang.String"
        ]
      },
      {
        "name": "appendTreeBean",
        "parameterTypes": [
          "io.nop.api.core.beans.TreeBean"
        ]
      },
      {
        "name": "assureAtMostOneChild",
        "parameterTypes": []
      },
      {
        "name": "attachChild",
        "parameterTypes": [
          "io.nop.core.lang.xml.XNode"
        ]
      },
      {
        "name": "attrBoolean",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "attrBoolean",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Boolean"
        ]
      },
      {
        "name": "attrCsvSet",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "attrDouble",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "attrDouble",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Double"
        ]
      },
      {
        "name": "attrInt",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "attrInt",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Integer"
        ]
      },
      {
        "name": "attrLoc",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "attrLong",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "attrLong",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Long"
        ]
      },
      {
        "name": "attrText",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "attrText",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "attrTextOrEmpty",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "attrValueLoc",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "attrValueLoc",
        "parameterTypes": [
          "java.lang.String",
          "io.nop.commons.util.objects.ValueWithLocation"
        ]
      },
      {
        "name": "attrValueLocs",
        "parameterTypes": []
      },
      {
        "name": "attrValueLocs",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "before",
        "parameterTypes": [
          "io.nop.api.core.util.SourceLocation",
          "java.lang.String",
          "boolean"
        ]
      },
      {
        "name": "before",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "bodyFullXml",
        "parameterTypes": []
      },
      {
        "name": "bodyFullXml",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "bodyToXJson",
        "parameterTypes": []
      },
      {
        "name": "checkNotReadOnly",
        "parameterTypes": []
      },
      {
        "name": "child",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "childAttr",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "childByAttr",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object"
        ]
      },
      {
        "name": "childByTag",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "childIndex",
        "parameterTypes": []
      },
      {
        "name": "childIndexOfSameTag",
        "parameterTypes": []
      },
      {
        "name": "childValue",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "childWithAttr",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object"
        ]
      },
      {
        "name": "childrenByAttr",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object"
        ]
      },
      {
        "name": "childrenByTag",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "childrenToJson",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "clearAttrs",
        "parameterTypes": []
      },
      {
        "name": "clearBody",
        "parameterTypes": []
      },
      {
        "name": "clearChildren",
        "parameterTypes": []
      },
      {
        "name": "clearComment",
        "parameterTypes": []
      },
      {
        "name": "clearLocation",
        "parameterTypes": []
      },
      {
        "name": "cloneChildren",
        "parameterTypes": []
      },
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "closest",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "collectXPath",
        "parameterTypes": [
          "java.lang.StringBuilder"
        ]
      },
      {
        "name": "commonAncestor",
        "parameterTypes": [
          "io.nop.core.lang.xml.XNode"
        ]
      },
      {
        "name": "contains",
        "parameterTypes": [
          "io.nop.core.lang.xml.XNode"
        ]
      },
      {
        "name": "content",
        "parameterTypes": []
      },
      {
        "name": "content",
        "parameterTypes": [
          "io.nop.api.core.util.SourceLocation",
          "java.lang.Object"
        ]
      },
      {
        "name": "content",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "contentAsInt",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "contentText",
        "parameterTypes": []
      },
      {
        "name": "countChild",
        "parameterTypes": [
          "java.util.function.Predicate"
        ]
      },
      {
        "name": "countChildByAttr",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object"
        ]
      },
      {
        "name": "countChildByTag",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "depth",
        "parameterTypes": []
      },
      {
        "name": "detach",
        "parameterTypes": []
      },
      {
        "name": "detachChildren",
        "parameterTypes": []
      },
      {
        "name": "dump",
        "parameterTypes": []
      },
      {
        "name": "dump",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "element",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "elementAttr",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "elementText",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "elements",
        "parameterTypes": []
      },
      {
        "name": "elements",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "find",
        "parameterTypes": [
          "java.util.function.Predicate"
        ]
      },
      {
        "name": "findAll",
        "parameterTypes": [
          "java.util.function.Predicate"
        ]
      },
      {
        "name": "findAllByAttr",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object"
        ]
      },
      {
        "name": "findAllByTag",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "findByAttr",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object"
        ]
      },
      {
        "name": "findById",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "findByTag",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "findChild",
        "parameterTypes": [
          "java.util.function.Predicate"
        ]
      },
      {
        "name": "findChildren",
        "parameterTypes": [
          "java.util.function.Predicate"
        ]
      },
      {
        "name": "firstChild",
        "parameterTypes": []
      },
      {
        "name": "firstLeaf",
        "parameterTypes": []
      },
      {
        "name": "forEachAttr",
        "parameterTypes": [
          "java.util.function.BiConsumer"
        ]
      },
      {
        "name": "forEachChild",
        "parameterTypes": [
          "java.util.function.Consumer"
        ]
      },
      {
        "name": "forEachNode",
        "parameterTypes": [
          "java.util.function.Consumer"
        ]
      },
      {
        "name": "freeze",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "fromTreeBean",
        "parameterTypes": [
          "io.nop.api.core.beans.ITreeBean"
        ]
      },
      {
        "name": "fromValue",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "frozen",
        "parameterTypes": []
      },
      {
        "name": "fullXml",
        "parameterTypes": [
          "boolean",
          "boolean"
        ]
      },
      {
        "name": "getAttr",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getAttrCount",
        "parameterTypes": []
      },
      {
        "name": "getAttrNames",
        "parameterTypes": []
      },
      {
        "name": "getAttrs",
        "parameterTypes": []
      },
      {
        "name": "getBody",
        "parameterTypes": []
      },
      {
        "name": "getChildCount",
        "parameterTypes": []
      },
      {
        "name": "getChildren",
        "parameterTypes": []
      },
      {
        "name": "getComment",
        "parameterTypes": []
      },
      {
        "name": "getContentValue",
        "parameterTypes": []
      },
      {
        "name": "getDocType",
        "parameterTypes": []
      },
      {
        "name": "getDumpString",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getExtension",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getInstruction",
        "parameterTypes": []
      },
      {
        "name": "getLocation",
        "parameterTypes": []
      },
      {
        "name": "getParent",
        "parameterTypes": []
      },
      {
        "name": "getParent",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "getParentParent",
        "parameterTypes": []
      },
      {
        "name": "getTagName",
        "parameterTypes": []
      },
      {
        "name": "getTagNameWithoutNs",
        "parameterTypes": []
      },
      {
        "name": "getTreeLevel",
        "parameterTypes": []
      },
      {
        "name": "getUrlForXmlns",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getXmlnsForUrl",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "hasAttr",
        "parameterTypes": []
      },
      {
        "name": "hasAttr",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "hasBody",
        "parameterTypes": []
      },
      {
        "name": "hasChild",
        "parameterTypes": []
      },
      {
        "name": "hasChild",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "hasClass",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "hasContent",
        "parameterTypes": []
      },
      {
        "name": "hasMixedContent",
        "parameterTypes": []
      },
      {
        "name": "html",
        "parameterTypes": []
      },
      {
        "name": "innerHtml",
        "parameterTypes": []
      },
      {
        "name": "innerXml",
        "parameterTypes": []
      },
      {
        "name": "innerXml",
        "parameterTypes": [
          "boolean",
          "boolean"
        ]
      },
      {
        "name": "insertAfterXml",
        "parameterTypes": [
          "io.nop.api.core.util.SourceLocation",
          "java.lang.String",
          "boolean"
        ]
      },
      {
        "name": "insertAfterXml",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "insertBeforeXml",
        "parameterTypes": [
          "io.nop.api.core.util.SourceLocation",
          "java.lang.String",
          "boolean"
        ]
      },
      {
        "name": "insertBeforeXml",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "insertChild",
        "parameterTypes": [
          "int",
          "io.nop.core.lang.xml.XNode"
        ]
      },
      {
        "name": "insertChildren",
        "parameterTypes": [
          "int",
          "java.util.Collection"
        ]
      },
      {
        "name": "insertParent",
        "parameterTypes": [
          "io.nop.core.lang.xml.XNode"
        ]
      },
      {
        "name": "isCDataText",
        "parameterTypes": []
      },
      {
        "name": "isDummyNode",
        "parameterTypes": []
      },
      {
        "name": "isElementNode",
        "parameterTypes": []
      },
      {
        "name": "isTextNode",
        "parameterTypes": []
      },
      {
        "name": "isXmlEquals",
        "parameterTypes": [
          "io.nop.core.lang.xml.XNode"
        ]
      },
      {
        "name": "isXmlEquals",
        "parameterTypes": [
          "io.nop.core.lang.xml.XNode",
          "io.nop.commons.functional.IEqualsChecker"
        ]
      },
      {
        "name": "jsonText",
        "parameterTypes": []
      },
      {
        "name": "jsonText",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "lastChild",
        "parameterTypes": []
      },
      {
        "name": "lastLeaf",
        "parameterTypes": []
      },
      {
        "name": "make",
        "parameterTypes": [
          "io.nop.api.core.util.SourceLocation",
          "java.lang.String"
        ]
      },
      {
        "name": "make",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "makeChild",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "makeChildWithAttr",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String",
          "java.lang.Object"
        ]
      },
      {
        "name": "makeDocNode",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "makeNode",
        "parameterTypes": []
      },
      {
        "name": "makeTextNode",
        "parameterTypes": []
      },
      {
        "name": "matchAttr",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object"
        ]
      },
      {
        "name": "mergeAttrs",
        "parameterTypes": [
          "io.nop.core.lang.xml.XNode"
        ]
      },
      {
        "name": "needAddJsonPrefix",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "newAttrError",
        "parameterTypes": [
          "io.nop.api.core.exceptions.ErrorCode",
          "java.lang.String"
        ]
      },
      {
        "name": "newError",
        "parameterTypes": [
          "io.nop.api.core.exceptions.ErrorCode"
        ]
      },
      {
        "name": "nextElementSibling",
        "parameterTypes": []
      },
      {
        "name": "nextLeaf",
        "parameterTypes": []
      },
      {
        "name": "nextSibling",
        "parameterTypes": []
      },
      {
        "name": "nodeWithAttr",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object"
        ]
      },
      {
        "name": "normalizeContent",
        "parameterTypes": []
      },
      {
        "name": "normalizeExpr",
        "parameterTypes": []
      },
      {
        "name": "normalizeExprInContent",
        "parameterTypes": []
      },
      {
        "name": "normalizeScriptContent",
        "parameterTypes": []
      },
      {
        "name": "normalizeText",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "normalizeValue",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "outerXml",
        "parameterTypes": [
          "boolean",
          "boolean"
        ]
      },
      {
        "name": "output",
        "parameterTypes": [
          "io.nop.core.lang.eval.IEvalOutput"
        ]
      },
      {
        "name": "ownText",
        "parameterTypes": []
      },
      {
        "name": "parent",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "parents",
        "parameterTypes": []
      },
      {
        "name": "prepend",
        "parameterTypes": [
          "io.nop.api.core.util.SourceLocation",
          "java.lang.String",
          "boolean"
        ]
      },
      {
        "name": "prepend",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "prependBodyXml",
        "parameterTypes": [
          "io.nop.api.core.util.SourceLocation",
          "java.lang.String",
          "boolean"
        ]
      },
      {
        "name": "prependBodyXml",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "prependChild",
        "parameterTypes": [
          "io.nop.core.lang.xml.XNode"
        ]
      },
      {
        "name": "prependChildren",
        "parameterTypes": [
          "java.util.Collection"
        ]
      },
      {
        "name": "prependContent",
        "parameterTypes": [
          "io.nop.api.core.util.SourceLocation",
          "java.lang.Object"
        ]
      },
      {
        "name": "prependContent",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "prevElementSibling",
        "parameterTypes": []
      },
      {
        "name": "prevLeaf",
        "parameterTypes": []
      },
      {
        "name": "prevSibling",
        "parameterTypes": []
      },
      {
        "name": "process",
        "parameterTypes": [
          "io.nop.core.lang.xml.IXNodeHandler"
        ]
      },
      {
        "name": "remove",
        "parameterTypes": []
      },
      {
        "name": "removeAll",
        "parameterTypes": [
          "java.util.function.Predicate"
        ]
      },
      {
        "name": "removeAllByAttr",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object"
        ]
      },
      {
        "name": "removeAttr",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "removeAttrCsvSet",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "removeAttrs",
        "parameterTypes": [
          "java.util.Collection"
        ]
      },
      {
        "name": "removeAttrsIf",
        "parameterTypes": [
          "java.util.function.BiPredicate"
        ]
      },
      {
        "name": "removeAttrsWithPrefix",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "removeChild",
        "parameterTypes": [
          "io.nop.core.lang.xml.XNode"
        ]
      },
      {
        "name": "removeChildByIndex",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "removeChildByTag",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "removeChildrenByTag",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "removeExtension",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "removeJsonPrefix",
        "parameterTypes": []
      },
      {
        "name": "removeJsonPrefix",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "removeNextSiblings",
        "parameterTypes": []
      },
      {
        "name": "renameAttr",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "renameChild",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "renameNsPrefix",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "replaceBy",
        "parameterTypes": [
          "io.nop.core.lang.xml.XNode"
        ]
      },
      {
        "name": "replaceByList",
        "parameterTypes": [
          "java.util.Collection"
        ]
      },
      {
        "name": "replaceByXml",
        "parameterTypes": [
          "io.nop.api.core.util.SourceLocation",
          "java.lang.String",
          "boolean"
        ]
      },
      {
        "name": "replaceChild",
        "parameterTypes": [
          "int",
          "io.nop.core.lang.xml.XNode"
        ]
      },
      {
        "name": "replaceChildren",
        "parameterTypes": [
          "int",
          "java.util.Collection"
        ]
      },
      {
        "name": "requireAttrCsvSet",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "requireAttrDouble",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "requireAttrInt",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "requireAttrLong",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "requireAttrText",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "root",
        "parameterTypes": []
      },
      {
        "name": "saveToResource",
        "parameterTypes": [
          "io.nop.core.resource.IResource",
          "java.lang.String"
        ]
      },
      {
        "name": "saveToResource",
        "parameterTypes": [
          "io.nop.core.resource.IResource",
          "java.lang.String",
          "boolean",
          "boolean",
          "boolean",
          "boolean"
        ]
      },
      {
        "name": "saveToStream",
        "parameterTypes": [
          "java.io.OutputStream",
          "java.lang.String"
        ]
      },
      {
        "name": "saveToStream",
        "parameterTypes": [
          "java.io.OutputStream",
          "java.lang.String",
          "boolean",
          "boolean",
          "boolean",
          "boolean"
        ]
      },
      {
        "name": "saveToWriter",
        "parameterTypes": [
          "java.lang.Appendable"
        ]
      },
      {
        "name": "saveToWriter",
        "parameterTypes": [
          "java.lang.Appendable",
          "java.lang.String",
          "boolean",
          "boolean",
          "boolean",
          "boolean"
        ]
      },
      {
        "name": "selectMany",
        "parameterTypes": [
          "io.nop.core.lang.xml.IXSelector"
        ]
      },
      {
        "name": "selectOne",
        "parameterTypes": [
          "io.nop.core.lang.xml.IXSelector"
        ]
      },
      {
        "name": "serializeToJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      },
      {
        "name": "setAttr",
        "parameterTypes": [
          "io.nop.api.core.util.SourceLocation",
          "java.lang.String",
          "java.lang.Object"
        ]
      },
      {
        "name": "setAttr",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object"
        ]
      },
      {
        "name": "setAttrs",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "setComment",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setContentValue",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "setDocType",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setExtension",
        "parameterTypes": [
          "java.lang.String",
          "io.nop.core.lang.xml.IXNodeExtension"
        ]
      },
      {
        "name": "setInnerXml",
        "parameterTypes": [
          "io.nop.api.core.util.SourceLocation",
          "java.lang.String",
          "boolean"
        ]
      },
      {
        "name": "setInnerXml",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setInstruction",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setLocation",
        "parameterTypes": [
          "io.nop.api.core.util.SourceLocation"
        ]
      },
      {
        "name": "setTagName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "syncAllExtensionFromNode",
        "parameterTypes": []
      },
      {
        "name": "syncAllExtensionToNode",
        "parameterTypes": []
      },
      {
        "name": "text",
        "parameterTypes": []
      },
      {
        "name": "toJsonObject",
        "parameterTypes": []
      },
      {
        "name": "toString",
        "parameterTypes": []
      },
      {
        "name": "toTreeBean",
        "parameterTypes": []
      },
      {
        "name": "toXJson",
        "parameterTypes": []
      },
      {
        "name": "transformAttr",
        "parameterTypes": [
          "java.util.function.BiFunction"
        ]
      },
      {
        "name": "transformChild",
        "parameterTypes": [
          "java.util.function.Predicate",
          "java.util.function.Function",
          "boolean"
        ]
      },
      {
        "name": "uniqueAttr",
        "parameterTypes": []
      },
      {
        "name": "uniqueAttr",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "uniqueChild",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "uniqueChild",
        "parameterTypes": [
          "java.lang.String",
          "java.util.function.Function"
        ]
      },
      {
        "name": "updateSelected",
        "parameterTypes": [
          "io.nop.core.lang.xml.IXSelector",
          "java.lang.Object"
        ]
      },
      {
        "name": "visit",
        "parameterTypes": [
          "io.nop.core.model.tree.ITreeVisitor"
        ]
      },
      {
        "name": "withAttr",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object"
        ]
      },
      {
        "name": "wrapChildren",
        "parameterTypes": [
          "io.nop.core.lang.xml.XNode"
        ]
      },
      {
        "name": "xml",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.core.lang.xml.XNode"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.core.lang.xml.handler.CollectXNodeHandler"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getAttr",
        "parameterTypes": [
          "java.util.Map",
          "java.lang.String"
        ]
      },
      {
        "name": "getAttrBoolean",
        "parameterTypes": [
          "java.util.Map",
          "java.lang.String",
          "boolean"
        ]
      },
      {
        "name": "getAttrDouble",
        "parameterTypes": [
          "java.util.Map",
          "java.lang.String",
          "java.lang.Double"
        ]
      },
      {
        "name": "getAttrFloat",
        "parameterTypes": [
          "java.util.Map",
          "java.lang.String",
          "java.lang.Float"
        ]
      },
      {
        "name": "getAttrInt",
        "parameterTypes": [
          "java.util.Map",
          "java.lang.String",
          "int"
        ]
      }
    ],
    "name": "io.nop.core.lang.xml.handler.XNodeHandlerAdapter"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "build",
        "parameterTypes": []
      },
      {
        "name": "defineGlobalVar",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object"
        ]
      },
      {
        "name": "defineLoopVar",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "defineLoopVar",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String",
          "java.util.function.Function"
        ]
      },
      {
        "name": "isGlobalVar",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "isLoopVar",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.core.model.loop.impl.NestedLoopBuilder"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "addProp",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object"
        ]
      },
      {
        "name": "addPropDefault",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object"
        ]
      },
      {
        "name": "deepClone",
        "parameterTypes": []
      },
      {
        "name": "defineMethod",
        "parameterTypes": [
          "java.lang.String",
          "io.nop.core.lang.eval.IEvalFunction",
          "boolean"
        ]
      },
      {
        "name": "freeze",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getComplexProp",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "hasComplexProp",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "key",
        "parameterTypes": []
      },
      {
        "name": "makeComplexPropDefault",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object"
        ]
      },
      {
        "name": "makeList",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "method_invoke",
        "parameterTypes": [
          "java.lang.String",
          "[Ljava.lang.Object;",
          "io.nop.core.lang.eval.IEvalScope"
        ]
      },
      {
        "name": "obj_name",
        "parameterTypes": []
      },
      {
        "name": "obj_propValues",
        "parameterTypes": []
      },
      {
        "name": "prop_allow",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "prop_get",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "prop_has",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "prop_make",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "prop_names",
        "parameterTypes": []
      },
      {
        "name": "prop_set",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object"
        ]
      },
      {
        "name": "removeProp",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "serializeToJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      },
      {
        "name": "toMap",
        "parameterTypes": []
      },
      {
        "name": "toString",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.core.model.object.DynamicObject"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [
      {
        "name": "INSTANCE"
      }
    ],
    "methods": [
      {
        "name": "parseFromText",
        "parameterTypes": [
          "io.nop.api.core.util.SourceLocation",
          "java.lang.String"
        ]
      },
      {
        "name": "parseOrderBy",
        "parameterTypes": [
          "io.nop.commons.text.tokenizer.TextScanner"
        ]
      },
      {
        "name": "parseOrderField",
        "parameterTypes": [
          "io.nop.commons.text.tokenizer.TextScanner"
        ]
      }
    ],
    "name": "io.nop.core.model.query.OrderBySqlParser"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.core.model.table.ICell"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.core.model.table.ICellView"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.core.model.table.IRow"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.core.model.table.IRowView"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.core.model.table.ITable"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.core.model.table.ITableView"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "appendInfo",
        "parameterTypes": [
          "java.lang.StringBuilder"
        ]
      },
      {
        "name": "copyTo",
        "parameterTypes": [
          "io.nop.core.model.table.impl.AbstractCell"
        ]
      },
      {
        "name": "outputJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      }
    ],
    "name": "io.nop.core.model.table.impl.AbstractCell"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "appendInfo",
        "parameterTypes": [
          "java.lang.StringBuilder"
        ]
      }
    ],
    "name": "io.nop.core.model.table.impl.AbstractRow"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "newRow",
        "parameterTypes": []
      },
      {
        "name": "outputJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      }
    ],
    "name": "io.nop.core.model.table.impl.AbstractTable"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getChildren",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.core.model.tree.ITreeChildrenStructure"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "forModuleName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getAuthor",
        "parameterTypes": []
      },
      {
        "name": "getDependsOn",
        "parameterTypes": []
      },
      {
        "name": "getDescription",
        "parameterTypes": []
      },
      {
        "name": "getDisplayName",
        "parameterTypes": []
      },
      {
        "name": "getModuleId",
        "parameterTypes": []
      },
      {
        "name": "getModuleName",
        "parameterTypes": []
      },
      {
        "name": "getPublishDate",
        "parameterTypes": []
      },
      {
        "name": "getVersion",
        "parameterTypes": []
      },
      {
        "name": "isDynamic",
        "parameterTypes": []
      },
      {
        "name": "setAuthor",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDependsOn",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setDescription",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDisplayName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDynamic",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setModuleId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setModuleName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setPublishDate",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setVersion",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.core.module.ModuleModel"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.core.reflect.hook.IExtensibleObject"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.core.reflect.hook.IPropGetMissingHook"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.core.reflect.hook.IPropSetMissingHook"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "checkAllowChange",
        "parameterTypes": []
      },
      {
        "name": "copyExtPropsTo",
        "parameterTypes": [
          "io.nop.core.reflect.hook.SerializableExtensibleObject"
        ]
      },
      {
        "name": "getExtProp",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "hasExtProp",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "isAllowedExtProp",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "mergeExtPropsIfAbsent",
        "parameterTypes": [
          "io.nop.core.reflect.hook.SerializableExtensibleObject"
        ]
      },
      {
        "name": "prop_get",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "prop_has",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "prop_names",
        "parameterTypes": []
      },
      {
        "name": "prop_remove",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "prop_set",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object"
        ]
      },
      {
        "name": "readExtProps",
        "parameterTypes": [
          "java.lang.String",
          "boolean",
          "java.lang.Object"
        ]
      },
      {
        "name": "removeExtProp",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setExtProp",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object"
        ]
      },
      {
        "name": "setExtProps",
        "parameterTypes": [
          "java.util.Map"
        ]
      }
    ],
    "name": "io.nop.core.reflect.hook.SerializableExtensibleObject"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "createNewFile",
        "parameterTypes": []
      },
      {
        "name": "createTempFile",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "deleteOnExit",
        "parameterTypes": []
      },
      {
        "name": "getChildren",
        "parameterTypes": []
      },
      {
        "name": "getResource",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "isDirectory",
        "parameterTypes": []
      },
      {
        "name": "mkdirs",
        "parameterTypes": []
      },
      {
        "name": "renameTo",
        "parameterTypes": [
          "io.nop.core.resource.IResource"
        ]
      }
    ],
    "name": "io.nop.core.resource.IFile"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "delete",
        "parameterTypes": []
      },
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "exists",
        "parameterTypes": []
      },
      {
        "name": "getExternalPath",
        "parameterTypes": []
      },
      {
        "name": "getInputStream",
        "parameterTypes": []
      },
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "getOutputStream",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getPath",
        "parameterTypes": []
      },
      {
        "name": "getResourceRegion",
        "parameterTypes": [
          "io.nop.api.core.beans.LongRangeBean"
        ]
      },
      {
        "name": "getStdPath",
        "parameterTypes": []
      },
      {
        "name": "isDirectory",
        "parameterTypes": []
      },
      {
        "name": "isReadOnly",
        "parameterTypes": []
      },
      {
        "name": "lastModified",
        "parameterTypes": []
      },
      {
        "name": "length",
        "parameterTypes": []
      },
      {
        "name": "saveToFile",
        "parameterTypes": [
          "java.io.File"
        ]
      },
      {
        "name": "saveToResource",
        "parameterTypes": [
          "io.nop.core.resource.IResource",
          "io.nop.api.core.util.progress.IStepProgressListener"
        ]
      },
      {
        "name": "setLastModified",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "toFile",
        "parameterTypes": []
      },
      {
        "name": "toURL",
        "parameterTypes": []
      },
      {
        "name": "writeToStream",
        "parameterTypes": [
          "java.io.OutputStream",
          "io.nop.api.core.util.progress.IStepProgressListener"
        ]
      }
    ],
    "name": "io.nop.core.resource.IResource"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getChildren",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getResource",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.core.resource.IResourceLoader"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.core.resource.IResourceLocator"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [
      {
        "name": "LOG"
      },
      {
        "allowWrite": true,
        "name": "s_zipTool"
      }
    ],
    "methods": [
      {
        "name": "assertDirectory",
        "parameterTypes": [
          "io.nop.core.resource.IResource"
        ]
      },
      {
        "name": "buildClassPath",
        "parameterTypes": [
          "java.lang.Package",
          "java.lang.String"
        ]
      },
      {
        "name": "buildConfigResource",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "buildDeltaPath",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "buildNamespacePath",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "buildResourceFromURL",
        "parameterTypes": [
          "java.lang.String",
          "java.net.URL"
        ]
      },
      {
        "name": "buildTenantPath",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "buildTextScanner",
        "parameterTypes": [
          "io.nop.core.resource.IResource",
          "java.lang.String"
        ]
      },
      {
        "name": "checkNormalVirtualPath",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "checkValidModuleId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "checkValidModuleIds",
        "parameterTypes": [
          "java.util.Collection"
        ]
      },
      {
        "name": "checkValidModuleName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "checkValidRelativeName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "copy",
        "parameterTypes": [
          "io.nop.core.resource.IFile",
          "io.nop.core.resource.IFile"
        ]
      },
      {
        "name": "copy",
        "parameterTypes": [
          "io.nop.core.resource.IFile",
          "io.nop.core.resource.IFile",
          "java.util.function.Predicate",
          "io.nop.api.core.util.progress.IProgressListener"
        ]
      },
      {
        "name": "copyDir",
        "parameterTypes": [
          "io.nop.core.resource.IFile",
          "io.nop.core.resource.IFile"
        ]
      },
      {
        "name": "copyDir",
        "parameterTypes": [
          "io.nop.core.resource.IFile",
          "io.nop.core.resource.IFile",
          "java.util.function.Predicate",
          "io.nop.api.core.util.progress.IProgressListener"
        ]
      },
      {
        "name": "deleteAll",
        "parameterTypes": [
          "io.nop.core.resource.IResource"
        ]
      },
      {
        "name": "deleteAll",
        "parameterTypes": [
          "io.nop.core.resource.IResource",
          "io.nop.api.core.util.progress.IProgressListener"
        ]
      },
      {
        "name": "deleteChildren",
        "parameterTypes": [
          "io.nop.core.resource.IFile"
        ]
      },
      {
        "name": "deleteChildren",
        "parameterTypes": [
          "io.nop.core.resource.IFile",
          "io.nop.api.core.util.progress.IProgressListener"
        ]
      },
      {
        "name": "dumpResource",
        "parameterTypes": [
          "io.nop.core.resource.IResource",
          "java.lang.String"
        ]
      },
      {
        "name": "filePostfixFilter",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "genDayRandPath",
        "parameterTypes": []
      },
      {
        "name": "getAppProvider",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getClassPathResource",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "getClassPathResource",
        "parameterTypes": [
          "java.lang.Package",
          "java.lang.String"
        ]
      },
      {
        "name": "getCpPath",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getDeltaLayerId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getDumpPath",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getModuleId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getModuleIdFromModuleName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getModuleIdFromStdPath",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getModuleName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getModuleNameFromModuleId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getOverrideVFsDir",
        "parameterTypes": []
      },
      {
        "name": "getParentPath",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getPathNamespace",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getRelatedResource",
        "parameterTypes": [
          "io.nop.core.resource.IResource",
          "java.lang.String"
        ]
      },
      {
        "name": "getSibling",
        "parameterTypes": [
          "io.nop.core.resource.IResource",
          "java.lang.String"
        ]
      },
      {
        "name": "getSiblingWithExt",
        "parameterTypes": [
          "io.nop.core.resource.IResource",
          "java.lang.String"
        ]
      },
      {
        "name": "getStdPath",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getStepListener",
        "parameterTypes": [
          "io.nop.api.core.util.progress.IProgressListener",
          "java.lang.String",
          "io.nop.core.resource.IResource"
        ]
      },
      {
        "name": "getSubPath",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getTempResource",
        "parameterTypes": []
      },
      {
        "name": "getTempResource",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getZipTool",
        "parameterTypes": []
      },
      {
        "name": "hasNamespace",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "hasNamespace",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "isDeltaPath",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "isNormalVirtualPath",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "isTenantPath",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "isTextResource",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "isValidModuleId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "isValidModuleName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "isValidRelativeName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "isZipFile",
        "parameterTypes": [
          "io.nop.core.resource.IResource"
        ]
      },
      {
        "name": "newDynamicPath",
        "parameterTypes": []
      },
      {
        "name": "normalizePath",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "readBytes",
        "parameterTypes": [
          "io.nop.core.resource.IResource"
        ]
      },
      {
        "name": "readJson",
        "parameterTypes": [
          "io.nop.core.resource.IResource"
        ]
      },
      {
        "name": "readJson",
        "parameterTypes": [
          "io.nop.core.resource.IResource",
          "java.lang.reflect.Type"
        ]
      },
      {
        "name": "readObject",
        "parameterTypes": [
          "io.nop.core.resource.IResource"
        ]
      },
      {
        "name": "readObject",
        "parameterTypes": [
          "io.nop.core.resource.IResource",
          "io.nop.commons.io.serialize.IStreamSerializer"
        ]
      },
      {
        "name": "readProperties",
        "parameterTypes": [
          "io.nop.core.resource.IResource"
        ]
      },
      {
        "name": "readState",
        "parameterTypes": [
          "io.nop.core.resource.IResource",
          "io.nop.commons.io.serialize.IStateSerializable"
        ]
      },
      {
        "name": "readState",
        "parameterTypes": [
          "io.nop.core.resource.IResource",
          "io.nop.commons.io.serialize.IStateSerializable",
          "io.nop.commons.io.serialize.IStreamSerializer"
        ]
      },
      {
        "name": "readText",
        "parameterTypes": [
          "io.nop.core.resource.IResource"
        ]
      },
      {
        "name": "readText",
        "parameterTypes": [
          "io.nop.core.resource.IResource",
          "java.lang.String"
        ]
      },
      {
        "name": "readTextHeader",
        "parameterTypes": [
          "io.nop.core.resource.IResource",
          "java.lang.String",
          "int"
        ]
      },
      {
        "name": "readXml",
        "parameterTypes": [
          "io.nop.core.resource.IResource"
        ]
      },
      {
        "name": "readXml",
        "parameterTypes": [
          "io.nop.core.resource.IResource",
          "java.lang.String"
        ]
      },
      {
        "name": "readXml",
        "parameterTypes": [
          "io.nop.core.resource.IResource",
          "java.lang.String",
          "boolean",
          "boolean"
        ]
      },
      {
        "name": "registerZipTool",
        "parameterTypes": [
          "io.nop.core.resource.zip.IZipTool"
        ]
      },
      {
        "name": "removeNamespace",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "resolve",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "resolveRelativePath",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "resolveRelativePathResource",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "resolveRelativeStdPath",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "resolveResource",
        "parameterTypes": [
          "io.nop.api.core.util.SourceLocation",
          "java.lang.String"
        ]
      },
      {
        "name": "resolveSibling",
        "parameterTypes": [
          "io.nop.core.resource.IResource",
          "java.lang.String"
        ]
      },
      {
        "name": "resolveSiblingWithExt",
        "parameterTypes": [
          "io.nop.core.resource.IResource",
          "java.lang.String"
        ]
      },
      {
        "name": "saveFromStream",
        "parameterTypes": [
          "io.nop.core.resource.IResource",
          "java.io.InputStream"
        ]
      },
      {
        "name": "saveFromStream",
        "parameterTypes": [
          "io.nop.core.resource.IResource",
          "java.io.InputStream",
          "io.nop.api.core.util.progress.IStepProgressListener"
        ]
      },
      {
        "name": "startsWithNamespace",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "toCharReader",
        "parameterTypes": [
          "io.nop.core.resource.IResource",
          "java.lang.String"
        ]
      },
      {
        "name": "toReader",
        "parameterTypes": [
          "io.nop.core.resource.IResource",
          "java.lang.String"
        ]
      },
      {
        "name": "toReader",
        "parameterTypes": [
          "io.nop.core.resource.IResource",
          "java.lang.String",
          "boolean"
        ]
      },
      {
        "name": "toReader",
        "parameterTypes": [
          "io.nop.core.resource.IResource",
          "java.lang.String",
          "boolean",
          "boolean"
        ]
      },
      {
        "name": "toWriter",
        "parameterTypes": [
          "io.nop.core.resource.IResource",
          "java.lang.String"
        ]
      },
      {
        "name": "toWriter",
        "parameterTypes": [
          "io.nop.core.resource.IResource",
          "java.lang.String",
          "boolean"
        ]
      },
      {
        "name": "unzip",
        "parameterTypes": [
          "io.nop.core.resource.IFile"
        ]
      },
      {
        "name": "unzipToDir",
        "parameterTypes": [
          "io.nop.core.resource.IResource",
          "io.nop.core.resource.IFile",
          "io.nop.core.resource.zip.ZipOptions"
        ]
      },
      {
        "name": "writeBytes",
        "parameterTypes": [
          "io.nop.core.resource.IResource",
          "[B"
        ]
      },
      {
        "name": "writeJson",
        "parameterTypes": [
          "io.nop.core.resource.IResource",
          "java.lang.Object"
        ]
      },
      {
        "name": "writeJson",
        "parameterTypes": [
          "io.nop.core.resource.IResource",
          "java.lang.Object",
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "writeObject",
        "parameterTypes": [
          "io.nop.core.resource.IResource",
          "java.lang.Object"
        ]
      },
      {
        "name": "writeObject",
        "parameterTypes": [
          "io.nop.core.resource.IResource",
          "java.lang.Object",
          "io.nop.commons.io.serialize.IStreamSerializer"
        ]
      },
      {
        "name": "writeProperties",
        "parameterTypes": [
          "io.nop.core.resource.IResource",
          "java.util.Properties"
        ]
      },
      {
        "name": "writeState",
        "parameterTypes": [
          "io.nop.core.resource.IResource",
          "io.nop.commons.io.serialize.IStateSerializable"
        ]
      },
      {
        "name": "writeState",
        "parameterTypes": [
          "io.nop.core.resource.IResource",
          "io.nop.commons.io.serialize.IStateSerializable",
          "io.nop.commons.io.serialize.IStreamSerializer"
        ]
      },
      {
        "name": "writeStream",
        "parameterTypes": [
          "io.nop.core.resource.IResource",
          "java.io.InputStream"
        ]
      },
      {
        "name": "writeText",
        "parameterTypes": [
          "io.nop.core.resource.IResource",
          "java.lang.String"
        ]
      },
      {
        "name": "writeText",
        "parameterTypes": [
          "io.nop.core.resource.IResource",
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "writeXml",
        "parameterTypes": [
          "io.nop.core.resource.IResource",
          "io.nop.core.lang.xml.XNode"
        ]
      },
      {
        "name": "writeXml",
        "parameterTypes": [
          "io.nop.core.resource.IResource",
          "io.nop.core.lang.xml.XNode",
          "java.lang.String",
          "boolean"
        ]
      },
      {
        "name": "zipDir",
        "parameterTypes": [
          "io.nop.core.resource.IFile",
          "io.nop.core.resource.IResource",
          "io.nop.core.resource.zip.ZipOptions"
        ]
      },
      {
        "name": "zipDirToStream",
        "parameterTypes": [
          "io.nop.core.resource.IFile",
          "java.io.OutputStream",
          "io.nop.core.resource.zip.ZipOptions"
        ]
      },
      {
        "name": "zipLocalDir",
        "parameterTypes": [
          "java.io.File",
          "java.io.File",
          "io.nop.core.resource.zip.ZipOptions"
        ]
      }
    ],
    "name": "io.nop.core.resource.ResourceHelper"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "checkAllowChange",
        "parameterTypes": []
      },
      {
        "name": "copyTo",
        "parameterTypes": [
          "io.nop.core.resource.component.AbstractComponentModel"
        ]
      },
      {
        "name": "freeze",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "frozen",
        "parameterTypes": []
      },
      {
        "name": "getLocation",
        "parameterTypes": []
      },
      {
        "name": "outputJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      },
      {
        "name": "serializeToJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      },
      {
        "name": "setLocation",
        "parameterTypes": [
          "io.nop.api.core.util.SourceLocation"
        ]
      },
      {
        "name": "toString",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.core.resource.component.AbstractComponentModel"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "checkAllowChange",
        "parameterTypes": []
      },
      {
        "name": "freeze",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "frozen",
        "parameterTypes": []
      },
      {
        "name": "getLocation",
        "parameterTypes": []
      },
      {
        "name": "setLocation",
        "parameterTypes": [
          "io.nop.api.core.util.SourceLocation"
        ]
      },
      {
        "name": "toString",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.core.resource.component.AbstractFreezable"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "findModelTypeFromPath",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.core.resource.component.ResourceComponentManager"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [
      {
        "name": "LOG"
      }
    ],
    "methods": [
      {
        "name": "doParseResource",
        "parameterTypes": [
          "io.nop.core.resource.IResource"
        ]
      },
      {
        "name": "findResource",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getResourceName",
        "parameterTypes": []
      },
      {
        "name": "getResourceNameNoExt",
        "parameterTypes": []
      },
      {
        "name": "getResourcePath",
        "parameterTypes": []
      },
      {
        "name": "getResourceStdPath",
        "parameterTypes": []
      },
      {
        "name": "getSiblingResource",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "isUseCpCache",
        "parameterTypes": []
      },
      {
        "name": "parseFromResource",
        "parameterTypes": [
          "io.nop.core.resource.IResource",
          "boolean"
        ]
      },
      {
        "name": "setResourcePath",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "shouldTraceDepends",
        "parameterTypes": []
      },
      {
        "name": "shouldTraceDepends",
        "parameterTypes": [
          "boolean"
        ]
      }
    ],
    "name": "io.nop.core.resource.component.parse.AbstractResourceParser"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "doParseResource",
        "parameterTypes": [
          "io.nop.core.resource.IResource"
        ]
      },
      {
        "name": "doParseText",
        "parameterTypes": [
          "io.nop.api.core.util.SourceLocation",
          "java.lang.String"
        ]
      },
      {
        "name": "getEncoding",
        "parameterTypes": []
      },
      {
        "name": "parseFromText",
        "parameterTypes": [
          "io.nop.api.core.util.SourceLocation",
          "java.lang.String"
        ]
      },
      {
        "name": "setEncoding",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.core.resource.component.parse.AbstractTextResourceParser"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "parseFromResource",
        "parameterTypes": [
          "io.nop.core.resource.IResource",
          "boolean"
        ]
      }
    ],
    "name": "io.nop.core.resource.component.parse.IResourceParser"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "parseFromText",
        "parameterTypes": [
          "io.nop.api.core.util.SourceLocation",
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.core.resource.component.parse.ITextResourceParser"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "createTempFile",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "doGetRelative",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "generateName",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "getResource",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.core.resource.impl.AbstractFile"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [
      {
        "name": "LOG"
      }
    ],
    "methods": [
      {
        "name": "checkNotReadonly",
        "parameterTypes": []
      },
      {
        "name": "checkSupportStream",
        "parameterTypes": []
      },
      {
        "name": "delete",
        "parameterTypes": []
      },
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "getExternalPath",
        "parameterTypes": []
      },
      {
        "name": "getInputStream",
        "parameterTypes": []
      },
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "getOutputStream",
        "parameterTypes": []
      },
      {
        "name": "getOutputStream",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getPath",
        "parameterTypes": []
      },
      {
        "name": "getResourceRegion",
        "parameterTypes": [
          "io.nop.api.core.beans.LongRangeBean"
        ]
      },
      {
        "name": "getStdPath",
        "parameterTypes": []
      },
      {
        "name": "hashCode",
        "parameterTypes": []
      },
      {
        "name": "internalObj",
        "parameterTypes": []
      },
      {
        "name": "isDirectory",
        "parameterTypes": []
      },
      {
        "name": "isReadOnly",
        "parameterTypes": []
      },
      {
        "name": "lastModified",
        "parameterTypes": []
      },
      {
        "name": "length",
        "parameterTypes": []
      },
      {
        "name": "saveToFile",
        "parameterTypes": [
          "java.io.File"
        ]
      },
      {
        "name": "saveToResource",
        "parameterTypes": [
          "io.nop.core.resource.IResource"
        ]
      },
      {
        "name": "saveToResource",
        "parameterTypes": [
          "io.nop.core.resource.IResource",
          "io.nop.api.core.util.progress.IStepProgressListener"
        ]
      },
      {
        "name": "setLastModified",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "toFile",
        "parameterTypes": []
      },
      {
        "name": "toString",
        "parameterTypes": []
      },
      {
        "name": "toURL",
        "parameterTypes": []
      },
      {
        "name": "writeToStream",
        "parameterTypes": [
          "java.io.OutputStream",
          "io.nop.api.core.util.progress.IStepProgressListener"
        ]
      }
    ],
    "name": "io.nop.core.resource.impl.AbstractResource"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "buildPath",
        "parameterTypes": [
          "java.io.File"
        ]
      },
      {
        "name": "createNewFile",
        "parameterTypes": []
      },
      {
        "name": "delete",
        "parameterTypes": []
      },
      {
        "name": "deleteOnExit",
        "parameterTypes": []
      },
      {
        "name": "doGetRelative",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "exists",
        "parameterTypes": []
      },
      {
        "name": "getCanonicalPath",
        "parameterTypes": []
      },
      {
        "name": "getChildren",
        "parameterTypes": []
      },
      {
        "name": "getExternalPath",
        "parameterTypes": []
      },
      {
        "name": "getInputStream",
        "parameterTypes": []
      },
      {
        "name": "getOutputStream",
        "parameterTypes": []
      },
      {
        "name": "getOutputStream",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "internalObj",
        "parameterTypes": []
      },
      {
        "name": "isDirectory",
        "parameterTypes": []
      },
      {
        "name": "isReadOnly",
        "parameterTypes": []
      },
      {
        "name": "lastModified",
        "parameterTypes": []
      },
      {
        "name": "length",
        "parameterTypes": []
      },
      {
        "name": "mkdirs",
        "parameterTypes": []
      },
      {
        "name": "renameTo",
        "parameterTypes": [
          "io.nop.core.resource.IResource"
        ]
      },
      {
        "name": "saveToFile",
        "parameterTypes": [
          "java.io.File"
        ]
      },
      {
        "name": "setLastModified",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "toFile",
        "parameterTypes": []
      },
      {
        "name": "toString",
        "parameterTypes": []
      },
      {
        "name": "toURL",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.core.resource.impl.FileResource"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.core.resource.tpl.IBinaryTemplateOutput"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.core.resource.tpl.ITemplateOutput"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.core.resource.tpl.ITextTemplateOutput"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [
      {
        "name": "LOG"
      },
      {
        "allowWrite": true,
        "name": "contentCache"
      },
      {
        "allowWrite": true,
        "name": "dependencyManager"
      },
      {
        "allowWrite": true,
        "name": "resourceLoader"
      },
      {
        "name": "s_loc"
      }
    ],
    "methods": [
      {
        "name": "autoFormat",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "buildLoop",
        "parameterTypes": [
          "io.nop.core.resource.tpl.TemplateGenPath",
          "io.nop.core.model.loop.INestedLoop"
        ]
      },
      {
        "name": "checkOverrideHead",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "deleteTargetResource",
        "parameterTypes": [
          "io.nop.core.resource.IResource"
        ]
      },
      {
        "name": "executeWithLoop",
        "parameterTypes": [
          "java.lang.String",
          "io.nop.core.model.loop.INestedLoop",
          "io.nop.core.lang.eval.IEvalScope"
        ]
      },
      {
        "name": "forceOverride",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getLoader",
        "parameterTypes": []
      },
      {
        "name": "getResourceChildren",
        "parameterTypes": [
          "io.nop.core.resource.IResource"
        ]
      },
      {
        "name": "getResourceLoader",
        "parameterTypes": []
      },
      {
        "name": "getTargetResource",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getTargetResourceLoader",
        "parameterTypes": []
      },
      {
        "name": "getTargetRootPath",
        "parameterTypes": []
      },
      {
        "name": "getTplResource",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getTplResourceLoader",
        "parameterTypes": []
      },
      {
        "name": "getTplRootPath",
        "parameterTypes": []
      },
      {
        "name": "isAllowWrite",
        "parameterTypes": [
          "io.nop.core.resource.IResource",
          "io.nop.core.resource.IResource",
          "java.lang.String",
          "boolean"
        ]
      },
      {
        "name": "isAutoFormat",
        "parameterTypes": []
      },
      {
        "name": "isCheckOverrideHead",
        "parameterTypes": []
      },
      {
        "name": "isForceOverride",
        "parameterTypes": []
      },
      {
        "name": "isNotChange",
        "parameterTypes": [
          "io.nop.core.resource.IResource",
          "java.lang.String"
        ]
      },
      {
        "name": "isTargetUpToDate",
        "parameterTypes": [
          "io.nop.core.resource.IResource"
        ]
      },
      {
        "name": "isTextFile",
        "parameterTypes": [
          "io.nop.core.resource.IResource"
        ]
      },
      {
        "name": "isTplFile",
        "parameterTypes": [
          "io.nop.core.resource.IResource"
        ]
      },
      {
        "name": "maybeXml",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "normalizeTargetRootDir",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "normalizeText",
        "parameterTypes": [
          "java.lang.String",
          "io.nop.core.resource.IResource"
        ]
      },
      {
        "name": "processDir",
        "parameterTypes": [
          "io.nop.core.resource.tpl.TemplateGenPath",
          "io.nop.core.resource.IResource",
          "io.nop.core.model.loop.INestedLoop",
          "io.nop.core.lang.eval.IEvalScope"
        ]
      },
      {
        "name": "processDirOrFile",
        "parameterTypes": [
          "io.nop.core.resource.tpl.TemplateGenPath",
          "io.nop.core.resource.IResource",
          "io.nop.core.model.loop.INestedLoop",
          "io.nop.core.lang.eval.IEvalScope"
        ]
      },
      {
        "name": "processFile",
        "parameterTypes": [
          "io.nop.core.resource.tpl.TemplateGenPath",
          "io.nop.core.resource.IResource",
          "io.nop.core.model.loop.INestedLoop",
          "io.nop.core.lang.eval.IEvalScope"
        ]
      },
      {
        "name": "processTpl",
        "parameterTypes": [
          "io.nop.core.resource.tpl.TemplateGenPath",
          "io.nop.core.resource.IResource",
          "io.nop.core.model.loop.INestedLoop",
          "io.nop.core.lang.eval.IEvalScope",
          "java.util.function.Consumer"
        ]
      },
      {
        "name": "readTextHeader",
        "parameterTypes": [
          "io.nop.core.resource.IResource"
        ]
      },
      {
        "name": "renderTemplate",
        "parameterTypes": [
          "io.nop.core.resource.IResource",
          "io.nop.core.resource.IResource",
          "io.nop.core.lang.eval.IEvalScope"
        ]
      },
      {
        "name": "resourceLoader",
        "parameterTypes": [
          "io.nop.core.resource.IResourceLoader"
        ]
      },
      {
        "name": "shouldIgnoreTpl",
        "parameterTypes": [
          "io.nop.core.resource.IResource"
        ]
      },
      {
        "name": "shouldKeepEmptyTargetFile",
        "parameterTypes": [
          "io.nop.core.resource.IResource"
        ]
      },
      {
        "name": "targetResourceLoader",
        "parameterTypes": [
          "io.nop.core.resource.IResourceLoader"
        ]
      },
      {
        "name": "tplResourceLoader",
        "parameterTypes": [
          "io.nop.core.resource.IResourceLoader"
        ]
      },
      {
        "name": "withContentCache",
        "parameterTypes": []
      },
      {
        "name": "withContentCache",
        "parameterTypes": [
          "io.nop.core.resource.cache.IResourceContentCache"
        ]
      },
      {
        "name": "withDependencyManager",
        "parameterTypes": []
      },
      {
        "name": "withDependencyManager",
        "parameterTypes": [
          "io.nop.core.resource.component.IResourceDependencyManager"
        ]
      },
      {
        "name": "withDependsCache",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.core.resource.tpl.TemplateFileGenerator"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.core.type.IGenericType"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.core.type.impl.AbstractGenericType"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.core.type.impl.GenericRawTypeReferenceImpl"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "writeReplace",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.core.type.impl.PredefinedGenericType"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.core.type.impl.PredefinedPrimitiveType"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.core.type.impl.PredefinedRawType"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowWrite": true,
        "name": "FIND_FIRST_RANGE"
      }
    ],
    "methods": [
      {
        "name": "exists",
        "parameterTypes": [
          "io.nop.core.lang.sql.SQL"
        ]
      },
      {
        "name": "findFirst",
        "parameterTypes": [
          "io.nop.core.lang.sql.SQL",
          "io.nop.dataset.IRowMapper"
        ]
      }
    ],
    "name": "io.nop.dao.api.AbstractSqlExecutor"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.dao.api.IDaoComponent"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.dao.api.IDaoEntity"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "clearQueryCache",
        "parameterTypes": []
      },
      {
        "name": "clearQueryCacheFor",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "evictQueryCache",
        "parameterTypes": [
          "java.lang.String",
          "java.io.Serializable"
        ]
      },
      {
        "name": "executeQuery",
        "parameterTypes": [
          "io.nop.core.lang.sql.SQL",
          "io.nop.api.core.beans.LongRangeBean",
          "java.util.function.Function"
        ]
      },
      {
        "name": "executeStatement",
        "parameterTypes": [
          "io.nop.core.lang.sql.SQL",
          "io.nop.api.core.beans.LongRangeBean",
          "java.util.function.Function",
          "io.nop.api.core.util.ICancelToken"
        ]
      },
      {
        "name": "executeUpdate",
        "parameterTypes": [
          "io.nop.core.lang.sql.SQL"
        ]
      },
      {
        "name": "exists",
        "parameterTypes": [
          "io.nop.core.lang.sql.SQL"
        ]
      },
      {
        "name": "findFirst",
        "parameterTypes": [
          "io.nop.core.lang.sql.SQL",
          "io.nop.dataset.IRowMapper"
        ]
      },
      {
        "name": "getCacheProvider",
        "parameterTypes": []
      },
      {
        "name": "getDefaultRowMapper",
        "parameterTypes": []
      },
      {
        "name": "getDialectForQuerySpace",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.dao.api.ISqlExecutor"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "addDialectSelector",
        "parameterTypes": [
          "io.nop.dao.dialect.DialectSelector"
        ]
      },
      {
        "name": "clearDialectSelectors",
        "parameterTypes": []
      },
      {
        "name": "getDialect",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getDialectForConnection",
        "parameterTypes": [
          "java.sql.Connection"
        ]
      },
      {
        "name": "getDialectForDataSource",
        "parameterTypes": [
          "javax.sql.DataSource"
        ]
      },
      {
        "name": "getDialectName",
        "parameterTypes": [
          "java.sql.Connection"
        ]
      },
      {
        "name": "getDialectSelectors",
        "parameterTypes": []
      },
      {
        "name": "instance",
        "parameterTypes": []
      },
      {
        "name": "loadDialectSelectors",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.dao.dialect.DialectManager"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "compare",
        "parameterTypes": [
          "int",
          "int"
        ]
      },
      {
        "name": "compare",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "compareTo",
        "parameterTypes": [
          "io.nop.dao.dialect.DialectSelector"
        ]
      },
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "getDialectName",
        "parameterTypes": []
      },
      {
        "name": "getDriverMajorVersion",
        "parameterTypes": []
      },
      {
        "name": "getDriverMinorVersion",
        "parameterTypes": []
      },
      {
        "name": "getDriverName",
        "parameterTypes": []
      },
      {
        "name": "getPdmTargetType",
        "parameterTypes": []
      },
      {
        "name": "getProductName",
        "parameterTypes": []
      },
      {
        "name": "getProductVersion",
        "parameterTypes": []
      },
      {
        "name": "hashCode",
        "parameterTypes": []
      },
      {
        "name": "match",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String",
          "java.lang.String",
          "int",
          "int"
        ]
      },
      {
        "name": "setDialectName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDriverMajorVersion",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setDriverMinorVersion",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setDriverName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setPdmTargetType",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setProductName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setProductVersion",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.dao.dialect.DialectSelector"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "escapeSQLName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getBitValueLiteral",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getBooleanValueLiteral",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getColumnNameCase",
        "parameterTypes": []
      },
      {
        "name": "getCreateSequenceSql",
        "parameterTypes": [
          "java.lang.String",
          "long",
          "int"
        ]
      },
      {
        "name": "getCurrentTimestampSql",
        "parameterTypes": []
      },
      {
        "name": "getDataParameterBinder",
        "parameterTypes": [
          "io.nop.commons.type.StdDataType",
          "io.nop.commons.type.StdSqlType"
        ]
      },
      {
        "name": "getDataParameterBinder",
        "parameterTypes": [
          "io.nop.commons.type.StdDataType",
          "io.nop.core.lang.sql.StdSqlType"
        ]
      },
      {
        "name": "getDateLiteral",
        "parameterTypes": [
          "java.time.LocalDate"
        ]
      },
      {
        "name": "getDateTimeLiteral",
        "parameterTypes": [
          "java.time.LocalDateTime"
        ]
      },
      {
        "name": "getDialectModel",
        "parameterTypes": []
      },
      {
        "name": "getDropSequenceSql",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getDropTableSql",
        "parameterTypes": [
          "java.lang.String",
          "boolean"
        ]
      },
      {
        "name": "getForUpdateSql",
        "parameterTypes": [
          "io.nop.dao.dialect.lock.LockOption"
        ]
      },
      {
        "name": "getFunction",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getFunctionNames",
        "parameterTypes": []
      },
      {
        "name": "getGeometryDataParameterBinder",
        "parameterTypes": []
      },
      {
        "name": "getGeometryTypeHandler",
        "parameterTypes": []
      },
      {
        "name": "getHexValueLiteral",
        "parameterTypes": [
          "io.nop.commons.bytes.ByteString"
        ]
      },
      {
        "name": "getJsonTypeHandler",
        "parameterTypes": []
      },
      {
        "name": "getLockHintSql",
        "parameterTypes": [
          "io.nop.dao.dialect.lock.LockOption"
        ]
      },
      {
        "name": "getMaxBytesSize",
        "parameterTypes": []
      },
      {
        "name": "getMaxStringSize",
        "parameterTypes": []
      },
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "getNativeType",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getPaginationHandler",
        "parameterTypes": []
      },
      {
        "name": "getSQLExceptionTranslator",
        "parameterTypes": []
      },
      {
        "name": "getSelectFromDualSql",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getSequenceNextValSql",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getStringLiteral",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getTableNameCase",
        "parameterTypes": []
      },
      {
        "name": "getTimeLiteral",
        "parameterTypes": [
          "java.time.LocalTime"
        ]
      },
      {
        "name": "getTimestampLiteral",
        "parameterTypes": [
          "java.sql.Timestamp"
        ]
      },
      {
        "name": "getValueLiteral",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "isReservedKeyword",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "isSupportBatchUpdate",
        "parameterTypes": []
      },
      {
        "name": "isSupportBatchUpdateCount",
        "parameterTypes": []
      },
      {
        "name": "isSupportDeleteTableAlias",
        "parameterTypes": []
      },
      {
        "name": "isSupportExecuteLargeUpdate",
        "parameterTypes": []
      },
      {
        "name": "isSupportILike",
        "parameterTypes": []
      },
      {
        "name": "isSupportLargeMaxRows",
        "parameterTypes": []
      },
      {
        "name": "isSupportQueryTimeout",
        "parameterTypes": []
      },
      {
        "name": "isSupportReturningForUpdate",
        "parameterTypes": []
      },
      {
        "name": "isSupportRowValueConstructor",
        "parameterTypes": []
      },
      {
        "name": "isSupportSavePoint",
        "parameterTypes": []
      },
      {
        "name": "isSupportSequence",
        "parameterTypes": []
      },
      {
        "name": "isSupportSomeSubQuery",
        "parameterTypes": []
      },
      {
        "name": "isSupportTransaction",
        "parameterTypes": []
      },
      {
        "name": "isSupportTruncateTable",
        "parameterTypes": []
      },
      {
        "name": "isSupportUpdateFromJoin",
        "parameterTypes": []
      },
      {
        "name": "isSupportUpdateTableAlias",
        "parameterTypes": []
      },
      {
        "name": "isSupportWithAsClause",
        "parameterTypes": []
      },
      {
        "name": "isUseAsInFrom",
        "parameterTypes": []
      },
      {
        "name": "isUseGetStringForDate",
        "parameterTypes": []
      },
      {
        "name": "jdbcGet",
        "parameterTypes": [
          "java.sql.ResultSet",
          "int"
        ]
      },
      {
        "name": "jdbcGetString",
        "parameterTypes": [
          "java.sql.ResultSet",
          "int"
        ]
      },
      {
        "name": "jdbcSet",
        "parameterTypes": [
          "java.sql.PreparedStatement",
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "jdbcSet",
        "parameterTypes": [
          "java.sql.ResultSet",
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "jdbcSetBlob",
        "parameterTypes": [
          "java.sql.PreparedStatement",
          "int",
          "io.nop.api.core.convert.IByteArrayView"
        ]
      },
      {
        "name": "jdbcSetBlob",
        "parameterTypes": [
          "java.sql.ResultSet",
          "int",
          "io.nop.api.core.convert.IByteArrayView"
        ]
      },
      {
        "name": "jdbcSetClob",
        "parameterTypes": [
          "java.sql.PreparedStatement",
          "int",
          "java.lang.String"
        ]
      },
      {
        "name": "jdbcSetClob",
        "parameterTypes": [
          "java.sql.ResultSet",
          "int",
          "java.lang.String"
        ]
      },
      {
        "name": "stdToNativeSqlType",
        "parameterTypes": [
          "io.nop.commons.type.StdSqlType",
          "int",
          "int"
        ]
      },
      {
        "name": "stdToNativeSqlType",
        "parameterTypes": [
          "io.nop.core.lang.sql.StdSqlType",
          "int",
          "int"
        ]
      },
      {
        "name": "unescapeSQLName",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.dao.dialect.IDialect"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getDialectForQuerySpace",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.dao.dialect.IDialectProvider"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [
      {
        "name": "LOG"
      }
    ],
    "methods": [
      {
        "name": "buildFunctionSql",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "escapeSQLName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getBitValueLiteral",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getBooleanValueLiteral",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getColumnNameCase",
        "parameterTypes": []
      },
      {
        "name": "getCreateSequenceSql",
        "parameterTypes": [
          "java.lang.String",
          "long",
          "int"
        ]
      },
      {
        "name": "getCurrentTimestampSql",
        "parameterTypes": []
      },
      {
        "name": "getDataParameterBinder",
        "parameterTypes": [
          "io.nop.commons.type.StdDataType",
          "io.nop.commons.type.StdSqlType"
        ]
      },
      {
        "name": "getDataParameterBinder",
        "parameterTypes": [
          "io.nop.commons.type.StdDataType",
          "io.nop.core.lang.sql.StdSqlType"
        ]
      },
      {
        "name": "getDateLiteral",
        "parameterTypes": [
          "java.time.LocalDate"
        ]
      },
      {
        "name": "getDateTimeLiteral",
        "parameterTypes": [
          "java.time.LocalDateTime"
        ]
      },
      {
        "name": "getDialectModel",
        "parameterTypes": []
      },
      {
        "name": "getDropSequenceSql",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getDropTableSql",
        "parameterTypes": [
          "java.lang.String",
          "boolean"
        ]
      },
      {
        "name": "getExceptKeyword",
        "parameterTypes": []
      },
      {
        "name": "getForUpdateSql",
        "parameterTypes": [
          "io.nop.dao.dialect.lock.LockOption"
        ]
      },
      {
        "name": "getFunction",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getFunctionNames",
        "parameterTypes": []
      },
      {
        "name": "getGeometryDataParameterBinder",
        "parameterTypes": []
      },
      {
        "name": "getGeometryTypeHandler",
        "parameterTypes": []
      },
      {
        "name": "getHexValueLiteral",
        "parameterTypes": [
          "io.nop.commons.bytes.ByteString"
        ]
      },
      {
        "name": "getJsonTypeHandler",
        "parameterTypes": []
      },
      {
        "name": "getKeywordQuote",
        "parameterTypes": []
      },
      {
        "name": "getLocation",
        "parameterTypes": []
      },
      {
        "name": "getLockHintSql",
        "parameterTypes": [
          "io.nop.dao.dialect.lock.LockOption"
        ]
      },
      {
        "name": "getMaxBytesSize",
        "parameterTypes": []
      },
      {
        "name": "getMaxStringSize",
        "parameterTypes": []
      },
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "getNativeType",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getPaginationHandler",
        "parameterTypes": []
      },
      {
        "name": "getSQLExceptionTranslator",
        "parameterTypes": []
      },
      {
        "name": "getSelectFromDualSql",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getSequenceNextValSql",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getStringLiteral",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getTableNameCase",
        "parameterTypes": []
      },
      {
        "name": "getTimeLiteral",
        "parameterTypes": [
          "java.time.LocalTime"
        ]
      },
      {
        "name": "getTimestampLiteral",
        "parameterTypes": [
          "java.sql.Timestamp"
        ]
      },
      {
        "name": "getUpdateKeyword",
        "parameterTypes": []
      },
      {
        "name": "getValueLiteral",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "initDataTypes",
        "parameterTypes": []
      },
      {
        "name": "initFunctions",
        "parameterTypes": []
      },
      {
        "name": "isReservedKeyword",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "isSupportBatchUpdate",
        "parameterTypes": []
      },
      {
        "name": "isSupportBatchUpdateCount",
        "parameterTypes": []
      },
      {
        "name": "isSupportDeleteTableAlias",
        "parameterTypes": []
      },
      {
        "name": "isSupportExecuteLargeUpdate",
        "parameterTypes": []
      },
      {
        "name": "isSupportILike",
        "parameterTypes": []
      },
      {
        "name": "isSupportLargeMaxRows",
        "parameterTypes": []
      },
      {
        "name": "isSupportQueryTimeout",
        "parameterTypes": []
      },
      {
        "name": "isSupportReturningForUpdate",
        "parameterTypes": []
      },
      {
        "name": "isSupportRowValueConstructor",
        "parameterTypes": []
      },
      {
        "name": "isSupportSavePoint",
        "parameterTypes": []
      },
      {
        "name": "isSupportSequence",
        "parameterTypes": []
      },
      {
        "name": "isSupportSomeSubQuery",
        "parameterTypes": []
      },
      {
        "name": "isSupportTransaction",
        "parameterTypes": []
      },
      {
        "name": "isSupportTruncateTable",
        "parameterTypes": []
      },
      {
        "name": "isSupportUpdateFromJoin",
        "parameterTypes": []
      },
      {
        "name": "isSupportUpdateTableAlias",
        "parameterTypes": []
      },
      {
        "name": "isSupportWithAsClause",
        "parameterTypes": []
      },
      {
        "name": "isUseAsInFrom",
        "parameterTypes": []
      },
      {
        "name": "isUseGetStringForDate",
        "parameterTypes": []
      },
      {
        "name": "jdbcGet",
        "parameterTypes": [
          "java.sql.ResultSet",
          "int"
        ]
      },
      {
        "name": "jdbcGetString",
        "parameterTypes": [
          "java.sql.ResultSet",
          "int"
        ]
      },
      {
        "name": "jdbcSet",
        "parameterTypes": [
          "java.sql.PreparedStatement",
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "jdbcSet",
        "parameterTypes": [
          "java.sql.ResultSet",
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "jdbcSetBlob",
        "parameterTypes": [
          "java.sql.PreparedStatement",
          "int",
          "io.nop.api.core.convert.IByteArrayView"
        ]
      },
      {
        "name": "jdbcSetBlob",
        "parameterTypes": [
          "java.sql.ResultSet",
          "int",
          "io.nop.api.core.convert.IByteArrayView"
        ]
      },
      {
        "name": "jdbcSetClob",
        "parameterTypes": [
          "java.sql.PreparedStatement",
          "int",
          "java.lang.String"
        ]
      },
      {
        "name": "jdbcSetClob",
        "parameterTypes": [
          "java.sql.ResultSet",
          "int",
          "java.lang.String"
        ]
      },
      {
        "name": "newInstance",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object"
        ]
      },
      {
        "name": "stdToNativeSqlType",
        "parameterTypes": [
          "io.nop.commons.type.StdSqlType",
          "int",
          "int"
        ]
      },
      {
        "name": "stdToNativeSqlType",
        "parameterTypes": [
          "io.nop.core.lang.sql.StdSqlType",
          "int",
          "int"
        ]
      },
      {
        "name": "unescapeSQLName",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.dao.dialect.impl.DialectImpl"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "fromLiteral",
        "parameterTypes": [
          "java.lang.String",
          "io.nop.dao.dialect.IDialect"
        ]
      },
      {
        "name": "getStdSqlType",
        "parameterTypes": []
      },
      {
        "name": "getValue",
        "parameterTypes": [
          "io.nop.dataset.binder.IDataParameters",
          "int"
        ]
      },
      {
        "name": "isJavaType",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "setValue",
        "parameterTypes": [
          "io.nop.dataset.binder.IDataParameters",
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "toLiteral",
        "parameterTypes": [
          "java.lang.Object",
          "io.nop.dao.dialect.IDialect"
        ]
      }
    ],
    "name": "io.nop.dao.dialect.json.DefaultJsonTypeHandler"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "setValue",
        "parameterTypes": [
          "io.nop.dataset.binder.IDataParameters",
          "int",
          "java.lang.Object"
        ]
      }
    ],
    "name": "io.nop.dao.dialect.json.H2JsonTypeHandler"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "setValue",
        "parameterTypes": [
          "io.nop.dataset.binder.IDataParameters",
          "int",
          "java.lang.Object"
        ]
      }
    ],
    "name": "io.nop.dao.dialect.json.MySqlJsonTypeHandler"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "setValue",
        "parameterTypes": [
          "io.nop.dataset.binder.IDataParameters",
          "int",
          "java.lang.Object"
        ]
      }
    ],
    "name": "io.nop.dao.dialect.json.PostgreSqlJsonTypeHandler"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "doParseResource",
        "parameterTypes": [
          "io.nop.core.resource.IResource"
        ]
      }
    ],
    "name": "io.nop.dao.dialect.loader.DialectModelLoader"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.dao.dialect.model.DialectDiscoverySqls"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.dao.dialect.model.DialectErrorCodeModel"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.dao.dialect.model.DialectFeatures"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.dao.dialect.model.DialectModel"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.dao.dialect.model.DialectSqls"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getCodeOrName",
        "parameterTypes": []
      },
      {
        "name": "isAllowPrecision",
        "parameterTypes": [
          "int"
        ]
      }
    ],
    "name": "io.nop.dao.dialect.model.SqlDataTypeModel"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getType",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.dao.dialect.model.SqlNativeFunctionModel"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getType",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.dao.dialect.model.SqlTemplateModel"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "copyTo",
        "parameterTypes": [
          "io.nop.dao.dialect.model.DialectDiscoverySqls"
        ]
      },
      {
        "name": "freeze",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getSelectCatalogs",
        "parameterTypes": []
      },
      {
        "name": "getSelectConstaints",
        "parameterTypes": []
      },
      {
        "name": "getSelectIndexes",
        "parameterTypes": []
      },
      {
        "name": "getSelectPrimaryKeys",
        "parameterTypes": []
      },
      {
        "name": "getSelectSchemas",
        "parameterTypes": []
      },
      {
        "name": "getSelectSequences",
        "parameterTypes": []
      },
      {
        "name": "getSelectTableColumnComments",
        "parameterTypes": []
      },
      {
        "name": "getSelectTableComments",
        "parameterTypes": []
      },
      {
        "name": "getSelectTables",
        "parameterTypes": []
      },
      {
        "name": "getSelectViewColumnComments",
        "parameterTypes": []
      },
      {
        "name": "getSelectViewComments",
        "parameterTypes": []
      },
      {
        "name": "getSelectViews",
        "parameterTypes": []
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "outputJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      },
      {
        "name": "setSelectCatalogs",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setSelectConstaints",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setSelectIndexes",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setSelectPrimaryKeys",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setSelectSchemas",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setSelectSequences",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setSelectTableColumnComments",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setSelectTableComments",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setSelectTables",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setSelectViewColumnComments",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setSelectViewComments",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setSelectViews",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.dao.dialect.model._gen._DialectDiscoverySqls"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "copyTo",
        "parameterTypes": [
          "io.nop.dao.dialect.model.DialectErrorCodeModel"
        ]
      },
      {
        "name": "freeze",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "getUseSqlState",
        "parameterTypes": []
      },
      {
        "name": "getValues",
        "parameterTypes": []
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "outputJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setUseSqlState",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setValues",
        "parameterTypes": [
          "java.util.Set"
        ]
      }
    ],
    "name": "io.nop.dao.dialect.model._gen._DialectErrorCodeModel"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "copyTo",
        "parameterTypes": [
          "io.nop.dao.dialect.model.DialectFeatures"
        ]
      },
      {
        "name": "freeze",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getSupportBatchUpdate",
        "parameterTypes": []
      },
      {
        "name": "getSupportBatchUpdateCount",
        "parameterTypes": []
      },
      {
        "name": "getSupportDeleteFromJoin",
        "parameterTypes": []
      },
      {
        "name": "getSupportDeleteTableAlias",
        "parameterTypes": []
      },
      {
        "name": "getSupportExecuteLargeUpdate",
        "parameterTypes": []
      },
      {
        "name": "getSupportFullJoin",
        "parameterTypes": []
      },
      {
        "name": "getSupportILike",
        "parameterTypes": []
      },
      {
        "name": "getSupportLargeMaxRows",
        "parameterTypes": []
      },
      {
        "name": "getSupportNullsFirst",
        "parameterTypes": []
      },
      {
        "name": "getSupportOutputForUpdate",
        "parameterTypes": []
      },
      {
        "name": "getSupportQueryTimeout",
        "parameterTypes": []
      },
      {
        "name": "getSupportReturningForUpdate",
        "parameterTypes": []
      },
      {
        "name": "getSupportRightJoin",
        "parameterTypes": []
      },
      {
        "name": "getSupportRowValueConstructor",
        "parameterTypes": []
      },
      {
        "name": "getSupportSavePoint",
        "parameterTypes": []
      },
      {
        "name": "getSupportSequence",
        "parameterTypes": []
      },
      {
        "name": "getSupportSomeSubQuery",
        "parameterTypes": []
      },
      {
        "name": "getSupportTransaction",
        "parameterTypes": []
      },
      {
        "name": "getSupportTruncateTable",
        "parameterTypes": []
      },
      {
        "name": "getSupportUpdateFromJoin",
        "parameterTypes": []
      },
      {
        "name": "getSupportUpdateTableAlias",
        "parameterTypes": []
      },
      {
        "name": "getSupportWithAsClause",
        "parameterTypes": []
      },
      {
        "name": "getUseAsInFrom",
        "parameterTypes": []
      },
      {
        "name": "getUseGetStringForDate",
        "parameterTypes": []
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "outputJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      },
      {
        "name": "setSupportBatchUpdate",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setSupportBatchUpdateCount",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setSupportDeleteFromJoin",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setSupportDeleteTableAlias",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setSupportExecuteLargeUpdate",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setSupportFullJoin",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setSupportILike",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setSupportLargeMaxRows",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setSupportNullsFirst",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setSupportOutputForUpdate",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setSupportQueryTimeout",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setSupportReturningForUpdate",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setSupportRightJoin",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setSupportRowValueConstructor",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setSupportSavePoint",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setSupportSequence",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setSupportSomeSubQuery",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setSupportTransaction",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setSupportTruncateTable",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setSupportUpdateFromJoin",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setSupportUpdateTableAlias",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setSupportWithAsClause",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setUseAsInFrom",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setUseGetStringForDate",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      }
    ],
    "name": "io.nop.dao.dialect.model._gen._DialectFeatures"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "addErrorCode",
        "parameterTypes": [
          "io.nop.dao.dialect.model.DialectErrorCodeModel"
        ]
      },
      {
        "name": "addSqlDataType",
        "parameterTypes": [
          "io.nop.dao.dialect.model.SqlDataTypeModel"
        ]
      },
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "copyTo",
        "parameterTypes": [
          "io.nop.dao.dialect.model.DialectModel"
        ]
      },
      {
        "name": "freeze",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getAllSchemaPattern",
        "parameterTypes": []
      },
      {
        "name": "getClassName",
        "parameterTypes": []
      },
      {
        "name": "getColumnNameCase",
        "parameterTypes": []
      },
      {
        "name": "getDbProductNames",
        "parameterTypes": []
      },
      {
        "name": "getDefaultNullsFirst",
        "parameterTypes": []
      },
      {
        "name": "getDiscoverySqls",
        "parameterTypes": []
      },
      {
        "name": "getDriverClassName",
        "parameterTypes": []
      },
      {
        "name": "getErrorCode",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getErrorCodes",
        "parameterTypes": []
      },
      {
        "name": "getFeatures",
        "parameterTypes": []
      },
      {
        "name": "getFunctions",
        "parameterTypes": []
      },
      {
        "name": "getGeometryParameterBinder",
        "parameterTypes": []
      },
      {
        "name": "getGeometryTypeHandler",
        "parameterTypes": []
      },
      {
        "name": "getJdbcUrlPattern",
        "parameterTypes": []
      },
      {
        "name": "getJsonTypeHandler",
        "parameterTypes": []
      },
      {
        "name": "getKeywordQuote",
        "parameterTypes": []
      },
      {
        "name": "getKeywordUnderscore",
        "parameterTypes": []
      },
      {
        "name": "getMaxBytesSize",
        "parameterTypes": []
      },
      {
        "name": "getMaxStringSize",
        "parameterTypes": []
      },
      {
        "name": "getPaginationHandler",
        "parameterTypes": []
      },
      {
        "name": "getRename",
        "parameterTypes": []
      },
      {
        "name": "getReservedKeywords",
        "parameterTypes": []
      },
      {
        "name": "getSqlDataType",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getSqlDataTypes",
        "parameterTypes": []
      },
      {
        "name": "getSqlExceptionTranslator",
        "parameterTypes": []
      },
      {
        "name": "getSqls",
        "parameterTypes": []
      },
      {
        "name": "getTableNameCase",
        "parameterTypes": []
      },
      {
        "name": "getUpsertHandler",
        "parameterTypes": []
      },
      {
        "name": "hasErrorCode",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "hasErrorCodes",
        "parameterTypes": []
      },
      {
        "name": "hasFunctions",
        "parameterTypes": []
      },
      {
        "name": "hasRename",
        "parameterTypes": []
      },
      {
        "name": "hasSqlDataType",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "hasSqlDataTypes",
        "parameterTypes": []
      },
      {
        "name": "keySet_errorCodes",
        "parameterTypes": []
      },
      {
        "name": "keySet_functions",
        "parameterTypes": []
      },
      {
        "name": "keySet_sqlDataTypes",
        "parameterTypes": []
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "outputJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      },
      {
        "name": "setAllSchemaPattern",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setClassName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setColumnNameCase",
        "parameterTypes": [
          "io.nop.commons.text.CharacterCase"
        ]
      },
      {
        "name": "setDbProductNames",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setDefaultNullsFirst",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setDiscoverySqls",
        "parameterTypes": [
          "io.nop.dao.dialect.model.DialectDiscoverySqls"
        ]
      },
      {
        "name": "setDriverClassName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setErrorCodes",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setFeatures",
        "parameterTypes": [
          "io.nop.dao.dialect.model.DialectFeatures"
        ]
      },
      {
        "name": "setFunctions",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setGeometryParameterBinder",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setGeometryTypeHandler",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setJdbcUrlPattern",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setJsonTypeHandler",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setKeywordQuote",
        "parameterTypes": [
          "java.lang.Character"
        ]
      },
      {
        "name": "setKeywordUnderscore",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setMaxBytesSize",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setMaxStringSize",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setPaginationHandler",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setRename",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "setReservedKeywords",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setSqlDataTypes",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setSqlExceptionTranslator",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setSqls",
        "parameterTypes": [
          "io.nop.dao.dialect.model.DialectSqls"
        ]
      },
      {
        "name": "setTableNameCase",
        "parameterTypes": [
          "io.nop.commons.text.CharacterCase"
        ]
      },
      {
        "name": "setUpsertHandler",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.dao.dialect.model._gen._DialectModel"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "copyTo",
        "parameterTypes": [
          "io.nop.dao.dialect.model.DialectSqls"
        ]
      },
      {
        "name": "freeze",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getCreateSequence",
        "parameterTypes": []
      },
      {
        "name": "getDateLiteral",
        "parameterTypes": []
      },
      {
        "name": "getDateTimeLiteral",
        "parameterTypes": []
      },
      {
        "name": "getDropSequence",
        "parameterTypes": []
      },
      {
        "name": "getDropTable",
        "parameterTypes": []
      },
      {
        "name": "getEscapeSlash",
        "parameterTypes": []
      },
      {
        "name": "getExceptKeyword",
        "parameterTypes": []
      },
      {
        "name": "getFalseString",
        "parameterTypes": []
      },
      {
        "name": "getForUpdate",
        "parameterTypes": []
      },
      {
        "name": "getInsertKeyword",
        "parameterTypes": []
      },
      {
        "name": "getLockHint",
        "parameterTypes": []
      },
      {
        "name": "getSelectFromDual",
        "parameterTypes": []
      },
      {
        "name": "getSequenceNextVal",
        "parameterTypes": []
      },
      {
        "name": "getTimeLiteral",
        "parameterTypes": []
      },
      {
        "name": "getTimestampLiteral",
        "parameterTypes": []
      },
      {
        "name": "getTrueString",
        "parameterTypes": []
      },
      {
        "name": "getUpdateKeyword",
        "parameterTypes": []
      },
      {
        "name": "getValidationQuery",
        "parameterTypes": []
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "outputJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      },
      {
        "name": "setCreateSequence",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDateLiteral",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDateTimeLiteral",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDropSequence",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDropTable",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setEscapeSlash",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setExceptKeyword",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setFalseString",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setForUpdate",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setInsertKeyword",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setLockHint",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setSelectFromDual",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setSequenceNextVal",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setTimeLiteral",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setTimestampLiteral",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setTrueString",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setUpdateKeyword",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setValidationQuery",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.dao.dialect.model._gen._DialectSqls"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "copyTo",
        "parameterTypes": [
          "io.nop.dao.dialect.model.SqlDataTypeModel"
        ]
      },
      {
        "name": "freeze",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getAlias",
        "parameterTypes": []
      },
      {
        "name": "getAllowPrecision",
        "parameterTypes": []
      },
      {
        "name": "getCode",
        "parameterTypes": []
      },
      {
        "name": "getJdbcBinder",
        "parameterTypes": []
      },
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "getPrecision",
        "parameterTypes": []
      },
      {
        "name": "getScale",
        "parameterTypes": []
      },
      {
        "name": "getStdSqlType",
        "parameterTypes": []
      },
      {
        "name": "isAllowExceedPrecision",
        "parameterTypes": []
      },
      {
        "name": "isDeprecated",
        "parameterTypes": []
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "outputJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      },
      {
        "name": "setAlias",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setAllowExceedPrecision",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setAllowPrecision",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setCode",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDeprecated",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setJdbcBinder",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setPrecision",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setScale",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setStdSqlType",
        "parameterTypes": [
          "io.nop.commons.type.StdSqlType"
        ]
      },
      {
        "name": "setStdSqlType",
        "parameterTypes": [
          "io.nop.core.lang.sql.StdSqlType"
        ]
      }
    ],
    "name": "io.nop.dao.dialect.model._gen._SqlDataTypeModel"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "copyTo",
        "parameterTypes": [
          "io.nop.dao.dialect.model.SqlNativeFunctionModel"
        ]
      },
      {
        "name": "freeze",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getArgTypes",
        "parameterTypes": []
      },
      {
        "name": "getDescription",
        "parameterTypes": []
      },
      {
        "name": "getHasParenthesis",
        "parameterTypes": []
      },
      {
        "name": "getMaxArgCount",
        "parameterTypes": []
      },
      {
        "name": "getMinArgCount",
        "parameterTypes": []
      },
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "getRealName",
        "parameterTypes": []
      },
      {
        "name": "getReturnType",
        "parameterTypes": []
      },
      {
        "name": "getSpecial",
        "parameterTypes": []
      },
      {
        "name": "getTestSql",
        "parameterTypes": []
      },
      {
        "name": "getType",
        "parameterTypes": []
      },
      {
        "name": "isOnlyForWindowExpr",
        "parameterTypes": []
      },
      {
        "name": "isReturnFirstArgType",
        "parameterTypes": []
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "outputJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      },
      {
        "name": "setArgTypes",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setDescription",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setHasParenthesis",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setMaxArgCount",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setMinArgCount",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setOnlyForWindowExpr",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setRealName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setReturnFirstArgType",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setReturnType",
        "parameterTypes": [
          "io.nop.commons.type.StdSqlType"
        ]
      },
      {
        "name": "setReturnType",
        "parameterTypes": [
          "io.nop.core.lang.sql.StdSqlType"
        ]
      },
      {
        "name": "setSpecial",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setTestSql",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setType",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.dao.dialect.model._gen._SqlNativeFunctionModel"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "copyTo",
        "parameterTypes": [
          "io.nop.dao.dialect.model.SqlTemplateModel"
        ]
      },
      {
        "name": "freeze",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getArgTypes",
        "parameterTypes": []
      },
      {
        "name": "getDescription",
        "parameterTypes": []
      },
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "getReturnType",
        "parameterTypes": []
      },
      {
        "name": "getSource",
        "parameterTypes": []
      },
      {
        "name": "getTestSql",
        "parameterTypes": []
      },
      {
        "name": "getType",
        "parameterTypes": []
      },
      {
        "name": "isOnlyForWindowExpr",
        "parameterTypes": []
      },
      {
        "name": "isReturnFirstArgType",
        "parameterTypes": []
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "outputJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      },
      {
        "name": "setArgTypes",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setDescription",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setOnlyForWindowExpr",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setReturnFirstArgType",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setReturnType",
        "parameterTypes": [
          "io.nop.commons.type.StdSqlType"
        ]
      },
      {
        "name": "setReturnType",
        "parameterTypes": [
          "io.nop.core.lang.sql.StdSqlType"
        ]
      },
      {
        "name": "setSource",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setTestSql",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setType",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.dao.dialect.model._gen._SqlTemplateModel"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getPagedSql",
        "parameterTypes": [
          "io.nop.api.core.beans.LongRangeBean",
          "io.nop.core.lang.sql.SQL"
        ]
      },
      {
        "name": "prepareResultSet",
        "parameterTypes": [
          "io.nop.api.core.beans.LongRangeBean",
          "java.sql.ResultSet"
        ]
      },
      {
        "name": "prepareStatement",
        "parameterTypes": [
          "io.nop.api.core.beans.LongRangeBean",
          "java.sql.PreparedStatement"
        ]
      }
    ],
    "name": "io.nop.dao.dialect.pagination.AbstractPaginationHandler"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "buildPageExpr",
        "parameterTypes": [
          "io.nop.core.lang.sql.ISqlExpr",
          "io.nop.core.lang.sql.ISqlExpr",
          "io.nop.core.lang.sql.ISqlExpr"
        ]
      },
      {
        "name": "getPagedSql",
        "parameterTypes": [
          "io.nop.api.core.beans.LongRangeBean",
          "io.nop.core.lang.sql.SQL"
        ]
      },
      {
        "name": "prepareResultSet",
        "parameterTypes": [
          "io.nop.api.core.beans.LongRangeBean",
          "java.sql.ResultSet"
        ]
      },
      {
        "name": "prepareStatement",
        "parameterTypes": [
          "io.nop.api.core.beans.LongRangeBean",
          "java.sql.PreparedStatement"
        ]
      }
    ],
    "name": "io.nop.dao.dialect.pagination.IPaginationHandler"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [
      {
        "name": "INSTANCE"
      }
    ],
    "methods": [
      {
        "name": "buildPageExpr",
        "parameterTypes": [
          "io.nop.core.lang.sql.ISqlExpr",
          "io.nop.core.lang.sql.ISqlExpr",
          "io.nop.core.lang.sql.ISqlExpr"
        ]
      },
      {
        "name": "getPagedSql",
        "parameterTypes": [
          "io.nop.api.core.beans.LongRangeBean",
          "io.nop.core.lang.sql.SQL"
        ]
      }
    ],
    "name": "io.nop.dao.dialect.pagination.LimitOffsetPaginationHandler"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [
      {
        "name": "INSTANCE"
      }
    ],
    "methods": [
      {
        "name": "buildPageExpr",
        "parameterTypes": [
          "io.nop.core.lang.sql.ISqlExpr",
          "io.nop.core.lang.sql.ISqlExpr",
          "io.nop.core.lang.sql.ISqlExpr"
        ]
      },
      {
        "name": "getPagedSql",
        "parameterTypes": [
          "io.nop.api.core.beans.LongRangeBean",
          "io.nop.core.lang.sql.SQL"
        ]
      }
    ],
    "name": "io.nop.dao.dialect.pagination.OffsetFetchPaginationHandler"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.dao.initialize.DaoDialectInitializer"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.dao.jdbc.dataset.JdbcDataSet"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.dao.jdbc.datasource.HikariDataSourceFactory"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.dao.jdbc.impl.JdbcDataSetHelper"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [
      {
        "name": "LOG"
      }
    ],
    "methods": [
      {
        "name": "callFunc",
        "parameterTypes": [
          "io.nop.core.lang.sql.SQL"
        ]
      },
      {
        "name": "clearQueryCache",
        "parameterTypes": []
      },
      {
        "name": "clearQueryCacheFor",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "currentConnection",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "evictQueryCache",
        "parameterTypes": [
          "java.lang.String",
          "java.io.Serializable"
        ]
      },
      {
        "name": "executeQuery",
        "parameterTypes": [
          "io.nop.core.lang.sql.SQL",
          "io.nop.api.core.beans.LongRangeBean",
          "java.util.function.Function"
        ]
      },
      {
        "name": "executeStatement",
        "parameterTypes": [
          "io.nop.core.lang.sql.SQL",
          "io.nop.api.core.beans.LongRangeBean",
          "java.util.function.Function",
          "io.nop.api.core.util.ICancelToken"
        ]
      },
      {
        "name": "executeUpdate",
        "parameterTypes": [
          "io.nop.core.lang.sql.SQL"
        ]
      },
      {
        "name": "existsTable",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "getCacheProvider",
        "parameterTypes": []
      },
      {
        "name": "getDaoMetrics",
        "parameterTypes": []
      },
      {
        "name": "getDbCurrentTimestamp",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getDbEstimatedClock",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getDefaultRowMapper",
        "parameterTypes": []
      },
      {
        "name": "getDialectForQuerySpace",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "isQuerySpaceDefined",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "runWithConnection",
        "parameterTypes": [
          "io.nop.core.lang.sql.SQL",
          "java.util.function.Function"
        ]
      },
      {
        "name": "runWithConnection",
        "parameterTypes": [
          "java.lang.String",
          "io.nop.core.lang.sql.SQL",
          "io.nop.api.core.beans.LongRangeBean",
          "java.util.function.Function"
        ]
      },
      {
        "name": "setCacheProvider",
        "parameterTypes": [
          "io.nop.commons.cache.ICacheProvider"
        ]
      },
      {
        "name": "setDaoMetrics",
        "parameterTypes": [
          "io.nop.dao.metrics.IDaoMetrics"
        ]
      },
      {
        "name": "setDialectProvider",
        "parameterTypes": [
          "io.nop.dao.dialect.IDialectProvider"
        ]
      },
      {
        "name": "setTransactionTemplate",
        "parameterTypes": [
          "io.nop.dao.txn.ITransactionTemplate"
        ]
      },
      {
        "name": "txn",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.dao.jdbc.impl.JdbcTemplateImpl"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getConnection",
        "parameterTypes": []
      },
      {
        "name": "getDaoMetrics",
        "parameterTypes": []
      },
      {
        "name": "getDialectForQuerySpace",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "newTransaction",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDaoMetrics",
        "parameterTypes": [
          "io.nop.dao.metrics.IDaoMetrics"
        ]
      },
      {
        "name": "setEagerReleaseConnection",
        "parameterTypes": [
          "boolean"
        ]
      }
    ],
    "name": "io.nop.dao.jdbc.txn.JdbcTransactionFactory"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "beginBatchUpdate",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "beginExecuteUpdate",
        "parameterTypes": [
          "io.nop.core.lang.sql.SQL"
        ]
      },
      {
        "name": "beginQuery",
        "parameterTypes": [
          "io.nop.core.lang.sql.SQL",
          "io.nop.api.core.beans.LongRangeBean"
        ]
      },
      {
        "name": "endBatchUpdate",
        "parameterTypes": [
          "java.lang.Object",
          "long"
        ]
      },
      {
        "name": "endExecuteUpdate",
        "parameterTypes": [
          "java.lang.Object",
          "long"
        ]
      },
      {
        "name": "endQuery",
        "parameterTypes": [
          "java.lang.Object",
          "long",
          "boolean"
        ]
      },
      {
        "name": "getPrefix",
        "parameterTypes": []
      },
      {
        "name": "getRegistry",
        "parameterTypes": []
      },
      {
        "name": "onObtainConnection",
        "parameterTypes": []
      },
      {
        "name": "onTransactionFailure",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "onTransactionOpen",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "onTransactionSuccess",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.dao.metrics.DaoMetricsImpl"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [
      {
        "name": "INSTANCE"
      }
    ],
    "methods": [
      {
        "name": "generateLong",
        "parameterTypes": [
          "java.lang.String",
          "boolean"
        ]
      },
      {
        "name": "generateString",
        "parameterTypes": [
          "java.lang.String",
          "boolean"
        ]
      }
    ],
    "name": "io.nop.dao.seq.UuidSequenceGenerator"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [
      {
        "name": "INSTANCE"
      }
    ],
    "methods": [
      {
        "name": "isSupportShard",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "selectShard",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String",
          "java.lang.Object"
        ]
      },
      {
        "name": "selectShards",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String",
          "java.lang.Object",
          "java.lang.Object"
        ]
      }
    ],
    "name": "io.nop.dao.shard.EmptyShardSelector"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [
      {
        "name": "LOG"
      }
    ],
    "methods": [
      {
        "name": "addDataSource",
        "parameterTypes": [
          "java.lang.String",
          "javax.sql.DataSource"
        ]
      },
      {
        "name": "addQuerySpace",
        "parameterTypes": [
          "java.lang.String",
          "javax.sql.DataSource"
        ]
      },
      {
        "name": "addTransactionFactory",
        "parameterTypes": [
          "java.lang.String",
          "io.nop.dao.txn.ITransactionFactory"
        ]
      },
      {
        "name": "getDefaultListener",
        "parameterTypes": []
      },
      {
        "name": "getDialectForQuerySpace",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getDialectNameForQuerySpace",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getMainTxnGroup",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getNamedQuerySpaces",
        "parameterTypes": []
      },
      {
        "name": "getQuerySpaceToDialectMap",
        "parameterTypes": []
      },
      {
        "name": "getRegisteredTransaction",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getTransactionFactory",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "isQuerySpaceDefined",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "newTransaction",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "registerTransaction",
        "parameterTypes": [
          "io.nop.dao.txn.ITransaction"
        ]
      },
      {
        "name": "removeDataSource",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "removeQuerySpace",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "removeTransactionFactory",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDataSourceMap",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "setDefaultFactory",
        "parameterTypes": [
          "io.nop.dao.txn.ITransactionFactory"
        ]
      },
      {
        "name": "setDefaultListener",
        "parameterTypes": [
          "io.nop.dao.txn.ITransactionListener"
        ]
      },
      {
        "name": "setQuerySpaceToDialectConfig",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setQuerySpaceToDialectMap",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "setTransactionFactoryMap",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "setTransactionMetrics",
        "parameterTypes": [
          "io.nop.dao.txn.ITransactionMetrics"
        ]
      },
      {
        "name": "setTxnGroupMap",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "setTxnGroupMapConfig",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "unregisterTransaction",
        "parameterTypes": [
          "io.nop.dao.txn.ITransaction"
        ]
      }
    ],
    "name": "io.nop.dao.txn.impl.DefaultTransactionManager"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getDialectForQuerySpace",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getMainTxnGroup",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getRegisteredTransaction",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getTransactionManager",
        "parameterTypes": []
      },
      {
        "name": "isQuerySpaceDefined",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "runInTransaction",
        "parameterTypes": [
          "java.lang.String",
          "io.nop.api.core.annotations.txn.TransactionPropagation",
          "java.util.function.Function"
        ]
      },
      {
        "name": "runInTransactionAsync",
        "parameterTypes": [
          "java.lang.String",
          "io.nop.api.core.annotations.txn.TransactionPropagation",
          "java.util.function.Function"
        ]
      },
      {
        "name": "runWithoutTransaction",
        "parameterTypes": [
          "java.lang.String",
          "java.util.function.Supplier"
        ]
      },
      {
        "name": "setTransactionManager",
        "parameterTypes": [
          "io.nop.dao.txn.ITransactionManager"
        ]
      }
    ],
    "name": "io.nop.dao.txn.impl.TransactionTemplateImpl"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "invoke",
        "parameterTypes": [
          "io.nop.core.reflect.aop.IMethodInvocation"
        ]
      }
    ],
    "name": "io.nop.dao.txn.interceptor.TransactionalMethodInterceptor"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "invoke",
        "parameterTypes": [
          "java.util.function.Function",
          "java.lang.Object"
        ]
      },
      {
        "name": "invokeAsync",
        "parameterTypes": [
          "java.util.function.Function",
          "java.lang.Object"
        ]
      },
      {
        "name": "setPropagation",
        "parameterTypes": [
          "io.nop.api.core.annotations.txn.TransactionPropagation"
        ]
      },
      {
        "name": "setTransactionTemplate",
        "parameterTypes": [
          "io.nop.dao.txn.ITransactionTemplate"
        ]
      },
      {
        "name": "setTxnGroup",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.dao.utils.TransactionalFunctionInvoker"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.dataset.record.impl.TransformRecordInput"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.dbtool.exp.config.ImportDbConfig"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.dbtool.exp.config.ImportTableConfig"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.dbtool.exp.config.JdbcConnectionConfig"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.dbtool.exp.config.TableFieldConfig"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "copyTo",
        "parameterTypes": [
          "io.nop.dbtool.exp.config.ImportDbConfig"
        ]
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "outputJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      }
    ],
    "name": "io.nop.dbtool.exp.config._gen._ImportDbConfig"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "copyTo",
        "parameterTypes": [
          "io.nop.dbtool.exp.config.ImportTableConfig"
        ]
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "outputJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      }
    ],
    "name": "io.nop.dbtool.exp.config._gen._ImportTableConfig"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "copyTo",
        "parameterTypes": [
          "io.nop.dbtool.exp.config.JdbcConnectionConfig"
        ]
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "outputJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      }
    ],
    "name": "io.nop.dbtool.exp.config._gen._JdbcConnectionConfig"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "copyTo",
        "parameterTypes": [
          "io.nop.dbtool.exp.config.TableFieldConfig"
        ]
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "outputJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      }
    ],
    "name": "io.nop.dbtool.exp.config._gen._TableFieldConfig"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getFieldLabel",
        "parameterTypes": []
      },
      {
        "name": "getFieldModel",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getFieldName",
        "parameterTypes": []
      },
      {
        "name": "getFieldNameMap",
        "parameterTypes": []
      },
      {
        "name": "getPropOrName",
        "parameterTypes": []
      },
      {
        "name": "getResultComponentType",
        "parameterTypes": []
      },
      {
        "name": "getResultType",
        "parameterTypes": []
      },
      {
        "name": "init",
        "parameterTypes": []
      },
      {
        "name": "initStripText",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "toNameMap",
        "parameterTypes": [
          "java.util.List",
          "io.nop.excel.imp.model.ImportFieldModel"
        ]
      }
    ],
    "name": "io.nop.excel.imp.model.ImportFieldModel"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "init",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.excel.imp.model.ImportModel"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getFieldLabel",
        "parameterTypes": []
      },
      {
        "name": "getFieldModel",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getFieldName",
        "parameterTypes": []
      },
      {
        "name": "getFieldNameMap",
        "parameterTypes": []
      },
      {
        "name": "getResultComponentType",
        "parameterTypes": []
      },
      {
        "name": "init",
        "parameterTypes": []
      },
      {
        "name": "initStripText",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "matchNamePattern",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.excel.imp.model.ImportSheetModel"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "addField",
        "parameterTypes": [
          "io.nop.excel.imp.model.ImportFieldModel"
        ]
      },
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "copyTo",
        "parameterTypes": [
          "io.nop.excel.imp.model.ImportFieldModel"
        ]
      },
      {
        "name": "freeze",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getAlias",
        "parameterTypes": []
      },
      {
        "name": "getDisplayMode",
        "parameterTypes": []
      },
      {
        "name": "getDisplayName",
        "parameterTypes": []
      },
      {
        "name": "getExportExpr",
        "parameterTypes": []
      },
      {
        "name": "getField",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getFieldDecider",
        "parameterTypes": []
      },
      {
        "name": "getFields",
        "parameterTypes": []
      },
      {
        "name": "getGroupField",
        "parameterTypes": []
      },
      {
        "name": "getKeyProp",
        "parameterTypes": []
      },
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "getNormalizeFieldsExpr",
        "parameterTypes": []
      },
      {
        "name": "getParentProp",
        "parameterTypes": []
      },
      {
        "name": "getProp",
        "parameterTypes": []
      },
      {
        "name": "getSchema",
        "parameterTypes": []
      },
      {
        "name": "getStripText",
        "parameterTypes": []
      },
      {
        "name": "getTypeProp",
        "parameterTypes": []
      },
      {
        "name": "getUnknownField",
        "parameterTypes": []
      },
      {
        "name": "getValueExpr",
        "parameterTypes": []
      },
      {
        "name": "getWhen",
        "parameterTypes": []
      },
      {
        "name": "hasField",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "hasFields",
        "parameterTypes": []
      },
      {
        "name": "isComputed",
        "parameterTypes": []
      },
      {
        "name": "isIgnoreWhenEmpty",
        "parameterTypes": []
      },
      {
        "name": "isList",
        "parameterTypes": []
      },
      {
        "name": "isMandatory",
        "parameterTypes": []
      },
      {
        "name": "isVirtual",
        "parameterTypes": []
      },
      {
        "name": "keySet_fields",
        "parameterTypes": []
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "outputJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      },
      {
        "name": "setAlias",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setComputed",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setDisplayMode",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDisplayName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setExportExpr",
        "parameterTypes": [
          "io.nop.core.lang.eval.IEvalAction"
        ]
      },
      {
        "name": "setFieldDecider",
        "parameterTypes": [
          "io.nop.core.lang.eval.IEvalAction"
        ]
      },
      {
        "name": "setFields",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setGroupField",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setIgnoreWhenEmpty",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setKeyProp",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setList",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setMandatory",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setNormalizeFieldsExpr",
        "parameterTypes": [
          "io.nop.core.lang.eval.IEvalAction"
        ]
      },
      {
        "name": "setParentProp",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setProp",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setSchema",
        "parameterTypes": [
          "io.nop.xlang.xmeta.ISchema"
        ]
      },
      {
        "name": "setStripText",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setTypeProp",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setUnknownField",
        "parameterTypes": [
          "io.nop.excel.imp.model.ImportFieldModel"
        ]
      },
      {
        "name": "setValueExpr",
        "parameterTypes": [
          "io.nop.core.lang.eval.IEvalAction"
        ]
      },
      {
        "name": "setVirtual",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setWhen",
        "parameterTypes": [
          "io.nop.core.lang.eval.IEvalPredicate"
        ]
      }
    ],
    "name": "io.nop.excel.imp.model._gen._ImportFieldModel"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "addSheet",
        "parameterTypes": [
          "io.nop.excel.imp.model.ImportSheetModel"
        ]
      },
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "copyTo",
        "parameterTypes": [
          "io.nop.excel.imp.model.ImportModel"
        ]
      },
      {
        "name": "freeze",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getAfterParse",
        "parameterTypes": []
      },
      {
        "name": "getBeforeParse",
        "parameterTypes": []
      },
      {
        "name": "getResultType",
        "parameterTypes": []
      },
      {
        "name": "getSheet",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getSheets",
        "parameterTypes": []
      },
      {
        "name": "getTemplatePath",
        "parameterTypes": []
      },
      {
        "name": "getValidator",
        "parameterTypes": []
      },
      {
        "name": "getXdef",
        "parameterTypes": []
      },
      {
        "name": "hasSheet",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "hasSheets",
        "parameterTypes": []
      },
      {
        "name": "isDefaultStripText",
        "parameterTypes": []
      },
      {
        "name": "isDump",
        "parameterTypes": []
      },
      {
        "name": "isIgnoreUnknownSheet",
        "parameterTypes": []
      },
      {
        "name": "keySet_sheets",
        "parameterTypes": []
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "outputJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      },
      {
        "name": "setAfterParse",
        "parameterTypes": [
          "io.nop.core.lang.eval.IEvalAction"
        ]
      },
      {
        "name": "setBeforeParse",
        "parameterTypes": [
          "io.nop.core.lang.eval.IEvalAction"
        ]
      },
      {
        "name": "setDefaultStripText",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setDump",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setIgnoreUnknownSheet",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setResultType",
        "parameterTypes": [
          "io.nop.core.type.IGenericType"
        ]
      },
      {
        "name": "setSheets",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setTemplatePath",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setValidator",
        "parameterTypes": [
          "io.nop.core.lang.eval.IEvalAction"
        ]
      },
      {
        "name": "setValidator",
        "parameterTypes": [
          "io.nop.core.model.validator.ValidatorModel"
        ]
      },
      {
        "name": "setXdef",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.excel.imp.model._gen._ImportModel"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "addField",
        "parameterTypes": [
          "io.nop.excel.imp.model.ImportFieldModel"
        ]
      },
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "copyTo",
        "parameterTypes": [
          "io.nop.excel.imp.model.ImportSheetModel"
        ]
      },
      {
        "name": "freeze",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getAfterParse",
        "parameterTypes": []
      },
      {
        "name": "getBeforeParse",
        "parameterTypes": []
      },
      {
        "name": "getDescription",
        "parameterTypes": []
      },
      {
        "name": "getDisplayMode",
        "parameterTypes": []
      },
      {
        "name": "getField",
        "parameterTypes": []
      },
      {
        "name": "getField",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getFieldDecider",
        "parameterTypes": []
      },
      {
        "name": "getFields",
        "parameterTypes": []
      },
      {
        "name": "getKeyProp",
        "parameterTypes": []
      },
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "getNamePattern",
        "parameterTypes": []
      },
      {
        "name": "getNormalizeFieldsExpr",
        "parameterTypes": []
      },
      {
        "name": "getResultType",
        "parameterTypes": []
      },
      {
        "name": "getSheetNameProp",
        "parameterTypes": []
      },
      {
        "name": "getSheetVarName",
        "parameterTypes": []
      },
      {
        "name": "getUnknownField",
        "parameterTypes": []
      },
      {
        "name": "getWhen",
        "parameterTypes": []
      },
      {
        "name": "hasField",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "hasFields",
        "parameterTypes": []
      },
      {
        "name": "isIgnore",
        "parameterTypes": []
      },
      {
        "name": "isList",
        "parameterTypes": []
      },
      {
        "name": "isMandatory",
        "parameterTypes": []
      },
      {
        "name": "isMultiple",
        "parameterTypes": []
      },
      {
        "name": "isMultipleAsMap",
        "parameterTypes": []
      },
      {
        "name": "keySet_fields",
        "parameterTypes": []
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "outputJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      },
      {
        "name": "setAfterParse",
        "parameterTypes": [
          "io.nop.core.lang.eval.IEvalAction"
        ]
      },
      {
        "name": "setBeforeParse",
        "parameterTypes": [
          "io.nop.core.lang.eval.IEvalAction"
        ]
      },
      {
        "name": "setDescription",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDisplayMode",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setField",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setFieldDecider",
        "parameterTypes": [
          "io.nop.core.lang.eval.IEvalAction"
        ]
      },
      {
        "name": "setFields",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setIgnore",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setKeyProp",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setList",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setMandatory",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setMultiple",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setMultipleAsMap",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setNamePattern",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setNormalizeFieldsExpr",
        "parameterTypes": [
          "io.nop.core.lang.eval.IEvalAction"
        ]
      },
      {
        "name": "setResultType",
        "parameterTypes": [
          "io.nop.core.type.IGenericType"
        ]
      },
      {
        "name": "setSheetNameProp",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setSheetVarName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setUnknownField",
        "parameterTypes": [
          "io.nop.excel.imp.model.ImportFieldModel"
        ]
      },
      {
        "name": "setWhen",
        "parameterTypes": [
          "io.nop.core.lang.eval.IEvalPredicate"
        ]
      }
    ],
    "name": "io.nop.excel.imp.model._gen._ImportSheetModel"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.excel.initializer.ExcelCoreInitializer"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.excel.model.ExcelBorderStyle"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.excel.model.ExcelCell"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.excel.model.ExcelColumnConfig"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.excel.model.ExcelFont"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.excel.model.ExcelPageMargins"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.excel.model.ExcelRow"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.excel.model.ExcelSheet"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.excel.model.ExcelStyle"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.excel.model.ExcelTable"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.excel.model.ExcelWorkbook"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "addColChildCell",
        "parameterTypes": [
          "io.nop.excel.model.ExcelCell"
        ]
      },
      {
        "name": "addColDuplicateCell",
        "parameterTypes": [
          "io.nop.excel.model.ExcelCell"
        ]
      },
      {
        "name": "addColDuplicateCells",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "addColExtendCell",
        "parameterTypes": [
          "io.nop.excel.model.ExcelCell"
        ]
      },
      {
        "name": "addRowChildCell",
        "parameterTypes": [
          "io.nop.excel.model.ExcelCell"
        ]
      },
      {
        "name": "addRowDuplicateCell",
        "parameterTypes": [
          "io.nop.excel.model.ExcelCell"
        ]
      },
      {
        "name": "addRowDuplicateCells",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "addRowExtendCell",
        "parameterTypes": [
          "io.nop.excel.model.ExcelCell"
        ]
      },
      {
        "name": "getCellPosition",
        "parameterTypes": []
      },
      {
        "name": "getColChildCells",
        "parameterTypes": []
      },
      {
        "name": "getColDuplicateCells",
        "parameterTypes": []
      },
      {
        "name": "getColExpandLevel",
        "parameterTypes": []
      },
      {
        "name": "getColExpandOffset",
        "parameterTypes": []
      },
      {
        "name": "getColExpandSpan",
        "parameterTypes": []
      },
      {
        "name": "getColExtendCells",
        "parameterTypes": []
      },
      {
        "name": "getColIndex",
        "parameterTypes": []
      },
      {
        "name": "getColParent",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getColParentCell",
        "parameterTypes": []
      },
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "getRowChildCells",
        "parameterTypes": []
      },
      {
        "name": "getRowDuplicateCells",
        "parameterTypes": []
      },
      {
        "name": "getRowExpandLevel",
        "parameterTypes": []
      },
      {
        "name": "getRowExpandOffset",
        "parameterTypes": []
      },
      {
        "name": "getRowExpandSpan",
        "parameterTypes": []
      },
      {
        "name": "getRowExtendCells",
        "parameterTypes": []
      },
      {
        "name": "getRowIndex",
        "parameterTypes": []
      },
      {
        "name": "getRowParent",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getRowParentCell",
        "parameterTypes": []
      },
      {
        "name": "isColDuplicate",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "isRowDuplicate",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "isTopColCell",
        "parameterTypes": []
      },
      {
        "name": "isTopRowCell",
        "parameterTypes": []
      },
      {
        "name": "setCellPosition",
        "parameterTypes": [
          "io.nop.core.model.table.CellPosition"
        ]
      },
      {
        "name": "setColExpandLevel",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setColExpandOffset",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setColExpandSpan",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setColParentCell",
        "parameterTypes": [
          "io.nop.excel.model.ExcelCell"
        ]
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setRowExpandLevel",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setRowExpandOffset",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setRowExpandSpan",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setRowParentCell",
        "parameterTypes": [
          "io.nop.excel.model.ExcelCell"
        ]
      },
      {
        "name": "shouldRemoveEmpty",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.excel.model.XptCellModel"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.excel.model.XptRowModel"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.excel.model.XptSheetModel"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.excel.model.XptWorkbookModel"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "copyTo",
        "parameterTypes": [
          "io.nop.excel.model.ExcelBorderStyle"
        ]
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "outputJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      }
    ],
    "name": "io.nop.excel.model._gen._ExcelBorderStyle"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "copyTo",
        "parameterTypes": [
          "io.nop.excel.model.ExcelCell"
        ]
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "outputJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      }
    ],
    "name": "io.nop.excel.model._gen._ExcelCell"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "copyTo",
        "parameterTypes": [
          "io.nop.excel.model.ExcelColumnConfig"
        ]
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "outputJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      }
    ],
    "name": "io.nop.excel.model._gen._ExcelColumnConfig"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "copyTo",
        "parameterTypes": [
          "io.nop.excel.model.ExcelFont"
        ]
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "outputJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      }
    ],
    "name": "io.nop.excel.model._gen._ExcelFont"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "copyTo",
        "parameterTypes": [
          "io.nop.excel.model.ExcelPageMargins"
        ]
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "outputJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      }
    ],
    "name": "io.nop.excel.model._gen._ExcelPageMargins"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "copyTo",
        "parameterTypes": [
          "io.nop.excel.model.ExcelRow"
        ]
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "outputJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      }
    ],
    "name": "io.nop.excel.model._gen._ExcelRow"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "copyTo",
        "parameterTypes": [
          "io.nop.excel.model.ExcelSheet"
        ]
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "outputJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      }
    ],
    "name": "io.nop.excel.model._gen._ExcelSheet"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "copyTo",
        "parameterTypes": [
          "io.nop.excel.model.ExcelStyle"
        ]
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "outputJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      }
    ],
    "name": "io.nop.excel.model._gen._ExcelStyle"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "copyTo",
        "parameterTypes": [
          "io.nop.excel.model.ExcelTable"
        ]
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "outputJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      }
    ],
    "name": "io.nop.excel.model._gen._ExcelTable"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "copyTo",
        "parameterTypes": [
          "io.nop.excel.model.ExcelWorkbook"
        ]
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "outputJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      }
    ],
    "name": "io.nop.excel.model._gen._ExcelWorkbook"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "copyTo",
        "parameterTypes": [
          "io.nop.excel.model.XptCellModel"
        ]
      },
      {
        "name": "freeze",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getColExtendForSibling",
        "parameterTypes": []
      },
      {
        "name": "getColParent",
        "parameterTypes": []
      },
      {
        "name": "getColTestExpr",
        "parameterTypes": []
      },
      {
        "name": "getDomain",
        "parameterTypes": []
      },
      {
        "name": "getDs",
        "parameterTypes": []
      },
      {
        "name": "getEditorId",
        "parameterTypes": []
      },
      {
        "name": "getExpandExpr",
        "parameterTypes": []
      },
      {
        "name": "getExpandInplaceCount",
        "parameterTypes": []
      },
      {
        "name": "getExpandMaxCount",
        "parameterTypes": []
      },
      {
        "name": "getExpandMinCount",
        "parameterTypes": []
      },
      {
        "name": "getExpandOrderBy",
        "parameterTypes": []
      },
      {
        "name": "getExpandType",
        "parameterTypes": []
      },
      {
        "name": "getExportFormattedValue",
        "parameterTypes": []
      },
      {
        "name": "getExportFormula",
        "parameterTypes": []
      },
      {
        "name": "getField",
        "parameterTypes": []
      },
      {
        "name": "getFormatExpr",
        "parameterTypes": []
      },
      {
        "name": "getKeepExpandEmpty",
        "parameterTypes": []
      },
      {
        "name": "getLinkExpr",
        "parameterTypes": []
      },
      {
        "name": "getProcessExpr",
        "parameterTypes": []
      },
      {
        "name": "getRowExtendForSibling",
        "parameterTypes": []
      },
      {
        "name": "getRowParent",
        "parameterTypes": []
      },
      {
        "name": "getRowTestExpr",
        "parameterTypes": []
      },
      {
        "name": "getStyleIdExpr",
        "parameterTypes": []
      },
      {
        "name": "getValueExpr",
        "parameterTypes": []
      },
      {
        "name": "getViewerId",
        "parameterTypes": []
      },
      {
        "name": "isColExtendForSibling",
        "parameterTypes": []
      },
      {
        "name": "isExportFormattedValue",
        "parameterTypes": []
      },
      {
        "name": "isExportFormula",
        "parameterTypes": []
      },
      {
        "name": "isKeepExpandEmpty",
        "parameterTypes": []
      },
      {
        "name": "isRowExtendForSibling",
        "parameterTypes": []
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "outputJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      },
      {
        "name": "setColExtendForSibling",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setColExtendForSibling",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setColParent",
        "parameterTypes": [
          "io.nop.core.model.table.CellPosition"
        ]
      },
      {
        "name": "setColTestExpr",
        "parameterTypes": [
          "io.nop.core.lang.eval.IEvalPredicate"
        ]
      },
      {
        "name": "setDomain",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDs",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setEditorId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setExpandExpr",
        "parameterTypes": [
          "io.nop.core.lang.eval.IEvalAction"
        ]
      },
      {
        "name": "setExpandInplaceCount",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setExpandMaxCount",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setExpandMinCount",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setExpandOrderBy",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setExpandType",
        "parameterTypes": [
          "io.nop.excel.model.constants.XptExpandType"
        ]
      },
      {
        "name": "setExportFormattedValue",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setExportFormattedValue",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setExportFormula",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setExportFormula",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setField",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setFormatExpr",
        "parameterTypes": [
          "io.nop.core.lang.eval.IEvalAction"
        ]
      },
      {
        "name": "setKeepExpandEmpty",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setKeepExpandEmpty",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setLinkExpr",
        "parameterTypes": [
          "io.nop.core.lang.eval.IEvalAction"
        ]
      },
      {
        "name": "setProcessExpr",
        "parameterTypes": [
          "io.nop.core.lang.eval.IEvalAction"
        ]
      },
      {
        "name": "setRowExtendForSibling",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setRowExtendForSibling",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setRowParent",
        "parameterTypes": [
          "io.nop.core.model.table.CellPosition"
        ]
      },
      {
        "name": "setRowTestExpr",
        "parameterTypes": [
          "io.nop.core.lang.eval.IEvalPredicate"
        ]
      },
      {
        "name": "setStyleIdExpr",
        "parameterTypes": [
          "io.nop.core.lang.eval.IEvalAction"
        ]
      },
      {
        "name": "setValueExpr",
        "parameterTypes": [
          "io.nop.core.lang.eval.IEvalAction"
        ]
      },
      {
        "name": "setViewerId",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.excel.model._gen._XptCellModel"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "copyTo",
        "parameterTypes": [
          "io.nop.excel.model.XptRowModel"
        ]
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "outputJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      }
    ],
    "name": "io.nop.excel.model._gen._XptRowModel"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "copyTo",
        "parameterTypes": [
          "io.nop.excel.model.XptSheetModel"
        ]
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "outputJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      }
    ],
    "name": "io.nop.excel.model._gen._XptSheetModel"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "copyTo",
        "parameterTypes": [
          "io.nop.excel.model.XptWorkbookModel"
        ]
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "outputJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      }
    ],
    "name": "io.nop.excel.model._gen._XptWorkbookModel"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [
      {
        "name": "c"
      },
      {
        "name": "r"
      }
    ],
    "methods": [
      {
        "name": "valueOf",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "values",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.excel.model.constants.XptExpandType"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.graphql.core.initialize.GraphQLCoreInitializer"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowWrite": true,
        "name": "ignoreSslCerts"
      }
    ],
    "methods": [],
    "name": "io.nop.http.api.client.HttpClientConfig"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.http.api.server.DefaultClientIpFetcher"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.http.api.support.DefaultHttpClientFactory"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "isSecretHeader",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "newSSLContext",
        "parameterTypes": []
      },
      {
        "name": "normalizeBody",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object"
        ]
      },
      {
        "name": "toJdkHttpRequest",
        "parameterTypes": [
          "io.nop.http.api.client.HttpRequest"
        ]
      }
    ],
    "name": "io.nop.http.client.jdk.JdkHttpClient"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.ioc.initialize.IocCoreInitializer"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.ioc.model.BeanAliasModel"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getBeanValueType",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.ioc.model.BeanCollectBeansValue"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "addMissingBean",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "isDisabled",
        "parameterTypes": []
      },
      {
        "name": "setDisabled",
        "parameterTypes": [
          "boolean"
        ]
      }
    ],
    "name": "io.nop.ioc.model.BeanConditionModel"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.ioc.model.BeanConfigModel"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.ioc.model.BeanConstantModel"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.ioc.model.BeanConstructorArgModel"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.ioc.model.BeanIfPropertyCondition"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.ioc.model.BeanImportModel"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "addName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "containsTag",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getBeanValueType",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.ioc.model.BeanModel"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getAnnotationClasses",
        "parameterTypes": []
      },
      {
        "name": "setAnnotationClasses",
        "parameterTypes": [
          "java.util.List"
        ]
      }
    ],
    "name": "io.nop.ioc.model.BeanPointcutModel"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.ioc.model.BeanPropValue"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.ioc.model.BeanPropertyModel"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.ioc.model.BeanRefValue"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "addDepend",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "forEachChild",
        "parameterTypes": [
          "java.util.function.Consumer"
        ]
      },
      {
        "name": "getBeanValueType",
        "parameterTypes": []
      },
      {
        "name": "getConstructorArgCount",
        "parameterTypes": []
      },
      {
        "name": "getEmbeddedId",
        "parameterTypes": []
      },
      {
        "name": "getId",
        "parameterTypes": []
      },
      {
        "name": "setEmbeddedId",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.ioc.model.BeanValue"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "init",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.ioc.model.BeansModel"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "copyTo",
        "parameterTypes": [
          "io.nop.ioc.model.BeanAliasModel"
        ]
      },
      {
        "name": "freeze",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getAlias",
        "parameterTypes": []
      },
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "outputJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      },
      {
        "name": "setAlias",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.ioc.model._gen._BeanAliasModel"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "copyTo",
        "parameterTypes": [
          "io.nop.ioc.model.BeanCollectBeansValue"
        ]
      },
      {
        "name": "freeze",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getBeanValueType",
        "parameterTypes": []
      },
      {
        "name": "getByAnnotation",
        "parameterTypes": []
      },
      {
        "name": "getByType",
        "parameterTypes": []
      },
      {
        "name": "getExcludeTag",
        "parameterTypes": []
      },
      {
        "name": "getIncludeTag",
        "parameterTypes": []
      },
      {
        "name": "getNamePrefix",
        "parameterTypes": []
      },
      {
        "name": "isAsMap",
        "parameterTypes": []
      },
      {
        "name": "isIocIgnoreDepends",
        "parameterTypes": []
      },
      {
        "name": "isIocOptional",
        "parameterTypes": []
      },
      {
        "name": "isOnlyConcreteClasses",
        "parameterTypes": []
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "outputJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      },
      {
        "name": "setAsMap",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setBeanValueType",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setByAnnotation",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setByType",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setExcludeTag",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setIncludeTag",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setIocIgnoreDepends",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setIocOptional",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setNamePrefix",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setOnlyConcreteClasses",
        "parameterTypes": [
          "boolean"
        ]
      }
    ],
    "name": "io.nop.ioc.model._gen._BeanCollectBeansValue"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "copyTo",
        "parameterTypes": [
          "io.nop.ioc.model.BeanConditionModel"
        ]
      },
      {
        "name": "freeze",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getIfProperty",
        "parameterTypes": []
      },
      {
        "name": "getMissingBean",
        "parameterTypes": []
      },
      {
        "name": "getMissingClass",
        "parameterTypes": []
      },
      {
        "name": "getMissingResource",
        "parameterTypes": []
      },
      {
        "name": "getOnBean",
        "parameterTypes": []
      },
      {
        "name": "getOnClass",
        "parameterTypes": []
      },
      {
        "name": "getOnExpr",
        "parameterTypes": []
      },
      {
        "name": "getOnResource",
        "parameterTypes": []
      },
      {
        "name": "getUnlessProperty",
        "parameterTypes": []
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "outputJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      },
      {
        "name": "setIfProperty",
        "parameterTypes": [
          "io.nop.ioc.model.BeanIfPropertyCondition"
        ]
      },
      {
        "name": "setMissingBean",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setMissingClass",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setMissingResource",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setOnBean",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setOnClass",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setOnExpr",
        "parameterTypes": [
          "io.nop.core.lang.eval.IEvalPredicate"
        ]
      },
      {
        "name": "setOnResource",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setUnlessProperty",
        "parameterTypes": [
          "io.nop.ioc.model.BeanUnlessPropertyCondition"
        ]
      }
    ],
    "name": "io.nop.ioc.model._gen._BeanConditionModel"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "copyTo",
        "parameterTypes": [
          "io.nop.ioc.model.BeanConfigModel"
        ]
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "outputJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      }
    ],
    "name": "io.nop.ioc.model._gen._BeanConfigModel"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "copyTo",
        "parameterTypes": [
          "io.nop.ioc.model.BeanConstantModel"
        ]
      },
      {
        "name": "freeze",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getId",
        "parameterTypes": []
      },
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "getScope",
        "parameterTypes": []
      },
      {
        "name": "getStaticField",
        "parameterTypes": []
      },
      {
        "name": "isIocAllowOverride",
        "parameterTypes": []
      },
      {
        "name": "isIocDefault",
        "parameterTypes": []
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "outputJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      },
      {
        "name": "setId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setIocAllowOverride",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setIocDefault",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setScope",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setStaticField",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.ioc.model._gen._BeanConstantModel"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "copyTo",
        "parameterTypes": [
          "io.nop.ioc.model.BeanConstructorArgModel"
        ]
      },
      {
        "name": "freeze",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getIndex",
        "parameterTypes": []
      },
      {
        "name": "getRef",
        "parameterTypes": []
      },
      {
        "name": "getValue",
        "parameterTypes": []
      },
      {
        "name": "isIocSkipIfEmpty",
        "parameterTypes": []
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "outputJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      },
      {
        "name": "setIndex",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setIocSkipIfEmpty",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setRef",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setValue",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.ioc.model._gen._BeanConstructorArgModel"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "copyTo",
        "parameterTypes": [
          "io.nop.ioc.model.BeanIfPropertyCondition"
        ]
      },
      {
        "name": "freeze",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "getValue",
        "parameterTypes": []
      },
      {
        "name": "isEnableIfDebug",
        "parameterTypes": []
      },
      {
        "name": "isEnableIfMissing",
        "parameterTypes": []
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "outputJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      },
      {
        "name": "setEnableIfDebug",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setEnableIfMissing",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setValue",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.ioc.model._gen._BeanIfPropertyCondition"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "copyTo",
        "parameterTypes": [
          "io.nop.ioc.model.BeanImportModel"
        ]
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "outputJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      }
    ],
    "name": "io.nop.ioc.model._gen._BeanImportModel"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "copyTo",
        "parameterTypes": [
          "io.nop.ioc.model.BeanModel"
        ]
      },
      {
        "name": "freeze",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getId",
        "parameterTypes": []
      },
      {
        "name": "getIocPointcut",
        "parameterTypes": []
      },
      {
        "name": "getIocPriority",
        "parameterTypes": []
      },
      {
        "name": "getIocTags",
        "parameterTypes": []
      },
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "isAbstract",
        "parameterTypes": []
      },
      {
        "name": "isIocAllowOverride",
        "parameterTypes": []
      },
      {
        "name": "isIocDefault",
        "parameterTypes": []
      },
      {
        "name": "isPrimary",
        "parameterTypes": []
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "outputJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      },
      {
        "name": "setAbstract",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setIocAllowOverride",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setIocDefault",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setIocPointcut",
        "parameterTypes": [
          "io.nop.ioc.model.BeanPointcutModel"
        ]
      },
      {
        "name": "setIocPriority",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setIocTags",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setPrimary",
        "parameterTypes": [
          "boolean"
        ]
      }
    ],
    "name": "io.nop.ioc.model._gen._BeanModel"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "copyTo",
        "parameterTypes": [
          "io.nop.ioc.model.BeanPointcutModel"
        ]
      },
      {
        "name": "freeze",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getAnnotations",
        "parameterTypes": []
      },
      {
        "name": "getOrder",
        "parameterTypes": []
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "outputJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      },
      {
        "name": "setAnnotations",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setOrder",
        "parameterTypes": [
          "int"
        ]
      }
    ],
    "name": "io.nop.ioc.model._gen._BeanPointcutModel"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "copyTo",
        "parameterTypes": [
          "io.nop.ioc.model.BeanPropValue"
        ]
      },
      {
        "name": "freeze",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getBody",
        "parameterTypes": []
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "outputJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      },
      {
        "name": "setBody",
        "parameterTypes": [
          "io.nop.ioc.model.IBeanPropValue"
        ]
      }
    ],
    "name": "io.nop.ioc.model._gen._BeanPropValue"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "copyTo",
        "parameterTypes": [
          "io.nop.ioc.model.BeanPropertyModel"
        ]
      },
      {
        "name": "freeze",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "getRef",
        "parameterTypes": []
      },
      {
        "name": "getValue",
        "parameterTypes": []
      },
      {
        "name": "isIocIgnoreDepends",
        "parameterTypes": []
      },
      {
        "name": "isIocSkipIfEmpty",
        "parameterTypes": []
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "outputJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      },
      {
        "name": "setIocIgnoreDepends",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setIocSkipIfEmpty",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setRef",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setValue",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.ioc.model._gen._BeanPropertyModel"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "copyTo",
        "parameterTypes": [
          "io.nop.ioc.model.BeanRefValue"
        ]
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "outputJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      }
    ],
    "name": "io.nop.ioc.model._gen._BeanRefValue"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "addConstructorArg",
        "parameterTypes": [
          "io.nop.ioc.model.BeanConstructorArgModel"
        ]
      },
      {
        "name": "addIocInterceptor",
        "parameterTypes": [
          "io.nop.ioc.model.BeanInterceptorModel"
        ]
      },
      {
        "name": "addProperty",
        "parameterTypes": [
          "io.nop.ioc.model.BeanPropertyModel"
        ]
      },
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "copyTo",
        "parameterTypes": [
          "io.nop.ioc.model.BeanValue"
        ]
      },
      {
        "name": "freeze",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getAutowire",
        "parameterTypes": []
      },
      {
        "name": "getClassName",
        "parameterTypes": []
      },
      {
        "name": "getConstructorArg",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getConstructorArgs",
        "parameterTypes": []
      },
      {
        "name": "getDependsOn",
        "parameterTypes": []
      },
      {
        "name": "getDestroyMethod",
        "parameterTypes": []
      },
      {
        "name": "getFactoryBean",
        "parameterTypes": []
      },
      {
        "name": "getFactoryMethod",
        "parameterTypes": []
      },
      {
        "name": "getInitMethod",
        "parameterTypes": []
      },
      {
        "name": "getIocAfter",
        "parameterTypes": []
      },
      {
        "name": "getIocBeanMethod",
        "parameterTypes": []
      },
      {
        "name": "getIocBefore",
        "parameterTypes": []
      },
      {
        "name": "getIocBuild",
        "parameterTypes": []
      },
      {
        "name": "getIocCondition",
        "parameterTypes": []
      },
      {
        "name": "getIocConfigPrefix",
        "parameterTypes": []
      },
      {
        "name": "getIocDelayMethod",
        "parameterTypes": []
      },
      {
        "name": "getIocDelayStart",
        "parameterTypes": []
      },
      {
        "name": "getIocDestroy",
        "parameterTypes": []
      },
      {
        "name": "getIocInit",
        "parameterTypes": []
      },
      {
        "name": "getIocInitOrder",
        "parameterTypes": []
      },
      {
        "name": "getIocInterceptor",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getIocInterceptors",
        "parameterTypes": []
      },
      {
        "name": "getIocOnConfigRefresh",
        "parameterTypes": []
      },
      {
        "name": "getIocRefreshConfig",
        "parameterTypes": []
      },
      {
        "name": "getIocRefreshConfigMethod",
        "parameterTypes": []
      },
      {
        "name": "getIocRestart",
        "parameterTypes": []
      },
      {
        "name": "getIocRestartMethod",
        "parameterTypes": []
      },
      {
        "name": "getIocSecurityDomain",
        "parameterTypes": []
      },
      {
        "name": "getIocType",
        "parameterTypes": []
      },
      {
        "name": "getLazyInit",
        "parameterTypes": []
      },
      {
        "name": "getParent",
        "parameterTypes": []
      },
      {
        "name": "getProperties",
        "parameterTypes": []
      },
      {
        "name": "getProperty",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getScope",
        "parameterTypes": []
      },
      {
        "name": "hasConstructorArg",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "hasConstructorArgs",
        "parameterTypes": []
      },
      {
        "name": "hasIocInterceptor",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "hasIocInterceptors",
        "parameterTypes": []
      },
      {
        "name": "hasProperties",
        "parameterTypes": []
      },
      {
        "name": "hasProperty",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "isAutowireCandidate",
        "parameterTypes": []
      },
      {
        "name": "isIocAop",
        "parameterTypes": []
      },
      {
        "name": "isIocAutoRefresh",
        "parameterTypes": []
      },
      {
        "name": "isIocForceInit",
        "parameterTypes": []
      },
      {
        "name": "isIocProxy",
        "parameterTypes": []
      },
      {
        "name": "keySet_constructorArgs",
        "parameterTypes": []
      },
      {
        "name": "keySet_iocInterceptors",
        "parameterTypes": []
      },
      {
        "name": "keySet_properties",
        "parameterTypes": []
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "outputJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      },
      {
        "name": "setAutowire",
        "parameterTypes": [
          "io.nop.ioc.model.AutowireType"
        ]
      },
      {
        "name": "setAutowireCandidate",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setClassName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setConstructorArgs",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setDependsOn",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setDestroyMethod",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setFactoryBean",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setFactoryMethod",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setInitMethod",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setIocAfter",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setIocAop",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setIocAutoRefresh",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setIocBeanMethod",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setIocBefore",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setIocBuild",
        "parameterTypes": [
          "io.nop.ioc.model.BeanBuildModel"
        ]
      },
      {
        "name": "setIocCondition",
        "parameterTypes": [
          "io.nop.ioc.model.BeanConditionModel"
        ]
      },
      {
        "name": "setIocConfigPrefix",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setIocDelayMethod",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setIocDelayStart",
        "parameterTypes": [
          "io.nop.xlang.api.EvalCode"
        ]
      },
      {
        "name": "setIocDestroy",
        "parameterTypes": [
          "io.nop.xlang.api.EvalCode"
        ]
      },
      {
        "name": "setIocForceInit",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setIocInit",
        "parameterTypes": [
          "io.nop.xlang.api.EvalCode"
        ]
      },
      {
        "name": "setIocInitOrder",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setIocInterceptors",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setIocOnConfigRefresh",
        "parameterTypes": [
          "io.nop.ioc.model.BeanOnConfigRefresh"
        ]
      },
      {
        "name": "setIocProxy",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setIocRefreshConfig",
        "parameterTypes": [
          "io.nop.xlang.api.EvalCode"
        ]
      },
      {
        "name": "setIocRefreshConfigMethod",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setIocRestart",
        "parameterTypes": [
          "io.nop.xlang.api.EvalCode"
        ]
      },
      {
        "name": "setIocRestartMethod",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setIocSecurityDomain",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setIocType",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setLazyInit",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setParent",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setProperties",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setScope",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.ioc.model._gen._BeanValue"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "addAlias",
        "parameterTypes": [
          "io.nop.ioc.model.BeanAliasModel"
        ]
      },
      {
        "name": "addBean",
        "parameterTypes": [
          "io.nop.ioc.model.BeanModel"
        ]
      },
      {
        "name": "addEntry",
        "parameterTypes": [
          "io.nop.ioc.model.BeanMapModel"
        ]
      },
      {
        "name": "addImport",
        "parameterTypes": [
          "io.nop.ioc.model.BeanImportModel"
        ]
      },
      {
        "name": "addIocConfig",
        "parameterTypes": [
          "io.nop.ioc.model.BeanConfigModel"
        ]
      },
      {
        "name": "addIocListener",
        "parameterTypes": [
          "io.nop.ioc.model.BeanListenerModel"
        ]
      },
      {
        "name": "addUtilConstant",
        "parameterTypes": [
          "io.nop.ioc.model.BeanConstantModel"
        ]
      },
      {
        "name": "addUtilList",
        "parameterTypes": [
          "io.nop.ioc.model.BeanListModel"
        ]
      },
      {
        "name": "addUtilSet",
        "parameterTypes": [
          "io.nop.ioc.model.BeanSetModel"
        ]
      },
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "copyTo",
        "parameterTypes": [
          "io.nop.ioc.model.BeansModel"
        ]
      },
      {
        "name": "freeze",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getAlias",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getAliases",
        "parameterTypes": []
      },
      {
        "name": "getBean",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getBeans",
        "parameterTypes": []
      },
      {
        "name": "getEntry",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getImport",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getImports",
        "parameterTypes": []
      },
      {
        "name": "getIocConfig",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getIocConfigs",
        "parameterTypes": []
      },
      {
        "name": "getIocListener",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getIocListeners",
        "parameterTypes": []
      },
      {
        "name": "getIocSecurityDomain",
        "parameterTypes": []
      },
      {
        "name": "getUtilConstant",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getUtilConstants",
        "parameterTypes": []
      },
      {
        "name": "getUtilList",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getUtilLists",
        "parameterTypes": []
      },
      {
        "name": "getUtilMaps",
        "parameterTypes": []
      },
      {
        "name": "getUtilSet",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getUtilSets",
        "parameterTypes": []
      },
      {
        "name": "hasAlias",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "hasAliases",
        "parameterTypes": []
      },
      {
        "name": "hasBean",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "hasBeans",
        "parameterTypes": []
      },
      {
        "name": "hasEntry",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "hasImport",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "hasImports",
        "parameterTypes": []
      },
      {
        "name": "hasIocConfig",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "hasIocConfigs",
        "parameterTypes": []
      },
      {
        "name": "hasIocListener",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "hasIocListeners",
        "parameterTypes": []
      },
      {
        "name": "hasUtilConstant",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "hasUtilConstants",
        "parameterTypes": []
      },
      {
        "name": "hasUtilList",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "hasUtilLists",
        "parameterTypes": []
      },
      {
        "name": "hasUtilMaps",
        "parameterTypes": []
      },
      {
        "name": "hasUtilSet",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "hasUtilSets",
        "parameterTypes": []
      },
      {
        "name": "isDefaultLazyInit",
        "parameterTypes": []
      },
      {
        "name": "keySet_aliases",
        "parameterTypes": []
      },
      {
        "name": "keySet_beans",
        "parameterTypes": []
      },
      {
        "name": "keySet_imports",
        "parameterTypes": []
      },
      {
        "name": "keySet_iocConfigs",
        "parameterTypes": []
      },
      {
        "name": "keySet_iocListeners",
        "parameterTypes": []
      },
      {
        "name": "keySet_utilConstants",
        "parameterTypes": []
      },
      {
        "name": "keySet_utilLists",
        "parameterTypes": []
      },
      {
        "name": "keySet_utilMaps",
        "parameterTypes": []
      },
      {
        "name": "keySet_utilSets",
        "parameterTypes": []
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "outputJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      },
      {
        "name": "setAliases",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setBeans",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setDefaultLazyInit",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setImports",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setIocConfigs",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setIocListeners",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setIocSecurityDomain",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setUtilConstants",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setUtilLists",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setUtilMaps",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setUtilSets",
        "parameterTypes": [
          "java.util.List"
        ]
      }
    ],
    "name": "io.nop.ioc.model._gen._BeansModel"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getValue",
        "parameterTypes": []
      },
      {
        "name": "setValue",
        "parameterTypes": [
          "java.lang.Object"
        ]
      }
    ],
    "name": "io.nop.ioc.support.UtilFactoryBean"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.log.java.JavaLoggerConfiguratorInitializer"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "doParseResource",
        "parameterTypes": [
          "io.nop.core.resource.IResource"
        ]
      },
      {
        "name": "normalizeSectionContent",
        "parameterTypes": [
          "io.nop.markdown.simple.MarkdownSection"
        ]
      },
      {
        "name": "normalizeTitle",
        "parameterTypes": [
          "io.nop.markdown.simple.MarkdownSection"
        ]
      }
    ],
    "name": "io.nop.markdown.simple.MarkdownDocumentParser"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.ooxml.common.output.AbstractOfficeTemplate"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getImportModel",
        "parameterTypes": []
      },
      {
        "name": "isReturnDynamicObject",
        "parameterTypes": []
      },
      {
        "name": "loadObjectFromPath",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "parseFromResource",
        "parameterTypes": [
          "io.nop.core.resource.IResource"
        ]
      },
      {
        "name": "setReturnDynamicObject",
        "parameterTypes": [
          "boolean"
        ]
      }
    ],
    "name": "io.nop.ooxml.xlsx.imp.XlsxBeanParser"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getImportModel",
        "parameterTypes": []
      },
      {
        "name": "isReturnDynamicObject",
        "parameterTypes": []
      },
      {
        "name": "loadObjectFromPath",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "parseFromResource",
        "parameterTypes": [
          "io.nop.core.resource.IResource"
        ]
      },
      {
        "name": "setImportModel",
        "parameterTypes": [
          "io.nop.excel.imp.model.ImportModel"
        ]
      },
      {
        "name": "setReturnDynamicObject",
        "parameterTypes": [
          "boolean"
        ]
      }
    ],
    "name": "io.nop.ooxml.xlsx.imp.XlsxObjectLoader"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.ooxml.xlsx.output.ExcelTemplate"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.orm.IOrmComponent"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.orm.IOrmEntity"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.orm.IOrmEntityLifecycle"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.orm.IOrmKeyValueTable"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.orm.IOrmObject"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getBean",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getBeanProvider",
        "parameterTypes": []
      },
      {
        "name": "getColPropId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "internalGetPropValue",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "internalSetPropValue",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object"
        ]
      },
      {
        "name": "markDirty",
        "parameterTypes": []
      },
      {
        "name": "orm_propDirty",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "tryGetBean",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.orm.component.AbstractOrmComponent"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.orm.component.JsonOrmComponent"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "dao",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "daoFor",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "executeSql",
        "parameterTypes": [
          "java.lang.String",
          "io.nop.api.core.beans.LongRangeBean",
          "io.nop.core.context.IEvalContext"
        ]
      },
      {
        "name": "executeSql",
        "parameterTypes": [
          "java.lang.String",
          "io.nop.core.context.IEvalContext"
        ]
      },
      {
        "name": "jdbc",
        "parameterTypes": []
      },
      {
        "name": "orm",
        "parameterTypes": []
      },
      {
        "name": "runInNewSession",
        "parameterTypes": [
          "java.util.function.Function"
        ]
      },
      {
        "name": "runInTransaction",
        "parameterTypes": [
          "java.util.function.Supplier"
        ]
      },
      {
        "name": "runLocal",
        "parameterTypes": [
          "java.util.function.Function"
        ]
      },
      {
        "name": "txn",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.orm.dao.AbstractDaoHandler"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "clearCache",
        "parameterTypes": []
      },
      {
        "name": "dao",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "daoForTable",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getEntityNames",
        "parameterTypes": []
      },
      {
        "name": "hasDao",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "normalizeEntityName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "register",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.orm.dao.OrmDaoProvider"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "orm",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.orm.dao.OrmEntityDao"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "addColumn",
        "parameterTypes": [
          "io.nop.orm.model.IColumnModel"
        ]
      },
      {
        "name": "addTenantIdForTable",
        "parameterTypes": [
          "io.nop.orm.model.IEntityModel",
          "boolean"
        ]
      },
      {
        "name": "addTenantIdForTables",
        "parameterTypes": [
          "java.util.Collection"
        ]
      },
      {
        "name": "addTenantIdToPrimaryKey",
        "parameterTypes": [
          "io.nop.orm.model.IEntityModel"
        ]
      },
      {
        "name": "addUniqueKey",
        "parameterTypes": [
          "io.nop.orm.model.IEntityModel",
          "io.nop.orm.model.OrmUniqueKeyModel"
        ]
      },
      {
        "name": "createTable",
        "parameterTypes": [
          "io.nop.orm.model.IEntityModel"
        ]
      },
      {
        "name": "createTable",
        "parameterTypes": [
          "io.nop.orm.model.IEntityModel",
          "boolean"
        ]
      },
      {
        "name": "createTables",
        "parameterTypes": [
          "java.util.Collection",
          "boolean"
        ]
      },
      {
        "name": "createTables",
        "parameterTypes": [
          "java.util.Collection",
          "boolean",
          "boolean"
        ]
      },
      {
        "name": "dropColumn",
        "parameterTypes": [
          "io.nop.orm.model.IColumnModel"
        ]
      },
      {
        "name": "dropTable",
        "parameterTypes": [
          "io.nop.orm.model.IEntityModel",
          "boolean"
        ]
      },
      {
        "name": "dropTables",
        "parameterTypes": [
          "java.util.Collection",
          "boolean"
        ]
      },
      {
        "name": "dropUniqueKey",
        "parameterTypes": [
          "io.nop.orm.model.IEntityModel",
          "io.nop.orm.model.OrmUniqueKeyModel"
        ]
      },
      {
        "name": "forDialect",
        "parameterTypes": [
          "io.nop.dao.dialect.IDialect"
        ]
      },
      {
        "name": "forDialect",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getDmlLibPath",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "modifyColumn",
        "parameterTypes": [
          "io.nop.orm.model.IColumnModel",
          "io.nop.orm.model.IColumnModel"
        ]
      }
    ],
    "name": "io.nop.orm.ddl.DdlSqlCreator"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "enhanceBinder",
        "parameterTypes": [
          "io.nop.orm.model.IEntityModel",
          "io.nop.orm.model.IColumnModel",
          "io.nop.dataset.binder.IDataParameterBinder"
        ]
      },
      {
        "name": "setTextCipher",
        "parameterTypes": [
          "io.nop.commons.crypto.ITextCipher"
        ]
      }
    ],
    "name": "io.nop.orm.factory.DefaultOrmColumnBinderEnhancer"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [
      {
        "name": "LOG"
      }
    ],
    "methods": [
      {
        "name": "clearCache",
        "parameterTypes": []
      },
      {
        "name": "destroy",
        "parameterTypes": []
      },
      {
        "name": "getObject",
        "parameterTypes": []
      },
      {
        "name": "init",
        "parameterTypes": []
      },
      {
        "name": "refreshConfig",
        "parameterTypes": []
      },
      {
        "name": "reloadOrmModel",
        "parameterTypes": []
      },
      {
        "name": "setOrmModelHolder",
        "parameterTypes": [
          "io.nop.orm.factory.IOrmModelHolder"
        ]
      }
    ],
    "name": "io.nop.orm.factory.OrmSessionFactoryBean"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "addInterceptor",
        "parameterTypes": [
          "io.nop.orm.IOrmInterceptor"
        ]
      },
      {
        "name": "buildFullName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getBeanProvider",
        "parameterTypes": []
      },
      {
        "name": "getColumnBinderEnhancer",
        "parameterTypes": []
      },
      {
        "name": "getDaoListeners",
        "parameterTypes": []
      },
      {
        "name": "getDefaultDynamicEntityClass",
        "parameterTypes": []
      },
      {
        "name": "getDefaultQueryExecutor",
        "parameterTypes": []
      },
      {
        "name": "getDialectProvider",
        "parameterTypes": []
      },
      {
        "name": "getDynamicEntityNames",
        "parameterTypes": []
      },
      {
        "name": "getEntityClassLoader",
        "parameterTypes": []
      },
      {
        "name": "getEntityFilterProvider",
        "parameterTypes": []
      },
      {
        "name": "getEqlAstTransformer",
        "parameterTypes": []
      },
      {
        "name": "getGlobalCache",
        "parameterTypes": []
      },
      {
        "name": "getInterceptors",
        "parameterTypes": []
      },
      {
        "name": "getJdbcTemplate",
        "parameterTypes": []
      },
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "getOrmModel",
        "parameterTypes": []
      },
      {
        "name": "getQueryExecutor",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getQueryExecutors",
        "parameterTypes": []
      },
      {
        "name": "getSequenceGenerator",
        "parameterTypes": []
      },
      {
        "name": "getShardSelector",
        "parameterTypes": []
      },
      {
        "name": "isRegisterGlobalCache",
        "parameterTypes": []
      },
      {
        "name": "isUseMetrics",
        "parameterTypes": []
      },
      {
        "name": "removeInterceptor",
        "parameterTypes": [
          "io.nop.orm.IOrmInterceptor"
        ]
      },
      {
        "name": "setBeanProvider",
        "parameterTypes": [
          "io.nop.api.core.ioc.IBeanProvider"
        ]
      },
      {
        "name": "setColumnBinderEnhancer",
        "parameterTypes": [
          "io.nop.orm.eql.binder.IOrmColumnBinderEnhancer"
        ]
      },
      {
        "name": "setDaoListeners",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setDefaultDynamicEntityClass",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "setDefaultQueryExecutor",
        "parameterTypes": [
          "io.nop.orm.loader.IQueryExecutor"
        ]
      },
      {
        "name": "setDialectProvider",
        "parameterTypes": [
          "io.nop.dao.dialect.IDialectProvider"
        ]
      },
      {
        "name": "setDynamicEntityNames",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setEntityClassLoader",
        "parameterTypes": [
          "io.nop.commons.lang.IClassLoader"
        ]
      },
      {
        "name": "setEntityFilterProvider",
        "parameterTypes": [
          "io.nop.orm.sql.IEntityFilterProvider"
        ]
      },
      {
        "name": "setEqlAstTransformer",
        "parameterTypes": [
          "io.nop.orm.eql.IEqlAstTransformer"
        ]
      },
      {
        "name": "setGlobalCache",
        "parameterTypes": [
          "io.nop.commons.cache.ICacheProvider"
        ]
      },
      {
        "name": "setInterceptors",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setJdbcTemplate",
        "parameterTypes": [
          "io.nop.dao.jdbc.IJdbcTemplate"
        ]
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setOrmModel",
        "parameterTypes": [
          "io.nop.orm.model.IOrmModel"
        ]
      },
      {
        "name": "setQueryExecutors",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "setRegisterGlobalCache",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setSequenceGenerator",
        "parameterTypes": [
          "io.nop.dao.seq.ISequenceGenerator"
        ]
      },
      {
        "name": "setShardSelector",
        "parameterTypes": [
          "io.nop.dao.shard.IShardSelector"
        ]
      },
      {
        "name": "setUseMetrics",
        "parameterTypes": [
          "boolean"
        ]
      }
    ],
    "name": "io.nop.orm.factory.SessionFactoryConfig"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getObject",
        "parameterTypes": []
      },
      {
        "name": "init",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.orm.factory.XplOrmInterceptorFactoryBean"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [
      {
        "name": "LOG"
      }
    ],
    "methods": [
      {
        "name": "assembleAllCollectionInMemory",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "assembleCollectionInMemory",
        "parameterTypes": [
          "java.util.Collection"
        ]
      },
      {
        "name": "assembleSelectionInMemory",
        "parameterTypes": [
          "java.lang.Object",
          "io.nop.api.core.beans.FieldSelectionBean"
        ]
      },
      {
        "name": "attach",
        "parameterTypes": [
          "io.nop.orm.IOrmEntity"
        ]
      },
      {
        "name": "batchDelete",
        "parameterTypes": [
          "java.util.Collection"
        ]
      },
      {
        "name": "batchLoadProps",
        "parameterTypes": [
          "java.util.Collection",
          "java.util.Collection"
        ]
      },
      {
        "name": "batchLoadSelection",
        "parameterTypes": [
          "java.util.Collection",
          "io.nop.api.core.beans.FieldSelectionBean"
        ]
      },
      {
        "name": "batchSaveOrUpdate",
        "parameterTypes": [
          "java.util.Collection"
        ]
      },
      {
        "name": "cacheGet",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "cacheGet",
        "parameterTypes": [
          "java.lang.Object",
          "java.util.function.Supplier"
        ]
      },
      {
        "name": "cachePut",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.Object"
        ]
      },
      {
        "name": "cacheRemove",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "castId",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object"
        ]
      },
      {
        "name": "castIds",
        "parameterTypes": [
          "java.lang.String",
          "java.util.Collection"
        ]
      },
      {
        "name": "clearGlobalCache",
        "parameterTypes": []
      },
      {
        "name": "clearGlobalCacheFor",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "clearQueryCache",
        "parameterTypes": []
      },
      {
        "name": "clearQueryCacheFor",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "clearQueryPlanCache",
        "parameterTypes": []
      },
      {
        "name": "clearSession",
        "parameterTypes": []
      },
      {
        "name": "contains",
        "parameterTypes": [
          "io.nop.orm.IOrmEntity"
        ]
      },
      {
        "name": "currentSession",
        "parameterTypes": []
      },
      {
        "name": "delete",
        "parameterTypes": [
          "io.nop.orm.IOrmEntity"
        ]
      },
      {
        "name": "deleteDirectly",
        "parameterTypes": [
          "io.nop.orm.IOrmEntity"
        ]
      },
      {
        "name": "detach",
        "parameterTypes": [
          "io.nop.orm.IOrmEntity",
          "io.nop.api.core.beans.FieldSelectionBean"
        ]
      },
      {
        "name": "evict",
        "parameterTypes": [
          "io.nop.orm.IOrmEntity"
        ]
      },
      {
        "name": "evictAll",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "evictQueryCache",
        "parameterTypes": [
          "java.lang.String",
          "java.io.Serializable"
        ]
      },
      {
        "name": "executeQuery",
        "parameterTypes": [
          "io.nop.core.lang.sql.SQL",
          "io.nop.api.core.beans.LongRangeBean",
          "java.util.function.Function"
        ]
      },
      {
        "name": "executeStatement",
        "parameterTypes": [
          "io.nop.core.lang.sql.SQL",
          "io.nop.api.core.beans.LongRangeBean",
          "java.util.function.Function",
          "io.nop.api.core.util.ICancelToken"
        ]
      },
      {
        "name": "executeUpdate",
        "parameterTypes": [
          "io.nop.core.lang.sql.SQL"
        ]
      },
      {
        "name": "existsByQuery",
        "parameterTypes": [
          "io.nop.api.core.beans.query.QueryBean"
        ]
      },
      {
        "name": "findFirstByQuery",
        "parameterTypes": [
          "io.nop.api.core.beans.query.QueryBean",
          "io.nop.dataset.IRowMapper"
        ]
      },
      {
        "name": "findListByQuery",
        "parameterTypes": [
          "io.nop.api.core.beans.query.QueryBean",
          "io.nop.dataset.IRowMapper"
        ]
      },
      {
        "name": "flushSession",
        "parameterTypes": []
      },
      {
        "name": "forStateless",
        "parameterTypes": []
      },
      {
        "name": "forceLoad",
        "parameterTypes": [
          "io.nop.orm.IOrmEntity",
          "io.nop.api.core.beans.FieldSelectionBean"
        ]
      },
      {
        "name": "get",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object"
        ]
      },
      {
        "name": "getCacheProvider",
        "parameterTypes": []
      },
      {
        "name": "getDbEstimatedClock",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getDefaultRowMapper",
        "parameterTypes": []
      },
      {
        "name": "getDialectForQuerySpace",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getExtension",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Class"
        ]
      },
      {
        "name": "getFullEntityName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getOrmModel",
        "parameterTypes": []
      },
      {
        "name": "getSessionFactory",
        "parameterTypes": []
      },
      {
        "name": "initEntityId",
        "parameterTypes": [
          "io.nop.orm.IOrmEntity"
        ]
      },
      {
        "name": "isValidEntityName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "load",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object"
        ]
      },
      {
        "name": "lock",
        "parameterTypes": [
          "io.nop.orm.IOrmEntity"
        ]
      },
      {
        "name": "newEntity",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "refresh",
        "parameterTypes": [
          "io.nop.orm.IOrmEntity"
        ]
      },
      {
        "name": "registerSession",
        "parameterTypes": [
          "io.nop.orm.IOrmSession"
        ]
      },
      {
        "name": "reloadModel",
        "parameterTypes": []
      },
      {
        "name": "requireSession",
        "parameterTypes": []
      },
      {
        "name": "runInNewSession",
        "parameterTypes": [
          "java.util.function.Function"
        ]
      },
      {
        "name": "runInNewSessionAsync",
        "parameterTypes": [
          "java.util.function.Function"
        ]
      },
      {
        "name": "runInSession",
        "parameterTypes": [
          "java.lang.Runnable"
        ]
      },
      {
        "name": "runInSession",
        "parameterTypes": [
          "java.util.function.Function"
        ]
      },
      {
        "name": "runInSessionAsync",
        "parameterTypes": [
          "java.util.function.Function"
        ]
      },
      {
        "name": "save",
        "parameterTypes": [
          "io.nop.orm.IOrmEntity"
        ]
      },
      {
        "name": "saveDirectly",
        "parameterTypes": [
          "io.nop.orm.IOrmEntity"
        ]
      },
      {
        "name": "saveOrUpdate",
        "parameterTypes": [
          "io.nop.orm.IOrmEntity"
        ]
      },
      {
        "name": "sessionCache",
        "parameterTypes": []
      },
      {
        "name": "setSessionFactory",
        "parameterTypes": [
          "io.nop.orm.IOrmSessionFactory"
        ]
      },
      {
        "name": "unregisterSession",
        "parameterTypes": []
      },
      {
        "name": "updateDirectly",
        "parameterTypes": [
          "io.nop.orm.IOrmEntity"
        ]
      }
    ],
    "name": "io.nop.orm.impl.OrmTemplateImpl"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.orm.initialize.DataBaseSchemaInitializer"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.orm.initialize.OrmCoreInitializer"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "invoke",
        "parameterTypes": [
          "io.nop.core.reflect.aop.IMethodInvocation"
        ]
      }
    ],
    "name": "io.nop.orm.interceptor.SingleSessionMethodInterceptor"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getCode",
        "parameterTypes": []
      },
      {
        "name": "getColumnRefs",
        "parameterTypes": []
      },
      {
        "name": "getDefaultValue",
        "parameterTypes": []
      },
      {
        "name": "getDomain",
        "parameterTypes": []
      },
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "getPrecision",
        "parameterTypes": []
      },
      {
        "name": "getPropId",
        "parameterTypes": []
      },
      {
        "name": "getScale",
        "parameterTypes": []
      },
      {
        "name": "getSqlText",
        "parameterTypes": []
      },
      {
        "name": "getStdDataType",
        "parameterTypes": []
      },
      {
        "name": "getStdDomain",
        "parameterTypes": []
      },
      {
        "name": "getStdSqlType",
        "parameterTypes": []
      },
      {
        "name": "isInsertable",
        "parameterTypes": []
      },
      {
        "name": "isMandatory",
        "parameterTypes": []
      },
      {
        "name": "isPrimary",
        "parameterTypes": []
      },
      {
        "name": "isUpdatable",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.orm.model.IColumnModel"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "containsTenantIdInPk",
        "parameterTypes": []
      },
      {
        "name": "getAliasPropPath",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getAliases",
        "parameterTypes": []
      },
      {
        "name": "getAllPropIds",
        "parameterTypes": []
      },
      {
        "name": "getAllProps",
        "parameterTypes": []
      },
      {
        "name": "getClassName",
        "parameterTypes": []
      },
      {
        "name": "getColumn",
        "parameterTypes": [
          "java.lang.String",
          "boolean"
        ]
      },
      {
        "name": "getColumnByCode",
        "parameterTypes": [
          "java.lang.String",
          "boolean"
        ]
      },
      {
        "name": "getColumnByPropId",
        "parameterTypes": [
          "int",
          "boolean"
        ]
      },
      {
        "name": "getColumns",
        "parameterTypes": []
      },
      {
        "name": "getColumnsRefs",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "getComponent",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getComponents",
        "parameterTypes": []
      },
      {
        "name": "getComputes",
        "parameterTypes": []
      },
      {
        "name": "getCreateTimePropId",
        "parameterTypes": []
      },
      {
        "name": "getCreaterPropId",
        "parameterTypes": []
      },
      {
        "name": "getDbCatalog",
        "parameterTypes": []
      },
      {
        "name": "getDbSchema",
        "parameterTypes": []
      },
      {
        "name": "getDeleteFlagProp",
        "parameterTypes": []
      },
      {
        "name": "getDeleteFlagPropId",
        "parameterTypes": []
      },
      {
        "name": "getDeleteVersionProp",
        "parameterTypes": []
      },
      {
        "name": "getDeleteVersionPropId",
        "parameterTypes": []
      },
      {
        "name": "getDisplayName",
        "parameterTypes": []
      },
      {
        "name": "getEagerLoadProps",
        "parameterTypes": []
      },
      {
        "name": "getFilters",
        "parameterTypes": []
      },
      {
        "name": "getIdProp",
        "parameterTypes": []
      },
      {
        "name": "getLabelProp",
        "parameterTypes": []
      },
      {
        "name": "getMaxBatchLoadSize",
        "parameterTypes": []
      },
      {
        "name": "getMinimumLazyLoadProps",
        "parameterTypes": []
      },
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "getNopFlowIdPropId",
        "parameterTypes": []
      },
      {
        "name": "getNopRevBeginVerPropId",
        "parameterTypes": []
      },
      {
        "name": "getNopRevEndVarPropId",
        "parameterTypes": []
      },
      {
        "name": "getNopRevExtChangePropId",
        "parameterTypes": []
      },
      {
        "name": "getNopRevTypePropId",
        "parameterTypes": []
      },
      {
        "name": "getPersistDriver",
        "parameterTypes": []
      },
      {
        "name": "getPkColumnNames",
        "parameterTypes": []
      },
      {
        "name": "getPkColumns",
        "parameterTypes": []
      },
      {
        "name": "getProp",
        "parameterTypes": [
          "java.lang.String",
          "boolean"
        ]
      },
      {
        "name": "getPropByUnderscoreName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getPropIdBound",
        "parameterTypes": []
      },
      {
        "name": "getQuerySpace",
        "parameterTypes": []
      },
      {
        "name": "getRelation",
        "parameterTypes": [
          "java.lang.String",
          "boolean"
        ]
      },
      {
        "name": "getRelations",
        "parameterTypes": []
      },
      {
        "name": "getRevLatestKeyColumns",
        "parameterTypes": []
      },
      {
        "name": "getShardColumn",
        "parameterTypes": []
      },
      {
        "name": "getShardPropId",
        "parameterTypes": []
      },
      {
        "name": "getStateProp",
        "parameterTypes": []
      },
      {
        "name": "getTableName",
        "parameterTypes": []
      },
      {
        "name": "getTenantPropId",
        "parameterTypes": []
      },
      {
        "name": "getUpdateTimePropId",
        "parameterTypes": []
      },
      {
        "name": "getUpdaterPropId",
        "parameterTypes": []
      },
      {
        "name": "getVersionPropId",
        "parameterTypes": []
      },
      {
        "name": "hasLazyColumn",
        "parameterTypes": []
      },
      {
        "name": "hasOneToOneRelation",
        "parameterTypes": []
      },
      {
        "name": "isCheckVersionWhenLazyLoad",
        "parameterTypes": []
      },
      {
        "name": "isDependByOtherEntity",
        "parameterTypes": []
      },
      {
        "name": "isEntityModeEnabled",
        "parameterTypes": []
      },
      {
        "name": "isGlobalUniqueId",
        "parameterTypes": []
      },
      {
        "name": "isKvTable",
        "parameterTypes": []
      },
      {
        "name": "isNoPrimaryKey",
        "parameterTypes": []
      },
      {
        "name": "isReadonly",
        "parameterTypes": []
      },
      {
        "name": "isRegisterShortName",
        "parameterTypes": []
      },
      {
        "name": "isTableView",
        "parameterTypes": []
      },
      {
        "name": "isTenantModel",
        "parameterTypes": []
      },
      {
        "name": "isUseGlobalCache",
        "parameterTypes": []
      },
      {
        "name": "isUseLogicalDelete",
        "parameterTypes": []
      },
      {
        "name": "isUseRevision",
        "parameterTypes": []
      },
      {
        "name": "isUseShard",
        "parameterTypes": []
      },
      {
        "name": "isUseTenant",
        "parameterTypes": []
      },
      {
        "name": "setDependByOtherEntity",
        "parameterTypes": [
          "boolean"
        ]
      }
    ],
    "name": "io.nop.orm.model.IEntityModel"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getAliasPropPath",
        "parameterTypes": []
      },
      {
        "name": "getColumnPropId",
        "parameterTypes": []
      },
      {
        "name": "getColumnPropIds",
        "parameterTypes": []
      },
      {
        "name": "getColumns",
        "parameterTypes": []
      },
      {
        "name": "getDisplayName",
        "parameterTypes": []
      },
      {
        "name": "getJavaTypeName",
        "parameterTypes": []
      },
      {
        "name": "getKind",
        "parameterTypes": []
      },
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "getOwnerEntityModel",
        "parameterTypes": []
      },
      {
        "name": "getPropValue",
        "parameterTypes": [
          "io.nop.orm.IOrmEntity"
        ]
      },
      {
        "name": "getStdDataType",
        "parameterTypes": []
      },
      {
        "name": "hasLazyLoadColumn",
        "parameterTypes": []
      },
      {
        "name": "isMandatory",
        "parameterTypes": []
      },
      {
        "name": "isSingleColumn",
        "parameterTypes": []
      },
      {
        "name": "setPropValue",
        "parameterTypes": [
          "io.nop.orm.IOrmEntity",
          "java.lang.Object"
        ]
      }
    ],
    "name": "io.nop.orm.model.IEntityPropModel"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getCollectionName",
        "parameterTypes": []
      },
      {
        "name": "getJoin",
        "parameterTypes": []
      },
      {
        "name": "getKeyProp",
        "parameterTypes": []
      },
      {
        "name": "getMaxBatchLoadSize",
        "parameterTypes": []
      },
      {
        "name": "getOwnerEntityModel",
        "parameterTypes": []
      },
      {
        "name": "getPersistDriver",
        "parameterTypes": []
      },
      {
        "name": "getRefEntityModel",
        "parameterTypes": []
      },
      {
        "name": "getRefEntityName",
        "parameterTypes": []
      },
      {
        "name": "getRefPropIds",
        "parameterTypes": []
      },
      {
        "name": "getRefPropName",
        "parameterTypes": []
      },
      {
        "name": "getSingleColumnJoin",
        "parameterTypes": []
      },
      {
        "name": "getSort",
        "parameterTypes": []
      },
      {
        "name": "isAutoCascadeDelete",
        "parameterTypes": []
      },
      {
        "name": "isCascadeDelete",
        "parameterTypes": []
      },
      {
        "name": "isDynamicRelation",
        "parameterTypes": []
      },
      {
        "name": "isJoinOnNonPkColumn",
        "parameterTypes": []
      },
      {
        "name": "isMandatory",
        "parameterTypes": []
      },
      {
        "name": "isOneToOne",
        "parameterTypes": []
      },
      {
        "name": "isReverseDepends",
        "parameterTypes": []
      },
      {
        "name": "isUseGlobalCache",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.orm.model.IEntityRelationModel"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getKind",
        "parameterTypes": []
      },
      {
        "name": "getStdDataType",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.orm.model.IOrmDataType"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getComment",
        "parameterTypes": []
      },
      {
        "name": "getTagSet",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.orm.model.IPdmElement"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getAliasPropPath",
        "parameterTypes": []
      },
      {
        "name": "getColumnPropId",
        "parameterTypes": []
      },
      {
        "name": "getColumnPropIds",
        "parameterTypes": []
      },
      {
        "name": "getColumnRefs",
        "parameterTypes": []
      },
      {
        "name": "getColumns",
        "parameterTypes": []
      },
      {
        "name": "getJavaClass",
        "parameterTypes": []
      },
      {
        "name": "getKind",
        "parameterTypes": []
      },
      {
        "name": "getOwnerEntityModel",
        "parameterTypes": []
      },
      {
        "name": "getPropValue",
        "parameterTypes": [
          "io.nop.orm.IOrmEntity"
        ]
      },
      {
        "name": "getSqlType",
        "parameterTypes": []
      },
      {
        "name": "getSqlType",
        "parameterTypes": [
          "io.nop.dao.dialect.IDialect"
        ]
      },
      {
        "name": "hasLazyLoadColumn",
        "parameterTypes": []
      },
      {
        "name": "isSingleColumn",
        "parameterTypes": []
      },
      {
        "name": "setColumnRefs",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setJavaClass",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "setOwnerEntityModel",
        "parameterTypes": [
          "io.nop.orm.model.OrmEntityModel"
        ]
      },
      {
        "name": "setPropValue",
        "parameterTypes": [
          "io.nop.orm.IOrmEntity",
          "java.lang.Object"
        ]
      },
      {
        "name": "setSqlType",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "toString",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.orm.model.OrmColumnModel"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.orm.model.OrmComponentModel"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.orm.model.OrmComponentPropModel"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.orm.model.OrmCompositePKModel"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.orm.model.OrmDomainModel"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "addProp",
        "parameterTypes": [
          "io.nop.orm.model.IEntityPropModel"
        ]
      },
      {
        "name": "addTag",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "containsTenantIdInPk",
        "parameterTypes": []
      },
      {
        "name": "getAliasPropPath",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getAllPropIds",
        "parameterTypes": []
      },
      {
        "name": "getAllProps",
        "parameterTypes": []
      },
      {
        "name": "getCode",
        "parameterTypes": []
      },
      {
        "name": "getColumn",
        "parameterTypes": [
          "java.lang.String",
          "boolean"
        ]
      },
      {
        "name": "getColumnByCode",
        "parameterTypes": [
          "java.lang.String",
          "boolean"
        ]
      },
      {
        "name": "getColumnByPropId",
        "parameterTypes": [
          "int",
          "boolean"
        ]
      },
      {
        "name": "getColumnsRefs",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "getCreateTimePropId",
        "parameterTypes": []
      },
      {
        "name": "getCreaterPropId",
        "parameterTypes": []
      },
      {
        "name": "getDeleteFlagPropId",
        "parameterTypes": []
      },
      {
        "name": "getDeleteVersionPropId",
        "parameterTypes": []
      },
      {
        "name": "getEagerLoadProps",
        "parameterTypes": []
      },
      {
        "name": "getIdProp",
        "parameterTypes": []
      },
      {
        "name": "getKind",
        "parameterTypes": []
      },
      {
        "name": "getMinimumLazyLoadProps",
        "parameterTypes": []
      },
      {
        "name": "getNopFlowIdPropId",
        "parameterTypes": []
      },
      {
        "name": "getNopRevBeginVerPropId",
        "parameterTypes": []
      },
      {
        "name": "getNopRevEndVarPropId",
        "parameterTypes": []
      },
      {
        "name": "getNopRevExtChangePropId",
        "parameterTypes": []
      },
      {
        "name": "getNopRevTypePropId",
        "parameterTypes": []
      },
      {
        "name": "getPkColumnNames",
        "parameterTypes": []
      },
      {
        "name": "getPkColumns",
        "parameterTypes": []
      },
      {
        "name": "getProp",
        "parameterTypes": [
          "java.lang.String",
          "boolean"
        ]
      },
      {
        "name": "getPropByUnderscoreName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getPropIdBound",
        "parameterTypes": []
      },
      {
        "name": "getRelation",
        "parameterTypes": [
          "java.lang.String",
          "boolean"
        ]
      },
      {
        "name": "getRevLatestKeyColumns",
        "parameterTypes": []
      },
      {
        "name": "getShardColumn",
        "parameterTypes": []
      },
      {
        "name": "getShardPropId",
        "parameterTypes": []
      },
      {
        "name": "getStdDataType",
        "parameterTypes": []
      },
      {
        "name": "getTenantPropId",
        "parameterTypes": []
      },
      {
        "name": "getUpdateTimePropId",
        "parameterTypes": []
      },
      {
        "name": "getUpdaterPropId",
        "parameterTypes": []
      },
      {
        "name": "getVersionPropId",
        "parameterTypes": []
      },
      {
        "name": "hasLazyColumn",
        "parameterTypes": []
      },
      {
        "name": "hasOneToOneRelation",
        "parameterTypes": []
      },
      {
        "name": "init",
        "parameterTypes": []
      },
      {
        "name": "isAllColumnPrimary",
        "parameterTypes": []
      },
      {
        "name": "isDependByOtherEntity",
        "parameterTypes": []
      },
      {
        "name": "isGlobalUniqueId",
        "parameterTypes": []
      },
      {
        "name": "isTenantModel",
        "parameterTypes": []
      },
      {
        "name": "setDependByOtherEntity",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setPkColumns",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setRevLatestKeyColumns",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setTenantModel",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "toString",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.orm.model.OrmEntityModel"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getColumnCode",
        "parameterTypes": []
      },
      {
        "name": "getColumnModel",
        "parameterTypes": []
      },
      {
        "name": "setColumnModel",
        "parameterTypes": [
          "io.nop.orm.model.OrmColumnModel"
        ]
      }
    ],
    "name": "io.nop.orm.model.OrmIndexColumnModel"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.orm.model.OrmIndexModel"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getLeftPropModel",
        "parameterTypes": []
      },
      {
        "name": "getLeftType",
        "parameterTypes": []
      },
      {
        "name": "getLeftValue",
        "parameterTypes": [
          "io.nop.orm.IOrmEntity"
        ]
      },
      {
        "name": "getRightPropModel",
        "parameterTypes": []
      },
      {
        "name": "getRightType",
        "parameterTypes": []
      },
      {
        "name": "getRightValue",
        "parameterTypes": [
          "io.nop.orm.IOrmEntity"
        ]
      },
      {
        "name": "setLeftPropModel",
        "parameterTypes": [
          "io.nop.orm.model.IEntityPropModel"
        ]
      },
      {
        "name": "setRightPropModel",
        "parameterTypes": [
          "io.nop.orm.model.IEntityPropModel"
        ]
      }
    ],
    "name": "io.nop.orm.model.OrmJoinOnModel"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getCollectionModel",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getEntityModel",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getEntityModelByTableName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getEntityModelByUnderscoreName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getEntityModels",
        "parameterTypes": []
      },
      {
        "name": "getEntityModelsInTopoOrder",
        "parameterTypes": []
      },
      {
        "name": "getEntityNames",
        "parameterTypes": []
      },
      {
        "name": "getTopoEntry",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "init",
        "parameterTypes": []
      },
      {
        "name": "isAnyEntityUseTenant",
        "parameterTypes": []
      },
      {
        "name": "isMerged",
        "parameterTypes": []
      },
      {
        "name": "setMerged",
        "parameterTypes": [
          "boolean"
        ]
      }
    ],
    "name": "io.nop.orm.model.OrmModel"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.orm.model.OrmRefSetModel"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "addJoinOn",
        "parameterTypes": [
          "io.nop.orm.model.OrmJoinOnModel"
        ]
      },
      {
        "name": "getAliasPropPath",
        "parameterTypes": []
      },
      {
        "name": "getCollectionName",
        "parameterTypes": []
      },
      {
        "name": "getColumnPropId",
        "parameterTypes": []
      },
      {
        "name": "getColumnPropIds",
        "parameterTypes": []
      },
      {
        "name": "getColumns",
        "parameterTypes": []
      },
      {
        "name": "getJavaTypeName",
        "parameterTypes": []
      },
      {
        "name": "getKeyProp",
        "parameterTypes": []
      },
      {
        "name": "getOwnerEntityModel",
        "parameterTypes": []
      },
      {
        "name": "getPropValue",
        "parameterTypes": [
          "io.nop.orm.IOrmEntity"
        ]
      },
      {
        "name": "getRefEntityModel",
        "parameterTypes": []
      },
      {
        "name": "getRefPropIds",
        "parameterTypes": []
      },
      {
        "name": "getSingleColumnJoin",
        "parameterTypes": []
      },
      {
        "name": "getSort",
        "parameterTypes": []
      },
      {
        "name": "getStdDataType",
        "parameterTypes": []
      },
      {
        "name": "getType",
        "parameterTypes": []
      },
      {
        "name": "hasLazyLoadColumn",
        "parameterTypes": []
      },
      {
        "name": "isDynamicRelation",
        "parameterTypes": []
      },
      {
        "name": "isJoinOnNonPkColumn",
        "parameterTypes": []
      },
      {
        "name": "isMandatory",
        "parameterTypes": []
      },
      {
        "name": "isOneToOne",
        "parameterTypes": []
      },
      {
        "name": "isReverseDepends",
        "parameterTypes": []
      },
      {
        "name": "isSingleColumn",
        "parameterTypes": []
      },
      {
        "name": "setColumns",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setDynamicRelation",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setJoinOnNonPkColumn",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setOwnerEntityModel",
        "parameterTypes": [
          "io.nop.orm.model.OrmEntityModel"
        ]
      },
      {
        "name": "setPropValue",
        "parameterTypes": [
          "io.nop.orm.IOrmEntity",
          "java.lang.Object"
        ]
      },
      {
        "name": "setRefEntityModel",
        "parameterTypes": [
          "io.nop.orm.model.OrmEntityModel"
        ]
      },
      {
        "name": "setRefPropIds",
        "parameterTypes": [
          "[I"
        ]
      },
      {
        "name": "setSingleColumnJoin",
        "parameterTypes": [
          "io.nop.orm.model.OrmJoinOnModel"
        ]
      }
    ],
    "name": "io.nop.orm.model.OrmReferenceModel"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "getCollectionName",
        "parameterTypes": []
      },
      {
        "name": "getKind",
        "parameterTypes": []
      },
      {
        "name": "getRefSet",
        "parameterTypes": []
      },
      {
        "name": "isIgnoreDepends",
        "parameterTypes": []
      },
      {
        "name": "setCollectionName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setIgnoreDepends",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setRefSet",
        "parameterTypes": [
          "io.nop.orm.model.OrmRefSetModel"
        ]
      }
    ],
    "name": "io.nop.orm.model.OrmToManyReferenceModel"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getKind",
        "parameterTypes": []
      },
      {
        "name": "isOneToOne",
        "parameterTypes": []
      },
      {
        "name": "isUseGlobalCache",
        "parameterTypes": []
      },
      {
        "name": "setOneToOne",
        "parameterTypes": [
          "boolean"
        ]
      }
    ],
    "name": "io.nop.orm.model.OrmToOneReferenceModel"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "addColumn",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getColumnModels",
        "parameterTypes": []
      },
      {
        "name": "getColumnModelsWithTenant",
        "parameterTypes": [
          "io.nop.orm.model.IEntityModel"
        ]
      },
      {
        "name": "setColumnModels",
        "parameterTypes": [
          "java.util.List"
        ]
      }
    ],
    "name": "io.nop.orm.model.OrmUniqueKeyModel"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "copyTo",
        "parameterTypes": [
          "io.nop.orm.model.OrmColumnModel"
        ]
      },
      {
        "name": "freeze",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getCode",
        "parameterTypes": []
      },
      {
        "name": "getComment",
        "parameterTypes": []
      },
      {
        "name": "getDefaultValue",
        "parameterTypes": []
      },
      {
        "name": "getDisplayName",
        "parameterTypes": []
      },
      {
        "name": "getDomain",
        "parameterTypes": []
      },
      {
        "name": "getFixedValue",
        "parameterTypes": []
      },
      {
        "name": "getJsonPath",
        "parameterTypes": []
      },
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "getNativeSqlType",
        "parameterTypes": []
      },
      {
        "name": "getPrecision",
        "parameterTypes": []
      },
      {
        "name": "getPropId",
        "parameterTypes": []
      },
      {
        "name": "getScale",
        "parameterTypes": []
      },
      {
        "name": "getSqlText",
        "parameterTypes": []
      },
      {
        "name": "getStdDataType",
        "parameterTypes": []
      },
      {
        "name": "getStdDomain",
        "parameterTypes": []
      },
      {
        "name": "getStdSqlType",
        "parameterTypes": []
      },
      {
        "name": "getTagSet",
        "parameterTypes": []
      },
      {
        "name": "getUiHint",
        "parameterTypes": []
      },
      {
        "name": "isInsertable",
        "parameterTypes": []
      },
      {
        "name": "isLazy",
        "parameterTypes": []
      },
      {
        "name": "isMandatory",
        "parameterTypes": []
      },
      {
        "name": "isNotGenCode",
        "parameterTypes": []
      },
      {
        "name": "isPrimary",
        "parameterTypes": []
      },
      {
        "name": "isUpdatable",
        "parameterTypes": []
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "outputJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      },
      {
        "name": "setCode",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setComment",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDefaultValue",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDisplayName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDomain",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setFixedValue",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setInsertable",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setJsonPath",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setLazy",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setMandatory",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setNativeSqlType",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setNotGenCode",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setPrecision",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setPrimary",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setPropId",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setScale",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setSqlText",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setStdDataType",
        "parameterTypes": [
          "io.nop.commons.type.StdDataType"
        ]
      },
      {
        "name": "setStdDomain",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setStdSqlType",
        "parameterTypes": [
          "io.nop.commons.type.StdSqlType"
        ]
      },
      {
        "name": "setStdSqlType",
        "parameterTypes": [
          "io.nop.core.lang.sql.StdSqlType"
        ]
      },
      {
        "name": "setTagSet",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setUiHint",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setUpdatable",
        "parameterTypes": [
          "boolean"
        ]
      }
    ],
    "name": "io.nop.orm.model._gen._OrmColumnModel"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "copyTo",
        "parameterTypes": [
          "io.nop.orm.model.OrmComponentModel"
        ]
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "outputJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      }
    ],
    "name": "io.nop.orm.model._gen._OrmComponentModel"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "copyTo",
        "parameterTypes": [
          "io.nop.orm.model.OrmComponentPropModel"
        ]
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "outputJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      }
    ],
    "name": "io.nop.orm.model._gen._OrmComponentPropModel"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "copyTo",
        "parameterTypes": [
          "io.nop.orm.model.OrmDomainModel"
        ]
      },
      {
        "name": "freeze",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getDisplayName",
        "parameterTypes": []
      },
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "getPrecision",
        "parameterTypes": []
      },
      {
        "name": "getScale",
        "parameterTypes": []
      },
      {
        "name": "getStdDataType",
        "parameterTypes": []
      },
      {
        "name": "getStdDomain",
        "parameterTypes": []
      },
      {
        "name": "getStdSqlType",
        "parameterTypes": []
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "outputJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      },
      {
        "name": "setDisplayName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setPrecision",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setScale",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setStdDataType",
        "parameterTypes": [
          "io.nop.commons.type.StdDataType"
        ]
      },
      {
        "name": "setStdDomain",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setStdSqlType",
        "parameterTypes": [
          "io.nop.commons.type.StdSqlType"
        ]
      },
      {
        "name": "setStdSqlType",
        "parameterTypes": [
          "io.nop.core.lang.sql.StdSqlType"
        ]
      }
    ],
    "name": "io.nop.orm.model._gen._OrmDomainModel"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "addAlias",
        "parameterTypes": [
          "io.nop.orm.model.OrmAliasModel"
        ]
      },
      {
        "name": "addColumn",
        "parameterTypes": [
          "io.nop.orm.model.OrmColumnModel"
        ]
      },
      {
        "name": "addComponent",
        "parameterTypes": [
          "io.nop.orm.model.OrmComponentModel"
        ]
      },
      {
        "name": "addCompute",
        "parameterTypes": [
          "io.nop.orm.model.OrmComputePropModel"
        ]
      },
      {
        "name": "addFilter",
        "parameterTypes": [
          "io.nop.orm.model.OrmEntityFilterModel"
        ]
      },
      {
        "name": "addIndex",
        "parameterTypes": [
          "io.nop.orm.model.OrmIndexModel"
        ]
      },
      {
        "name": "addRelation",
        "parameterTypes": [
          "io.nop.orm.model.OrmReferenceModel"
        ]
      },
      {
        "name": "addUniqueKey",
        "parameterTypes": [
          "io.nop.orm.model.OrmUniqueKeyModel"
        ]
      },
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "copyTo",
        "parameterTypes": [
          "io.nop.orm.model.OrmEntityModel"
        ]
      },
      {
        "name": "freeze",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getAlias",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getAliases",
        "parameterTypes": []
      },
      {
        "name": "getClassName",
        "parameterTypes": []
      },
      {
        "name": "getColumn",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getColumns",
        "parameterTypes": []
      },
      {
        "name": "getComment",
        "parameterTypes": []
      },
      {
        "name": "getComponent",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getComponents",
        "parameterTypes": []
      },
      {
        "name": "getCompute",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getComputes",
        "parameterTypes": []
      },
      {
        "name": "getCreateTimeProp",
        "parameterTypes": []
      },
      {
        "name": "getCreaterProp",
        "parameterTypes": []
      },
      {
        "name": "getDbCatalog",
        "parameterTypes": []
      },
      {
        "name": "getDbPkName",
        "parameterTypes": []
      },
      {
        "name": "getDbSchema",
        "parameterTypes": []
      },
      {
        "name": "getDeleteFlagProp",
        "parameterTypes": []
      },
      {
        "name": "getDeleteVersionProp",
        "parameterTypes": []
      },
      {
        "name": "getDimensionalType",
        "parameterTypes": []
      },
      {
        "name": "getDisplayName",
        "parameterTypes": []
      },
      {
        "name": "getFilter",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getFilters",
        "parameterTypes": []
      },
      {
        "name": "getIndex",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getIndexes",
        "parameterTypes": []
      },
      {
        "name": "getLabelProp",
        "parameterTypes": []
      },
      {
        "name": "getMaxBatchLoadSize",
        "parameterTypes": []
      },
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "getPersistDriver",
        "parameterTypes": []
      },
      {
        "name": "getQuerySpace",
        "parameterTypes": []
      },
      {
        "name": "getRelation",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getRelations",
        "parameterTypes": []
      },
      {
        "name": "getShardProp",
        "parameterTypes": []
      },
      {
        "name": "getSqlText",
        "parameterTypes": []
      },
      {
        "name": "getStateProp",
        "parameterTypes": []
      },
      {
        "name": "getTableName",
        "parameterTypes": []
      },
      {
        "name": "getTagSet",
        "parameterTypes": []
      },
      {
        "name": "getTenantProp",
        "parameterTypes": []
      },
      {
        "name": "getUniqueKey",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getUniqueKeys",
        "parameterTypes": []
      },
      {
        "name": "getUpdateTimeProp",
        "parameterTypes": []
      },
      {
        "name": "getUpdaterProp",
        "parameterTypes": []
      },
      {
        "name": "getVersionProp",
        "parameterTypes": []
      },
      {
        "name": "hasAlias",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "hasAliases",
        "parameterTypes": []
      },
      {
        "name": "hasColumn",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "hasColumns",
        "parameterTypes": []
      },
      {
        "name": "hasComponent",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "hasComponents",
        "parameterTypes": []
      },
      {
        "name": "hasCompute",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "hasComputes",
        "parameterTypes": []
      },
      {
        "name": "hasFilter",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "hasFilters",
        "parameterTypes": []
      },
      {
        "name": "hasIndex",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "hasIndexes",
        "parameterTypes": []
      },
      {
        "name": "hasRelation",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "hasRelations",
        "parameterTypes": []
      },
      {
        "name": "hasUniqueKey",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "hasUniqueKeys",
        "parameterTypes": []
      },
      {
        "name": "isCheckVersionWhenLazyLoad",
        "parameterTypes": []
      },
      {
        "name": "isEntityModeEnabled",
        "parameterTypes": []
      },
      {
        "name": "isKvTable",
        "parameterTypes": []
      },
      {
        "name": "isNoPrimaryKey",
        "parameterTypes": []
      },
      {
        "name": "isNotGenCode",
        "parameterTypes": []
      },
      {
        "name": "isReadonly",
        "parameterTypes": []
      },
      {
        "name": "isRegisterShortName",
        "parameterTypes": []
      },
      {
        "name": "isTableView",
        "parameterTypes": []
      },
      {
        "name": "isUseGlobalCache",
        "parameterTypes": []
      },
      {
        "name": "isUseLogicalDelete",
        "parameterTypes": []
      },
      {
        "name": "isUseRevision",
        "parameterTypes": []
      },
      {
        "name": "isUseShard",
        "parameterTypes": []
      },
      {
        "name": "isUseTenant",
        "parameterTypes": []
      },
      {
        "name": "isUseWorkflow",
        "parameterTypes": []
      },
      {
        "name": "keySet_aliases",
        "parameterTypes": []
      },
      {
        "name": "keySet_columns",
        "parameterTypes": []
      },
      {
        "name": "keySet_components",
        "parameterTypes": []
      },
      {
        "name": "keySet_computes",
        "parameterTypes": []
      },
      {
        "name": "keySet_filters",
        "parameterTypes": []
      },
      {
        "name": "keySet_indexes",
        "parameterTypes": []
      },
      {
        "name": "keySet_relations",
        "parameterTypes": []
      },
      {
        "name": "keySet_uniqueKeys",
        "parameterTypes": []
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "outputJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      },
      {
        "name": "setAliases",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setCheckVersionWhenLazyLoad",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setClassName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setColumns",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setComment",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setComponents",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setComputes",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setCreateTimeProp",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setCreaterProp",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDbCatalog",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDbPkName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDbSchema",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDeleteFlagProp",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDeleteVersionProp",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDimensionalType",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDisplayName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setEntityModeEnabled",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setFilters",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setIndexes",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setKvTable",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setLabelProp",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setMaxBatchLoadSize",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setNoPrimaryKey",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setNotGenCode",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setPersistDriver",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setQuerySpace",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setReadonly",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setRegisterShortName",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setRelations",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setShardProp",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setSqlText",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setStateProp",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setTableName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setTableView",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setTagSet",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setTenantProp",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setUniqueKeys",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setUpdateTimeProp",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setUpdaterProp",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setUseGlobalCache",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setUseLogicalDelete",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setUseRevision",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setUseShard",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setUseTenant",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setUseWorkflow",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setVersionProp",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.orm.model._gen._OrmEntityModel"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "copyTo",
        "parameterTypes": [
          "io.nop.orm.model.OrmIndexColumnModel"
        ]
      },
      {
        "name": "freeze",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getDesc",
        "parameterTypes": []
      },
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "outputJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      },
      {
        "name": "setDesc",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.orm.model._gen._OrmIndexColumnModel"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "addColumn",
        "parameterTypes": [
          "io.nop.orm.model.OrmIndexColumnModel"
        ]
      },
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "copyTo",
        "parameterTypes": [
          "io.nop.orm.model.OrmIndexModel"
        ]
      },
      {
        "name": "freeze",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getColumn",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getColumns",
        "parameterTypes": []
      },
      {
        "name": "getComment",
        "parameterTypes": []
      },
      {
        "name": "getDisplayName",
        "parameterTypes": []
      },
      {
        "name": "getIndexType",
        "parameterTypes": []
      },
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "getTagSet",
        "parameterTypes": []
      },
      {
        "name": "getUnique",
        "parameterTypes": []
      },
      {
        "name": "hasColumn",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "hasColumns",
        "parameterTypes": []
      },
      {
        "name": "keySet_columns",
        "parameterTypes": []
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "outputJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      },
      {
        "name": "setColumns",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setComment",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDisplayName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setIndexType",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setTagSet",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setUnique",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      }
    ],
    "name": "io.nop.orm.model._gen._OrmIndexModel"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "copyTo",
        "parameterTypes": [
          "io.nop.orm.model.OrmJoinOnModel"
        ]
      },
      {
        "name": "freeze",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getLeftProp",
        "parameterTypes": []
      },
      {
        "name": "getLeftValue",
        "parameterTypes": []
      },
      {
        "name": "getRightProp",
        "parameterTypes": []
      },
      {
        "name": "getRightValue",
        "parameterTypes": []
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "outputJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      },
      {
        "name": "setLeftProp",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setLeftValue",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "setRightProp",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setRightValue",
        "parameterTypes": [
          "java.lang.Object"
        ]
      }
    ],
    "name": "io.nop.orm.model._gen._OrmJoinOnModel"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "addDict",
        "parameterTypes": [
          "io.nop.api.core.beans.DictBean"
        ]
      },
      {
        "name": "addDomain",
        "parameterTypes": [
          "io.nop.orm.model.OrmDomainModel"
        ]
      },
      {
        "name": "addEntity",
        "parameterTypes": [
          "io.nop.orm.model.OrmEntityModel"
        ]
      },
      {
        "name": "addPackage",
        "parameterTypes": [
          "io.nop.orm.model.OrmPackageModel"
        ]
      },
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "copyTo",
        "parameterTypes": [
          "io.nop.orm.model.OrmModel"
        ]
      },
      {
        "name": "freeze",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getDescription",
        "parameterTypes": []
      },
      {
        "name": "getDict",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getDicts",
        "parameterTypes": []
      },
      {
        "name": "getDisplayName",
        "parameterTypes": []
      },
      {
        "name": "getDomain",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getDomains",
        "parameterTypes": []
      },
      {
        "name": "getEntities",
        "parameterTypes": []
      },
      {
        "name": "getEntity",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getPackage",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getPackages",
        "parameterTypes": []
      },
      {
        "name": "getVersion",
        "parameterTypes": []
      },
      {
        "name": "hasDict",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "hasDicts",
        "parameterTypes": []
      },
      {
        "name": "hasDomain",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "hasDomains",
        "parameterTypes": []
      },
      {
        "name": "hasEntities",
        "parameterTypes": []
      },
      {
        "name": "hasEntity",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "hasPackage",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "hasPackages",
        "parameterTypes": []
      },
      {
        "name": "keySet_dicts",
        "parameterTypes": []
      },
      {
        "name": "keySet_domains",
        "parameterTypes": []
      },
      {
        "name": "keySet_entities",
        "parameterTypes": []
      },
      {
        "name": "keySet_packages",
        "parameterTypes": []
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "outputJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      },
      {
        "name": "setDescription",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDicts",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setDisplayName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDomains",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setEntities",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setPackages",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setVersion",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.orm.model._gen._OrmModel"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "addField",
        "parameterTypes": [
          "io.nop.api.core.beans.query.OrderFieldBean"
        ]
      },
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "copyTo",
        "parameterTypes": [
          "io.nop.orm.model.OrmRefSetModel"
        ]
      },
      {
        "name": "freeze",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getField",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getKeyProp",
        "parameterTypes": []
      },
      {
        "name": "getSort",
        "parameterTypes": []
      },
      {
        "name": "hasField",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "hasSort",
        "parameterTypes": []
      },
      {
        "name": "keySet_sort",
        "parameterTypes": []
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "outputJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      },
      {
        "name": "setKeyProp",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setSort",
        "parameterTypes": [
          "java.util.List"
        ]
      }
    ],
    "name": "io.nop.orm.model._gen._OrmRefSetModel"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "copyTo",
        "parameterTypes": [
          "io.nop.orm.model.OrmReferenceModel"
        ]
      },
      {
        "name": "freeze",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getComment",
        "parameterTypes": []
      },
      {
        "name": "getDisplayName",
        "parameterTypes": []
      },
      {
        "name": "getJoin",
        "parameterTypes": []
      },
      {
        "name": "getMaxBatchLoadSize",
        "parameterTypes": []
      },
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "getPersistDriver",
        "parameterTypes": []
      },
      {
        "name": "getRefDisplayName",
        "parameterTypes": []
      },
      {
        "name": "getRefEntityName",
        "parameterTypes": []
      },
      {
        "name": "getRefPropName",
        "parameterTypes": []
      },
      {
        "name": "getTagSet",
        "parameterTypes": []
      },
      {
        "name": "getType",
        "parameterTypes": []
      },
      {
        "name": "isAutoCascadeDelete",
        "parameterTypes": []
      },
      {
        "name": "isCascadeDelete",
        "parameterTypes": []
      },
      {
        "name": "isEmbedded",
        "parameterTypes": []
      },
      {
        "name": "isNotGenCode",
        "parameterTypes": []
      },
      {
        "name": "isQueryable",
        "parameterTypes": []
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "outputJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      },
      {
        "name": "setAutoCascadeDelete",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setCascadeDelete",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setComment",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDisplayName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setEmbedded",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setJoin",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setMaxBatchLoadSize",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setNotGenCode",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setPersistDriver",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setQueryable",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setRefDisplayName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setRefEntityName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setRefPropName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setTagSet",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setType",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.orm.model._gen._OrmReferenceModel"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "addField",
        "parameterTypes": [
          "io.nop.api.core.beans.query.OrderFieldBean"
        ]
      },
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "copyTo",
        "parameterTypes": [
          "io.nop.orm.model.OrmToManyReferenceModel"
        ]
      },
      {
        "name": "freeze",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getField",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getKeyProp",
        "parameterTypes": []
      },
      {
        "name": "getMaxSize",
        "parameterTypes": []
      },
      {
        "name": "getSort",
        "parameterTypes": []
      },
      {
        "name": "hasField",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "hasSort",
        "parameterTypes": []
      },
      {
        "name": "isUseGlobalCache",
        "parameterTypes": []
      },
      {
        "name": "keySet_sort",
        "parameterTypes": []
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "outputJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      },
      {
        "name": "setKeyProp",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setMaxSize",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setSort",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setUseGlobalCache",
        "parameterTypes": [
          "boolean"
        ]
      }
    ],
    "name": "io.nop.orm.model._gen._OrmToManyReferenceModel"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "copyTo",
        "parameterTypes": [
          "io.nop.orm.model.OrmToOneReferenceModel"
        ]
      },
      {
        "name": "freeze",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getConstraint",
        "parameterTypes": []
      },
      {
        "name": "getRefSet",
        "parameterTypes": []
      },
      {
        "name": "isIgnoreDepends",
        "parameterTypes": []
      },
      {
        "name": "isReverseDepends",
        "parameterTypes": []
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "outputJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      },
      {
        "name": "setConstraint",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setIgnoreDepends",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setRefSet",
        "parameterTypes": [
          "io.nop.orm.model.OrmRefSetModel"
        ]
      },
      {
        "name": "setReverseDepends",
        "parameterTypes": [
          "boolean"
        ]
      }
    ],
    "name": "io.nop.orm.model._gen._OrmToOneReferenceModel"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "copyTo",
        "parameterTypes": [
          "io.nop.orm.model.OrmUniqueKeyModel"
        ]
      },
      {
        "name": "freeze",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getColumns",
        "parameterTypes": []
      },
      {
        "name": "getComment",
        "parameterTypes": []
      },
      {
        "name": "getConstraint",
        "parameterTypes": []
      },
      {
        "name": "getDisplayName",
        "parameterTypes": []
      },
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "getTagSet",
        "parameterTypes": []
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "outputJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      },
      {
        "name": "setColumns",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setComment",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setConstraint",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDisplayName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setTagSet",
        "parameterTypes": [
          "java.util.Set"
        ]
      }
    ],
    "name": "io.nop.orm.model._gen._OrmUniqueKeyModel"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [
      {
        "name": "LOG"
      }
    ],
    "methods": [
      {
        "name": "addJoin",
        "parameterTypes": [
          "io.nop.orm.model.OrmReferenceModel",
          "io.nop.core.lang.xml.XNode",
          "boolean"
        ]
      },
      {
        "name": "addRelation",
        "parameterTypes": [
          "io.nop.orm.pdm.PdmModelParser$RefInfo"
        ]
      },
      {
        "name": "codeToPropName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "collectRefInfo",
        "parameterTypes": [
          "io.nop.core.lang.xml.XNode"
        ]
      },
      {
        "name": "doParseResource",
        "parameterTypes": [
          "io.nop.core.resource.IResource"
        ]
      },
      {
        "name": "getChildrenPropName",
        "parameterTypes": [
          "io.nop.orm.model.OrmEntityModel",
          "boolean"
        ]
      },
      {
        "name": "getColumnDomain",
        "parameterTypes": [
          "io.nop.core.lang.xml.XNode"
        ]
      },
      {
        "name": "getDialect",
        "parameterTypes": [
          "io.nop.core.lang.xml.XNode"
        ]
      },
      {
        "name": "getJoinColumn",
        "parameterTypes": [
          "io.nop.core.lang.xml.XNode",
          "io.nop.orm.model.OrmReferenceModel"
        ]
      },
      {
        "name": "getRefColDisplayName",
        "parameterTypes": [
          "io.nop.orm.model.OrmColumnModel"
        ]
      },
      {
        "name": "getRefColPropName",
        "parameterTypes": [
          "io.nop.orm.model.OrmColumnModel",
          "io.nop.orm.model.OrmReferenceModel"
        ]
      },
      {
        "name": "getReferenceTable",
        "parameterTypes": [
          "io.nop.core.lang.xml.XNode"
        ]
      },
      {
        "name": "getShortcutTable",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getTarget",
        "parameterTypes": [
          "io.nop.core.lang.xml.XNode"
        ]
      },
      {
        "name": "isAllPrimaryCol",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "matchTargetType",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "normalizeRefInfo",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "parseAllReferences",
        "parameterTypes": [
          "io.nop.core.lang.xml.XNode"
        ]
      },
      {
        "name": "parseColumnTag",
        "parameterTypes": [
          "io.nop.orm.model.OrmColumnModel",
          "io.nop.orm.model.OrmEntityModel"
        ]
      },
      {
        "name": "parseColumns",
        "parameterTypes": [
          "io.nop.core.lang.xml.XNode",
          "io.nop.orm.model.OrmEntityModel"
        ]
      },
      {
        "name": "parseDataType",
        "parameterTypes": [
          "io.nop.core.lang.xml.XNode"
        ]
      },
      {
        "name": "parseDimension",
        "parameterTypes": [
          "io.nop.core.lang.xml.XNode",
          "io.nop.orm.model.OrmEntityModel"
        ]
      },
      {
        "name": "parseDomains",
        "parameterTypes": [
          "io.nop.core.lang.xml.XNode"
        ]
      },
      {
        "name": "parseElement",
        "parameterTypes": [
          "io.nop.core.lang.xml.XNode"
        ]
      },
      {
        "name": "parseIndex",
        "parameterTypes": [
          "io.nop.core.lang.xml.XNode",
          "io.nop.orm.model.OrmEntityModel"
        ]
      },
      {
        "name": "parseIndexes",
        "parameterTypes": [
          "io.nop.core.lang.xml.XNode",
          "io.nop.orm.model.OrmEntityModel"
        ]
      },
      {
        "name": "parseKey",
        "parameterTypes": [
          "io.nop.core.lang.xml.XNode",
          "io.nop.orm.model.OrmEntityModel",
          "java.lang.String"
        ]
      },
      {
        "name": "parseKeys",
        "parameterTypes": [
          "io.nop.core.lang.xml.XNode",
          "io.nop.orm.model.OrmEntityModel"
        ]
      },
      {
        "name": "parsePackage",
        "parameterTypes": [
          "io.nop.core.lang.xml.XNode",
          "io.nop.orm.model.OrmPackageModel"
        ]
      },
      {
        "name": "parsePackages",
        "parameterTypes": [
          "io.nop.core.lang.xml.XNode",
          "io.nop.orm.model.OrmPackageModel"
        ]
      },
      {
        "name": "parseRefInfo",
        "parameterTypes": [
          "io.nop.orm.model.OrmReferenceModel",
          "io.nop.core.lang.xml.XNode"
        ]
      },
      {
        "name": "parseReferences",
        "parameterTypes": [
          "io.nop.core.lang.xml.XNode"
        ]
      },
      {
        "name": "parseRelationDesc",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "parseShortcut",
        "parameterTypes": [
          "io.nop.core.lang.xml.XNode",
          "io.nop.orm.pdm.PdmElementType"
        ]
      },
      {
        "name": "parseTable",
        "parameterTypes": [
          "io.nop.core.lang.xml.XNode",
          "io.nop.orm.model.OrmPackageModel"
        ]
      },
      {
        "name": "parseTables",
        "parameterTypes": [
          "io.nop.core.lang.xml.XNode",
          "io.nop.orm.model.OrmPackageModel"
        ]
      },
      {
        "name": "parseView",
        "parameterTypes": [
          "io.nop.core.lang.xml.XNode",
          "io.nop.orm.model.OrmPackageModel"
        ]
      },
      {
        "name": "parseViewReference",
        "parameterTypes": [
          "io.nop.core.lang.xml.XNode"
        ]
      },
      {
        "name": "parseViewReferences",
        "parameterTypes": [
          "io.nop.core.lang.xml.XNode"
        ]
      },
      {
        "name": "parseViews",
        "parameterTypes": [
          "io.nop.core.lang.xml.XNode",
          "io.nop.orm.model.OrmPackageModel"
        ]
      },
      {
        "name": "removeViewsNoPk",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.orm.pdm.PdmModelParser"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getNamespace",
        "parameterTypes": []
      },
      {
        "name": "getResource",
        "parameterTypes": [
          "java.lang.String",
          "io.nop.core.resource.IResourceStore"
        ]
      },
      {
        "name": "register",
        "parameterTypes": []
      },
      {
        "name": "unregister",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.orm.resource.DaoResourceNamespaceHandler"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [
      {
        "name": "LOG"
      }
    ],
    "methods": [
      {
        "name": "buildQueryBean",
        "parameterTypes": [
          "java.lang.String",
          "io.nop.core.context.IEvalContext"
        ]
      },
      {
        "name": "buildSql",
        "parameterTypes": [
          "java.lang.String",
          "io.nop.core.context.IEvalContext"
        ]
      },
      {
        "name": "checkAllLibValid",
        "parameterTypes": []
      },
      {
        "name": "checkAuth",
        "parameterTypes": [
          "io.nop.orm.sql_lib.SqlItemModel",
          "io.nop.core.context.IEvalContext"
        ]
      },
      {
        "name": "checkLibValid",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "checkProxyMethods",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Class"
        ]
      },
      {
        "name": "createProxy",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "delayInit",
        "parameterTypes": []
      },
      {
        "name": "destroy",
        "parameterTypes": []
      },
      {
        "name": "doInvoke",
        "parameterTypes": [
          "io.nop.orm.sql_lib.SqlItemModel",
          "io.nop.api.core.beans.LongRangeBean",
          "io.nop.core.context.IEvalContext"
        ]
      },
      {
        "name": "getSqlItemModel",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getSqlItemModel",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "init",
        "parameterTypes": []
      },
      {
        "name": "invoke",
        "parameterTypes": [
          "java.lang.String",
          "io.nop.api.core.beans.LongRangeBean",
          "io.nop.core.context.IEvalContext"
        ]
      },
      {
        "name": "invoke",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String",
          "io.nop.api.core.beans.LongRangeBean",
          "io.nop.core.context.IEvalContext"
        ]
      },
      {
        "name": "setDaoProvider",
        "parameterTypes": [
          "io.nop.dao.api.IDaoProvider"
        ]
      },
      {
        "name": "setJdbcTemplate",
        "parameterTypes": [
          "io.nop.dao.jdbc.IJdbcTemplate"
        ]
      },
      {
        "name": "setOrmTemplate",
        "parameterTypes": [
          "io.nop.orm.IOrmTemplate"
        ]
      }
    ],
    "name": "io.nop.orm.sql_lib.SqlLibManager"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "checkDictSql",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "destroy",
        "parameterTypes": []
      },
      {
        "name": "existsDict",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "init",
        "parameterTypes": []
      },
      {
        "name": "loadDict",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String",
          "io.nop.core.context.IEvalContext"
        ]
      },
      {
        "name": "setSqlLibManager",
        "parameterTypes": [
          "io.nop.orm.sql_lib.ISqlLibManager"
        ]
      },
      {
        "name": "supportDict",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.orm.sql_lib.dict.SqlLibDictLoader"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getBigIntValue",
        "parameterTypes": []
      },
      {
        "name": "getBooleanValue",
        "parameterTypes": []
      },
      {
        "name": "getByteValue",
        "parameterTypes": []
      },
      {
        "name": "getCharValue",
        "parameterTypes": []
      },
      {
        "name": "getDateTimeValue",
        "parameterTypes": []
      },
      {
        "name": "getDateValue",
        "parameterTypes": []
      },
      {
        "name": "getDecimalScale",
        "parameterTypes": []
      },
      {
        "name": "getDecimalValue",
        "parameterTypes": []
      },
      {
        "name": "getDoubleValue",
        "parameterTypes": []
      },
      {
        "name": "getFloatValue",
        "parameterTypes": []
      },
      {
        "name": "getIntValue",
        "parameterTypes": []
      },
      {
        "name": "getLongValue",
        "parameterTypes": []
      },
      {
        "name": "getNumberValue",
        "parameterTypes": []
      },
      {
        "name": "getShortValue",
        "parameterTypes": []
      },
      {
        "name": "getStringValue",
        "parameterTypes": []
      },
      {
        "name": "getTimestampValue",
        "parameterTypes": []
      },
      {
        "name": "getUnknownTypedValue",
        "parameterTypes": [
          "io.nop.commons.type.StdDataType"
        ]
      },
      {
        "name": "setBigIntValue",
        "parameterTypes": [
          "java.math.BigInteger"
        ]
      },
      {
        "name": "setBooleanValue",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setByteValue",
        "parameterTypes": [
          "java.lang.Byte"
        ]
      },
      {
        "name": "setCharValue",
        "parameterTypes": [
          "java.lang.Character"
        ]
      },
      {
        "name": "setDateTimeValue",
        "parameterTypes": [
          "java.time.LocalDateTime"
        ]
      },
      {
        "name": "setDateValue",
        "parameterTypes": [
          "java.time.LocalDate"
        ]
      },
      {
        "name": "setDecimalScale",
        "parameterTypes": [
          "java.lang.Byte"
        ]
      },
      {
        "name": "setDecimalValue",
        "parameterTypes": [
          "java.math.BigDecimal"
        ]
      },
      {
        "name": "setDoubleValue",
        "parameterTypes": [
          "java.lang.Double"
        ]
      },
      {
        "name": "setFloatValue",
        "parameterTypes": [
          "java.lang.Float"
        ]
      },
      {
        "name": "setIntValue",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setLongValue",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "setNullValue",
        "parameterTypes": []
      },
      {
        "name": "setShortValue",
        "parameterTypes": [
          "java.lang.Short"
        ]
      },
      {
        "name": "setStringValue",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setTimestampValue",
        "parameterTypes": [
          "java.sql.Timestamp"
        ]
      },
      {
        "name": "setUnknownTypedValue",
        "parameterTypes": [
          "io.nop.commons.type.StdDataType",
          "java.lang.Object"
        ]
      }
    ],
    "name": "io.nop.orm.support.AbstractOrmKeyValueTable"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "internalClearRefs",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "internalGetAliasValue",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "internalGetRefEntity",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "internalGetValue",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "internalSetAliasValue",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object"
        ]
      },
      {
        "name": "internalSetRefEntity",
        "parameterTypes": [
          "java.lang.String",
          "io.nop.orm.IOrmEntity",
          "java.lang.Runnable"
        ]
      },
      {
        "name": "internalSetReverseRefEntity",
        "parameterTypes": [
          "java.lang.String",
          "io.nop.orm.IOrmEntity",
          "java.lang.Runnable"
        ]
      },
      {
        "name": "internalSetValue",
        "parameterTypes": [
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "nopRevChildChangePropId",
        "parameterTypes": []
      },
      {
        "name": "requireValues",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.orm.support.DynamicOrmEntity"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "buildCompositeId",
        "parameterTypes": [
          "java.util.List",
          "[I"
        ]
      },
      {
        "name": "buildSimpleId",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "checkPropIdRange",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "checkReadonly",
        "parameterTypes": []
      },
      {
        "name": "clearId",
        "parameterTypes": []
      },
      {
        "name": "defaultGetProp",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "defaultSetProp",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object"
        ]
      },
      {
        "name": "forcePropLoaded",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "internalClearRefs",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "internalNotifyPkWatcher",
        "parameterTypes": []
      },
      {
        "name": "markPropAccessed",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "markPropDirty",
        "parameterTypes": [
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "newBitSet",
        "parameterTypes": []
      },
      {
        "name": "newError",
        "parameterTypes": [
          "io.nop.api.core.exceptions.ErrorCode"
        ]
      },
      {
        "name": "newTypeConversionError",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "newValuesMap",
        "parameterTypes": []
      },
      {
        "name": "nopRevChildChangePropId",
        "parameterTypes": []
      },
      {
        "name": "onInitProp",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "onPropGet",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "onPropSet",
        "parameterTypes": [
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "requireEnhancer",
        "parameterTypes": []
      },
      {
        "name": "requireEntityModel",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.orm.support.OrmEntity"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getRefManyPropInfo",
        "parameterTypes": [
          "io.nop.orm.model.IEntityRelationModel"
        ]
      },
      {
        "name": "getRefMappingInfo",
        "parameterTypes": [
          "io.nop.orm.model.IEntityRelationModel"
        ]
      },
      {
        "name": "getRefOnePropInfo",
        "parameterTypes": [
          "io.nop.orm.model.IEntityRelationModel"
        ]
      }
    ],
    "name": "io.nop.orm.support.OrmManyToManyHelper"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getBizModuleId1",
        "parameterTypes": []
      },
      {
        "name": "getBizModuleId2",
        "parameterTypes": []
      },
      {
        "name": "getJoinPropName1",
        "parameterTypes": []
      },
      {
        "name": "getJoinPropName2",
        "parameterTypes": []
      },
      {
        "name": "getLabelPropOfRefEntity1",
        "parameterTypes": []
      },
      {
        "name": "getLabelPropOfRefEntity2",
        "parameterTypes": []
      },
      {
        "name": "getMappingEntityName",
        "parameterTypes": []
      },
      {
        "name": "getMappingPropDisplayName1",
        "parameterTypes": []
      },
      {
        "name": "getMappingPropDisplayName2",
        "parameterTypes": []
      },
      {
        "name": "getMappingPropEnDisplayName1",
        "parameterTypes": []
      },
      {
        "name": "getMappingPropEnDisplayName2",
        "parameterTypes": []
      },
      {
        "name": "getMappingPropInfo",
        "parameterTypes": [
          "io.nop.orm.model.IEntityRelationModel"
        ]
      },
      {
        "name": "getMappingPropInfo1",
        "parameterTypes": []
      },
      {
        "name": "getMappingPropInfo2",
        "parameterTypes": []
      },
      {
        "name": "getMappingPropName1",
        "parameterTypes": []
      },
      {
        "name": "getMappingPropName1_ids",
        "parameterTypes": []
      },
      {
        "name": "getMappingPropName1_label",
        "parameterTypes": []
      },
      {
        "name": "getMappingPropName2",
        "parameterTypes": []
      },
      {
        "name": "getMappingPropName2_ids",
        "parameterTypes": []
      },
      {
        "name": "getMappingPropName2_label",
        "parameterTypes": []
      },
      {
        "name": "getMappingTable",
        "parameterTypes": []
      },
      {
        "name": "getMappingTableName",
        "parameterTypes": []
      },
      {
        "name": "getRefBizObjName1",
        "parameterTypes": []
      },
      {
        "name": "getRefBizObjName2",
        "parameterTypes": []
      },
      {
        "name": "getRefEntityName1",
        "parameterTypes": []
      },
      {
        "name": "getRefEntityName2",
        "parameterTypes": []
      },
      {
        "name": "getRefProp1",
        "parameterTypes": []
      },
      {
        "name": "getRefProp2",
        "parameterTypes": []
      },
      {
        "name": "getReverseRefPropName1",
        "parameterTypes": []
      },
      {
        "name": "getReverseRefPropName2",
        "parameterTypes": []
      },
      {
        "name": "isManyToMany",
        "parameterTypes": []
      },
      {
        "name": "isMappingTable",
        "parameterTypes": [
          "io.nop.orm.model.IEntityModel"
        ]
      },
      {
        "name": "isOneToOne",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.orm.support.OrmMappingTableMeta"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "onAfterCompletion",
        "parameterTypes": [
          "io.nop.dao.txn.ITransaction",
          "io.nop.dao.txn.ITransactionListener$CompleteStatus",
          "java.lang.Throwable"
        ]
      },
      {
        "name": "onBeforeCommit",
        "parameterTypes": [
          "io.nop.dao.txn.ITransaction"
        ]
      },
      {
        "name": "setOrmTemplate",
        "parameterTypes": [
          "io.nop.orm.IOrmTemplate"
        ]
      }
    ],
    "name": "io.nop.orm.txn.OrmTransactionListener"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.orm.utils.OrmDaoHelper"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "invoke",
        "parameterTypes": [
          "java.util.function.Function",
          "java.lang.Object"
        ]
      },
      {
        "name": "invokeAsync",
        "parameterTypes": [
          "java.util.function.Function",
          "java.lang.Object"
        ]
      },
      {
        "name": "setOrmTemplate",
        "parameterTypes": [
          "io.nop.orm.IOrmTemplate"
        ]
      }
    ],
    "name": "io.nop.orm.utils.SingleSessionFunctionInvoker"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.record.initializer.RecordCoreInitializer"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.record.mapping.RecordMappingManagerImpl"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.record.model.RecordAggregateFieldMeta"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.record.model.RecordDefinitions"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.record.model.RecordFieldMeta"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.record.model.RecordFileBodyMeta"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.record.model.RecordFileMeta"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.record.model.RecordObjectMeta"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.record.model.RecordSimpleFieldMeta"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.record.model.RecordTypeMeta"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "copyTo",
        "parameterTypes": [
          "io.nop.record.model.RecordAggregateFieldMeta"
        ]
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "outputJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      }
    ],
    "name": "io.nop.record.model._gen._RecordAggregateFieldMeta"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "copyTo",
        "parameterTypes": [
          "io.nop.record.model.RecordDefinitions"
        ]
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "outputJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      }
    ],
    "name": "io.nop.record.model._gen._RecordDefinitions"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "copyTo",
        "parameterTypes": [
          "io.nop.record.model.RecordFieldMeta"
        ]
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "outputJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      }
    ],
    "name": "io.nop.record.model._gen._RecordFieldMeta"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "copyTo",
        "parameterTypes": [
          "io.nop.record.model.RecordFileBodyMeta"
        ]
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "outputJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      }
    ],
    "name": "io.nop.record.model._gen._RecordFileBodyMeta"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "copyTo",
        "parameterTypes": [
          "io.nop.record.model.RecordFileMeta"
        ]
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "outputJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      }
    ],
    "name": "io.nop.record.model._gen._RecordFileMeta"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "copyTo",
        "parameterTypes": [
          "io.nop.record.model.RecordObjectMeta"
        ]
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "outputJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      }
    ],
    "name": "io.nop.record.model._gen._RecordObjectMeta"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "copyTo",
        "parameterTypes": [
          "io.nop.record.model.RecordSimpleFieldMeta"
        ]
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "outputJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      }
    ],
    "name": "io.nop.record.model._gen._RecordSimpleFieldMeta"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "copyTo",
        "parameterTypes": [
          "io.nop.record.model.RecordTypeMeta"
        ]
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "outputJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      }
    ],
    "name": "io.nop.record.model._gen._RecordTypeMeta"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.record.resource.RecordAggregateState"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.record.template.RecordTemplateManager"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.record.util.RecordModelParseHelper"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowWrite": true,
        "name": "_instance"
      }
    ],
    "methods": [
      {
        "name": "instance",
        "parameterTypes": []
      },
      {
        "name": "loadModelFromResource",
        "parameterTypes": [
          "io.nop.core.resource.IResource"
        ]
      },
      {
        "name": "parseFromVirtualPath",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.report.core.build.XptModelLoader"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.report.core.engine.IXptRuntime"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "buildXptModelFromImpModel",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getRendererForExcel",
        "parameterTypes": [
          "io.nop.excel.model.ExcelWorkbook",
          "java.lang.String"
        ]
      },
      {
        "name": "getRendererForXptModel",
        "parameterTypes": [
          "io.nop.excel.model.ExcelWorkbook",
          "java.lang.String"
        ]
      },
      {
        "name": "getXptModel",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setRenderers",
        "parameterTypes": [
          "java.util.Map"
        ]
      }
    ],
    "name": "io.nop.report.core.engine.ReportEngine"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "compileExcelFormula",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getCompiledExcelFormula",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.report.core.engine.XptRuntime"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [
      {
        "name": "LOG"
      }
    ],
    "methods": [
      {
        "name": "buildRenderer",
        "parameterTypes": [
          "io.nop.excel.model.ExcelWorkbook",
          "io.nop.ooxml.xlsx.output.IExcelSheetGenerator"
        ]
      }
    ],
    "name": "io.nop.report.core.engine.renderer.HtmlReportRendererFactory"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.report.core.engine.renderer.SimpleHtmlReportRendererFactory"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "buildRenderer",
        "parameterTypes": [
          "io.nop.excel.model.ExcelWorkbook",
          "io.nop.ooxml.xlsx.output.IExcelSheetGenerator"
        ]
      }
    ],
    "name": "io.nop.report.core.engine.renderer.XlsxReportRendererFactory"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "ACCSUM",
        "parameterTypes": [
          "io.nop.core.lang.eval.IEvalScope",
          "io.nop.report.core.model.ExpandedCellSet",
          "io.nop.report.core.model.ExpandedCellSet"
        ]
      },
      {
        "name": "AVERAGE",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "COUNT",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "COUNTA",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "MAX",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "MIN",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "NVL",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.Object"
        ]
      },
      {
        "name": "PRODUCT",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "PROPORTION",
        "parameterTypes": [
          "io.nop.core.lang.eval.IEvalScope",
          "io.nop.report.core.model.ExpandedCellSet",
          "io.nop.report.core.model.ExpandedCellSet"
        ]
      },
      {
        "name": "RANK",
        "parameterTypes": [
          "io.nop.core.lang.eval.IEvalScope",
          "io.nop.report.core.model.ExpandedCellSet",
          "io.nop.report.core.model.ExpandedCellSet"
        ]
      },
      {
        "name": "SUM",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "computeRank",
        "parameterTypes": [
          "io.nop.report.core.model.ExpandedCellSet"
        ]
      }
    ],
    "name": "io.nop.report.core.functions.ReportFunctions"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.report.core.initialize.ReportCoreInitializer"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.report.core.initialize.ReportImpModelCoreInitializer"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "addColChild",
        "parameterTypes": [
          "io.nop.report.core.model.ExpandedCell"
        ]
      },
      {
        "name": "addColChildren",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "addRowChild",
        "parameterTypes": [
          "io.nop.report.core.model.ExpandedCell"
        ]
      },
      {
        "name": "addRowChildren",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "addToList",
        "parameterTypes": [
          "java.util.Map",
          "io.nop.report.core.model.ExpandedCell"
        ]
      },
      {
        "name": "changeColSpan",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "changeRowSpan",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "childCell",
        "parameterTypes": [
          "java.lang.String",
          "io.nop.report.core.engine.IXptRuntime"
        ]
      },
      {
        "name": "childSet",
        "parameterTypes": [
          "java.lang.String",
          "io.nop.report.core.engine.IXptRuntime"
        ]
      },
      {
        "name": "childValue",
        "parameterTypes": [
          "java.lang.String",
          "io.nop.report.core.engine.IXptRuntime"
        ]
      },
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "colChildSet",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "cv",
        "parameterTypes": [
          "io.nop.core.lang.eval.IEvalScope",
          "java.lang.String"
        ]
      },
      {
        "name": "getChildSet",
        "parameterTypes": [
          "java.lang.String",
          "io.nop.report.core.engine.IXptRuntime"
        ]
      },
      {
        "name": "getCol",
        "parameterTypes": []
      },
      {
        "name": "getColChildren",
        "parameterTypes": []
      },
      {
        "name": "getColClosest",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getColDescendants",
        "parameterTypes": []
      },
      {
        "name": "getColIndex",
        "parameterTypes": []
      },
      {
        "name": "getColParent",
        "parameterTypes": []
      },
      {
        "name": "getColParentExpandIndex",
        "parameterTypes": []
      },
      {
        "name": "getColRoot",
        "parameterTypes": []
      },
      {
        "name": "getComment",
        "parameterTypes": []
      },
      {
        "name": "getComputed",
        "parameterTypes": [
          "java.lang.String",
          "java.util.function.Function"
        ]
      },
      {
        "name": "getCp",
        "parameterTypes": []
      },
      {
        "name": "getCr",
        "parameterTypes": []
      },
      {
        "name": "getDown",
        "parameterTypes": []
      },
      {
        "name": "getDs",
        "parameterTypes": []
      },
      {
        "name": "getDsName",
        "parameterTypes": []
      },
      {
        "name": "getEi",
        "parameterTypes": []
      },
      {
        "name": "getEv",
        "parameterTypes": []
      },
      {
        "name": "getExpandField",
        "parameterTypes": [
          "io.nop.core.lang.eval.IEvalScope",
          "java.lang.String"
        ]
      },
      {
        "name": "getExpandField",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getExpandIndex",
        "parameterTypes": []
      },
      {
        "name": "getExpandKey",
        "parameterTypes": []
      },
      {
        "name": "getExpandType",
        "parameterTypes": []
      },
      {
        "name": "getExpandValue",
        "parameterTypes": []
      },
      {
        "name": "getExpandableColParent",
        "parameterTypes": []
      },
      {
        "name": "getExpandableRowParent",
        "parameterTypes": []
      },
      {
        "name": "getExportValue",
        "parameterTypes": []
      },
      {
        "name": "getExtValue",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getFormattedValue",
        "parameterTypes": []
      },
      {
        "name": "getFormula",
        "parameterTypes": []
      },
      {
        "name": "getHeight",
        "parameterTypes": []
      },
      {
        "name": "getId",
        "parameterTypes": []
      },
      {
        "name": "getImage",
        "parameterTypes": []
      },
      {
        "name": "getLayerCoordinate",
        "parameterTypes": []
      },
      {
        "name": "getLinkUrl",
        "parameterTypes": []
      },
      {
        "name": "getMergeAcross",
        "parameterTypes": []
      },
      {
        "name": "getMergeDown",
        "parameterTypes": []
      },
      {
        "name": "getModel",
        "parameterTypes": []
      },
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "getNumberValue",
        "parameterTypes": []
      },
      {
        "name": "getRealCell",
        "parameterTypes": []
      },
      {
        "name": "getRight",
        "parameterTypes": []
      },
      {
        "name": "getRow",
        "parameterTypes": []
      },
      {
        "name": "getRowChildren",
        "parameterTypes": []
      },
      {
        "name": "getRowClosest",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getRowDescendants",
        "parameterTypes": []
      },
      {
        "name": "getRowIndex",
        "parameterTypes": []
      },
      {
        "name": "getRowParent",
        "parameterTypes": []
      },
      {
        "name": "getRowParentExpandIndex",
        "parameterTypes": []
      },
      {
        "name": "getRowRoot",
        "parameterTypes": []
      },
      {
        "name": "getRp",
        "parameterTypes": []
      },
      {
        "name": "getRr",
        "parameterTypes": []
      },
      {
        "name": "getSheet",
        "parameterTypes": []
      },
      {
        "name": "getStyleId",
        "parameterTypes": []
      },
      {
        "name": "getTable",
        "parameterTypes": []
      },
      {
        "name": "getValue",
        "parameterTypes": []
      },
      {
        "name": "getWidth",
        "parameterTypes": []
      },
      {
        "name": "hasColDescendant",
        "parameterTypes": []
      },
      {
        "name": "hasRowDescendant",
        "parameterTypes": []
      },
      {
        "name": "isColDescendantOf",
        "parameterTypes": [
          "io.nop.report.core.model.ExpandedCell"
        ]
      },
      {
        "name": "isColParentExpandable",
        "parameterTypes": []
      },
      {
        "name": "isEvaluated",
        "parameterTypes": []
      },
      {
        "name": "isExpandable",
        "parameterTypes": []
      },
      {
        "name": "isExpanded",
        "parameterTypes": []
      },
      {
        "name": "isExportFormattedValue",
        "parameterTypes": []
      },
      {
        "name": "isProxyCell",
        "parameterTypes": []
      },
      {
        "name": "isRemoved",
        "parameterTypes": []
      },
      {
        "name": "isRowDescendantOf",
        "parameterTypes": [
          "io.nop.report.core.model.ExpandedCell"
        ]
      },
      {
        "name": "isRowParentExpandable",
        "parameterTypes": []
      },
      {
        "name": "isStaticCell",
        "parameterTypes": []
      },
      {
        "name": "makeImage",
        "parameterTypes": []
      },
      {
        "name": "markEvaluated",
        "parameterTypes": []
      },
      {
        "name": "markProxy",
        "parameterTypes": []
      },
      {
        "name": "merge",
        "parameterTypes": [
          "java.util.Map",
          "java.util.Map"
        ]
      },
      {
        "name": "removeFromList",
        "parameterTypes": [
          "java.util.Map",
          "io.nop.report.core.model.ExpandedCell"
        ]
      },
      {
        "name": "removeRowChild",
        "parameterTypes": [
          "io.nop.report.core.model.ExpandedCell"
        ]
      },
      {
        "name": "rowChildSet",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setCol",
        "parameterTypes": [
          "io.nop.report.core.model.ExpandedCol"
        ]
      },
      {
        "name": "setColDescendants",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "setColParent",
        "parameterTypes": [
          "io.nop.report.core.model.ExpandedCell"
        ]
      },
      {
        "name": "setComment",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDown",
        "parameterTypes": [
          "io.nop.report.core.model.ExpandedCell"
        ]
      },
      {
        "name": "setEvaluated",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setExcelImage",
        "parameterTypes": [
          "io.nop.excel.model.ExcelImage"
        ]
      },
      {
        "name": "setExpandIndex",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setExpandValue",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "setExtValue",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object"
        ]
      },
      {
        "name": "setFormattedValue",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "setFormula",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setLinkUrl",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setMergeAcross",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setMergeDown",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setModel",
        "parameterTypes": [
          "io.nop.excel.model.XptCellModel"
        ]
      },
      {
        "name": "setRealCell",
        "parameterTypes": [
          "io.nop.report.core.model.ExpandedCell"
        ]
      },
      {
        "name": "setRemoved",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setRight",
        "parameterTypes": [
          "io.nop.report.core.model.ExpandedCell"
        ]
      },
      {
        "name": "setRow",
        "parameterTypes": [
          "io.nop.report.core.model.ExpandedRow"
        ]
      },
      {
        "name": "setRowDescendants",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "setRowParent",
        "parameterTypes": [
          "io.nop.report.core.model.ExpandedCell"
        ]
      },
      {
        "name": "setStyleId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setValue",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "toString",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.report.core.model.ExpandedCell"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.report.pdf.renderer.PdfReportRendererFactory"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "doParseText",
        "parameterTypes": [
          "io.nop.api.core.util.SourceLocation",
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.rpc.model.proto.ProtoFileParser"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "onExit",
        "parameterTypes": [
          "int"
        ]
      }
    ],
    "name": "io.nop.shell.ShellRunner"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.sys.dao.entity.NopSysCheckerRecord"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.sys.dao.entity.NopSysClusterLeader"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.sys.dao.entity.NopSysCodeRule"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.sys.dao.entity.NopSysDict"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.sys.dao.entity.NopSysDictOption"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.sys.dao.entity.NopSysExtField"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.sys.dao.entity.NopSysI18n"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.sys.dao.entity.NopSysLock"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.sys.dao.entity.NopSysNoticeTemplate"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.sys.dao.entity.NopSysSequence"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.sys.dao.entity.NopSysUserVariable"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.sys.dao.entity.NopSysVariable"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "newInstance",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.sys.dao.entity._gen._NopSysCheckerRecord"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "newInstance",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.sys.dao.entity._gen._NopSysClusterLeader"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "newInstance",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.sys.dao.entity._gen._NopSysCodeRule"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "newInstance",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.sys.dao.entity._gen._NopSysDict"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "newInstance",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.sys.dao.entity._gen._NopSysDictOption"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "newInstance",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.sys.dao.entity._gen._NopSysExtField"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "newInstance",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.sys.dao.entity._gen._NopSysI18n"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "newInstance",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.sys.dao.entity._gen._NopSysLock"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "newInstance",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.sys.dao.entity._gen._NopSysNoticeTemplate"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "newInstance",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.sys.dao.entity._gen._NopSysSequence"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "newInstance",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.sys.dao.entity._gen._NopSysUserVariable"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "newInstance",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.sys.dao.entity._gen._NopSysVariable"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.task.TaskStepReturn"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.task.builder.TransformCustomStepHelper"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getRateLimiter",
        "parameterTypes": [
          "io.nop.task.ITaskRuntime",
          "java.lang.String",
          "double",
          "boolean"
        ]
      },
      {
        "name": "getScheduledExecutor",
        "parameterTypes": []
      },
      {
        "name": "getTask",
        "parameterTypes": [
          "java.lang.String",
          "long"
        ]
      },
      {
        "name": "getTaskFlowModel",
        "parameterTypes": [
          "java.lang.String",
          "long"
        ]
      },
      {
        "name": "getTaskRuntime",
        "parameterTypes": [
          "java.lang.String",
          "io.nop.core.context.IServiceContext"
        ]
      },
      {
        "name": "getTaskStepLib",
        "parameterTypes": [
          "java.lang.String",
          "long"
        ]
      },
      {
        "name": "getThreadPoolExecutor",
        "parameterTypes": [
          "io.nop.api.core.ioc.IBeanProvider",
          "java.lang.String"
        ]
      },
      {
        "name": "loadTask",
        "parameterTypes": [
          "io.nop.core.resource.IResource"
        ]
      },
      {
        "name": "newTaskFlowBuilder",
        "parameterTypes": []
      },
      {
        "name": "newTaskRuntime",
        "parameterTypes": [
          "io.nop.task.ITask",
          "boolean",
          "io.nop.core.context.IServiceContext"
        ]
      },
      {
        "name": "newTaskStepLibBuilder",
        "parameterTypes": []
      },
      {
        "name": "prepareTaskRuntime",
        "parameterTypes": [
          "io.nop.task.impl.TaskRuntimeImpl",
          "io.nop.task.ITask"
        ]
      },
      {
        "name": "setNonPersistStateStore",
        "parameterTypes": [
          "io.nop.task.ITaskStateStore"
        ]
      },
      {
        "name": "setScheduledExecutor",
        "parameterTypes": [
          "io.nop.commons.concurrent.executor.IScheduledExecutor"
        ]
      },
      {
        "name": "setTaskStateStore",
        "parameterTypes": [
          "io.nop.task.ITaskStateStore"
        ]
      }
    ],
    "name": "io.nop.task.impl.TaskFlowManagerImpl"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.task.impl.TaskImpl"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.task.impl.TaskRuntimeImpl"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.task.impl.TaskStepRuntimeImpl"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getType",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.task.model.TaskExecutableModel"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getBeanContainerTemplate",
        "parameterTypes": [
          "io.nop.task.builder.ITaskBeanContainerBuilder"
        ]
      },
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "getOutputSchemaNode",
        "parameterTypes": []
      },
      {
        "name": "getTask",
        "parameterTypes": [
          "io.nop.task.builder.ITaskFlowBuilder"
        ]
      },
      {
        "name": "getTaskStepLib",
        "parameterTypes": [
          "io.nop.task.builder.ITaskStepLibBuilder"
        ]
      },
      {
        "name": "getType",
        "parameterTypes": []
      },
      {
        "name": "init",
        "parameterTypes": []
      },
      {
        "name": "setTask",
        "parameterTypes": [
          "io.nop.task.ITask"
        ]
      },
      {
        "name": "setTaskStepLib",
        "parameterTypes": [
          "io.nop.task.ITaskStepLib"
        ]
      }
    ],
    "name": "io.nop.task.model.TaskFlowModel"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getSchemaNode",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.task.model.TaskInputModel"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.task.model.TaskOutputModel"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "addWaitErrorStep",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "addWaitStep",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getFullStepType",
        "parameterTypes": []
      },
      {
        "name": "getGraphqlOperationType",
        "parameterTypes": []
      },
      {
        "name": "getInputSchemaNode",
        "parameterTypes": []
      },
      {
        "name": "getOutputsSchemaNode",
        "parameterTypes": []
      },
      {
        "name": "getType",
        "parameterTypes": []
      },
      {
        "name": "normalize",
        "parameterTypes": []
      },
      {
        "name": "outputJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      }
    ],
    "name": "io.nop.task.model.TaskStepModel"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.task.model.TaskStepsModel"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getType",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.task.model.XplTaskStepModel"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "addDecorator",
        "parameterTypes": [
          "io.nop.task.model.TaskDecoratorModel"
        ]
      },
      {
        "name": "addInput",
        "parameterTypes": [
          "io.nop.task.model.TaskInputModel"
        ]
      },
      {
        "name": "addOutput",
        "parameterTypes": [
          "io.nop.task.model.TaskOutputModel"
        ]
      },
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "copyTo",
        "parameterTypes": [
          "io.nop.task.model.TaskExecutableModel"
        ]
      },
      {
        "name": "freeze",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getCatch",
        "parameterTypes": []
      },
      {
        "name": "getCatchInternalException",
        "parameterTypes": []
      },
      {
        "name": "getDecorator",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getDecorators",
        "parameterTypes": []
      },
      {
        "name": "getDescription",
        "parameterTypes": []
      },
      {
        "name": "getDisplayName",
        "parameterTypes": []
      },
      {
        "name": "getExecutor",
        "parameterTypes": []
      },
      {
        "name": "getFinally",
        "parameterTypes": []
      },
      {
        "name": "getFlags",
        "parameterTypes": []
      },
      {
        "name": "getInput",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getInputs",
        "parameterTypes": []
      },
      {
        "name": "getOnEnter",
        "parameterTypes": []
      },
      {
        "name": "getOnReload",
        "parameterTypes": []
      },
      {
        "name": "getOutput",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getOutputs",
        "parameterTypes": []
      },
      {
        "name": "getPersisVars",
        "parameterTypes": []
      },
      {
        "name": "getRateLimit",
        "parameterTypes": []
      },
      {
        "name": "getRetry",
        "parameterTypes": []
      },
      {
        "name": "getReturnType",
        "parameterTypes": []
      },
      {
        "name": "getThrottle",
        "parameterTypes": []
      },
      {
        "name": "getTimeout",
        "parameterTypes": []
      },
      {
        "name": "getValidator",
        "parameterTypes": []
      },
      {
        "name": "getWhen",
        "parameterTypes": []
      },
      {
        "name": "hasDecorator",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "hasDecorators",
        "parameterTypes": []
      },
      {
        "name": "hasInput",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "hasInputs",
        "parameterTypes": []
      },
      {
        "name": "hasOutput",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "hasOutputs",
        "parameterTypes": []
      },
      {
        "name": "keySet_decorators",
        "parameterTypes": []
      },
      {
        "name": "keySet_inputs",
        "parameterTypes": []
      },
      {
        "name": "keySet_outputs",
        "parameterTypes": []
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "outputJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      },
      {
        "name": "setCatch",
        "parameterTypes": [
          "io.nop.core.lang.eval.IEvalAction"
        ]
      },
      {
        "name": "setCatchInternalException",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setDecorators",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setDescription",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDisplayName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setExecutor",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setFinally",
        "parameterTypes": [
          "io.nop.core.lang.eval.IEvalAction"
        ]
      },
      {
        "name": "setFlags",
        "parameterTypes": [
          "io.nop.task.model.TaskFlagsModel"
        ]
      },
      {
        "name": "setInputs",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setOnEnter",
        "parameterTypes": [
          "io.nop.core.lang.eval.IEvalAction"
        ]
      },
      {
        "name": "setOnReload",
        "parameterTypes": [
          "io.nop.core.lang.eval.IEvalAction"
        ]
      },
      {
        "name": "setOutputs",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setPersisVars",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setRateLimit",
        "parameterTypes": [
          "io.nop.task.model.TaskRateLimitModel"
        ]
      },
      {
        "name": "setRetry",
        "parameterTypes": [
          "io.nop.task.model.TaskRetryModel"
        ]
      },
      {
        "name": "setReturnType",
        "parameterTypes": [
          "io.nop.core.type.IGenericType"
        ]
      },
      {
        "name": "setThrottle",
        "parameterTypes": [
          "io.nop.task.model.TaskThrottleModel"
        ]
      },
      {
        "name": "setTimeout",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "setValidator",
        "parameterTypes": [
          "io.nop.core.lang.eval.IEvalAction"
        ]
      },
      {
        "name": "setValidator",
        "parameterTypes": [
          "io.nop.core.model.validator.ValidatorModel"
        ]
      },
      {
        "name": "setWhen",
        "parameterTypes": [
          "io.nop.core.lang.eval.IEvalPredicate"
        ]
      }
    ],
    "name": "io.nop.task.model._gen._TaskExecutableModel"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "copyTo",
        "parameterTypes": [
          "io.nop.task.model.TaskFlowModel"
        ]
      },
      {
        "name": "freeze",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getAuth",
        "parameterTypes": []
      },
      {
        "name": "getBeans",
        "parameterTypes": []
      },
      {
        "name": "getEnterSteps",
        "parameterTypes": []
      },
      {
        "name": "getExitSteps",
        "parameterTypes": []
      },
      {
        "name": "getVersion",
        "parameterTypes": []
      },
      {
        "name": "isDefaultSaveState",
        "parameterTypes": []
      },
      {
        "name": "isGraphMode",
        "parameterTypes": []
      },
      {
        "name": "isRestartable",
        "parameterTypes": []
      },
      {
        "name": "isUseParentBeanContainer",
        "parameterTypes": []
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "outputJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      },
      {
        "name": "setAuth",
        "parameterTypes": [
          "io.nop.api.core.auth.ActionAuthMeta"
        ]
      },
      {
        "name": "setBeans",
        "parameterTypes": [
          "io.nop.ioc.model.BeansModel"
        ]
      },
      {
        "name": "setDefaultSaveState",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setEnterSteps",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setExitSteps",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setGraphMode",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setRestartable",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setUseParentBeanContainer",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setVersion",
        "parameterTypes": [
          "long"
        ]
      }
    ],
    "name": "io.nop.task.model._gen._TaskFlowModel"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "copyTo",
        "parameterTypes": [
          "io.nop.task.model.TaskInputModel"
        ]
      },
      {
        "name": "freeze",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getDescription",
        "parameterTypes": []
      },
      {
        "name": "getDisplayName",
        "parameterTypes": []
      },
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "getRole",
        "parameterTypes": []
      },
      {
        "name": "getSchema",
        "parameterTypes": []
      },
      {
        "name": "getSource",
        "parameterTypes": []
      },
      {
        "name": "getType",
        "parameterTypes": []
      },
      {
        "name": "isFromTaskScope",
        "parameterTypes": []
      },
      {
        "name": "isMandatory",
        "parameterTypes": []
      },
      {
        "name": "isPersist",
        "parameterTypes": []
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "outputJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      },
      {
        "name": "setDescription",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDisplayName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setFromTaskScope",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setMandatory",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setPersist",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setRole",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setSchema",
        "parameterTypes": [
          "io.nop.xlang.xmeta.ISchema"
        ]
      },
      {
        "name": "setSource",
        "parameterTypes": [
          "io.nop.core.lang.eval.IEvalAction"
        ]
      },
      {
        "name": "setType",
        "parameterTypes": [
          "io.nop.core.type.IGenericType"
        ]
      }
    ],
    "name": "io.nop.task.model._gen._TaskInputModel"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "copyTo",
        "parameterTypes": [
          "io.nop.task.model.TaskOutputModel"
        ]
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "outputJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      }
    ],
    "name": "io.nop.task.model._gen._TaskOutputModel"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "copyTo",
        "parameterTypes": [
          "io.nop.task.model.TaskStepModel"
        ]
      },
      {
        "name": "freeze",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getErrorName",
        "parameterTypes": []
      },
      {
        "name": "getExtType",
        "parameterTypes": []
      },
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "getNext",
        "parameterTypes": []
      },
      {
        "name": "getNextOnError",
        "parameterTypes": []
      },
      {
        "name": "getSaveState",
        "parameterTypes": []
      },
      {
        "name": "getTagSet",
        "parameterTypes": []
      },
      {
        "name": "getWaitErrorSteps",
        "parameterTypes": []
      },
      {
        "name": "getWaitSteps",
        "parameterTypes": []
      },
      {
        "name": "isAllowStartIfComplete",
        "parameterTypes": []
      },
      {
        "name": "isConcurrent",
        "parameterTypes": []
      },
      {
        "name": "isIgnoreResult",
        "parameterTypes": []
      },
      {
        "name": "isInternal",
        "parameterTypes": []
      },
      {
        "name": "isRecordMetrics",
        "parameterTypes": []
      },
      {
        "name": "isRunOnContext",
        "parameterTypes": []
      },
      {
        "name": "isSync",
        "parameterTypes": []
      },
      {
        "name": "isUseParentScope",
        "parameterTypes": []
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "outputJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      },
      {
        "name": "setAllowStartIfComplete",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setConcurrent",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setErrorName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setExtType",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setIgnoreResult",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setInternal",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setNext",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setNextOnError",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setRecordMetrics",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setRunOnContext",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setSaveState",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setSync",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setTagSet",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setUseParentScope",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setWaitErrorSteps",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setWaitSteps",
        "parameterTypes": [
          "java.util.Set"
        ]
      }
    ],
    "name": "io.nop.task.model._gen._TaskStepModel"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "addStep",
        "parameterTypes": [
          "io.nop.task.model.TaskStepModel"
        ]
      },
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "copyTo",
        "parameterTypes": [
          "io.nop.task.model.TaskStepsModel"
        ]
      },
      {
        "name": "freeze",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getStep",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getSteps",
        "parameterTypes": []
      },
      {
        "name": "hasStep",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "hasSteps",
        "parameterTypes": []
      },
      {
        "name": "keySet_steps",
        "parameterTypes": []
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "outputJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      },
      {
        "name": "setSteps",
        "parameterTypes": [
          "java.util.List"
        ]
      }
    ],
    "name": "io.nop.task.model._gen._TaskStepsModel"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "copyTo",
        "parameterTypes": [
          "io.nop.task.model.XplTaskStepModel"
        ]
      },
      {
        "name": "freeze",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getSource",
        "parameterTypes": []
      },
      {
        "name": "getType",
        "parameterTypes": []
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "outputJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      },
      {
        "name": "setSource",
        "parameterTypes": [
          "io.nop.core.lang.eval.IEvalAction"
        ]
      },
      {
        "name": "setType",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.task.model._gen._XplTaskStepModel"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.task.utils.TaskGenHelper"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowWrite": true,
        "name": "editEnabled"
      },
      {
        "allowWrite": true,
        "name": "pageProvider"
      }
    ],
    "methods": [],
    "name": "io.nop.web.biz.PageProviderBizModel"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowWrite": true,
        "name": "editEnabled"
      },
      {
        "allowWrite": true,
        "name": "jsProvider"
      }
    ],
    "methods": [],
    "name": "io.nop.web.biz.SystemJsProviderBizModel"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "loadDynamicCss",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.web.page.DynamicCssLoader"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.web.page.DynamicJsLoader"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowWrite": true,
        "name": "cssLoader"
      },
      {
        "allowWrite": true,
        "name": "jsLoader"
      }
    ],
    "methods": [],
    "name": "io.nop.web.page.DynamicWebFileProvider"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "loadPage",
        "parameterTypes": [
          "io.nop.core.resource.IResource",
          "java.lang.String",
          "io.nop.core.lang.json.bind.ValueResolverCompilerRegistry",
          "boolean"
        ]
      },
      {
        "name": "renderPage",
        "parameterTypes": [
          "io.nop.core.resource.IResource",
          "io.nop.web.page.PageRenderOptions"
        ]
      },
      {
        "name": "renderPageTo",
        "parameterTypes": [
          "io.nop.core.resource.IResource",
          "io.nop.web.page.PageRenderOptions",
          "java.io.File"
        ]
      },
      {
        "name": "transformPermissions",
        "parameterTypes": [
          "java.lang.Object"
        ]
      }
    ],
    "name": "io.nop.web.page.PageProvider"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.web.page.PageRenderOptions"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "withHistorySupport",
        "parameterTypes": [
          "io.nop.core.resource.IResource",
          "java.util.function.Function"
        ]
      }
    ],
    "name": "io.nop.web.page.ResourceWithHistoryProvider"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "doInvoke",
        "parameterTypes": [
          "io.nop.core.lang.eval.EvalRuntime"
        ]
      }
    ],
    "name": "io.nop.xlang.api.AbstractEvalAction"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.xlang.api.EvalCode"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "doInvoke",
        "parameterTypes": [
          "io.nop.core.lang.eval.EvalRuntime"
        ]
      }
    ],
    "name": "io.nop.xlang.api.ExprEvalAction"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.xlang.ast.Expression"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.xlang.ast.IXLangASTNode"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.xlang.ast.Program"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.xlang.ast.XLangASTNode"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [
      {
        "name": "html"
      },
      {
        "name": "node"
      },
      {
        "name": "none"
      },
      {
        "name": "sql"
      },
      {
        "name": "text"
      },
      {
        "name": "textMap"
      },
      {
        "name": "xjson"
      },
      {
        "name": "xml"
      }
    ],
    "methods": [
      {
        "name": "fromText",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "isAllowTextOut",
        "parameterTypes": []
      },
      {
        "name": "isXmlOrHtml",
        "parameterTypes": []
      },
      {
        "name": "requireFromText",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "toString",
        "parameterTypes": []
      },
      {
        "name": "valueOf",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "values",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.xlang.ast.XLangOutputMode"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.xlang.ast._gen._Expression"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowWrite": true,
        "name": "body"
      },
      {
        "allowWrite": true,
        "name": "sourceType"
      }
    ],
    "methods": [
      {
        "name": "serializeFields",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      }
    ],
    "name": "io.nop.xlang.ast._gen._Program"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.xlang.debugger.initialize.XLangDebuggerInitializer"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.xlang.exec.MakeScopeEvalFunction"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "AND",
        "parameterTypes": [
          "io.nop.core.lang.eval.IEvalScope",
          "io.nop.xlang.ast.CallExpression"
        ]
      },
      {
        "name": "IF",
        "parameterTypes": [
          "io.nop.core.lang.eval.IEvalScope",
          "io.nop.xlang.ast.CallExpression"
        ]
      },
      {
        "name": "OR",
        "parameterTypes": [
          "io.nop.core.lang.eval.IEvalScope",
          "io.nop.xlang.ast.CallExpression"
        ]
      },
      {
        "name": "SWITCH",
        "parameterTypes": [
          "io.nop.core.lang.eval.IEvalScope",
          "io.nop.xlang.ast.CallExpression"
        ]
      },
      {
        "name": "assign",
        "parameterTypes": [
          "io.nop.xlang.api.IXLangCompileScope",
          "io.nop.xlang.ast.CallExpression"
        ]
      },
      {
        "name": "concat",
        "parameterTypes": [
          "io.nop.xlang.api.IXLangCompileScope",
          "io.nop.xlang.ast.CallExpression"
        ]
      },
      {
        "name": "currentDateTime",
        "parameterTypes": []
      },
      {
        "name": "eval",
        "parameterTypes": [
          "io.nop.core.lang.eval.IEvalScope",
          "io.nop.core.lang.eval.IEvalAction",
          "java.util.Map"
        ]
      },
      {
        "name": "eval_node",
        "parameterTypes": [
          "io.nop.core.lang.eval.IEvalScope",
          "io.nop.core.lang.eval.IEvalFunction"
        ]
      },
      {
        "name": "functional",
        "parameterTypes": [
          "io.nop.core.lang.eval.IEvalScope",
          "io.nop.core.lang.eval.IEvalFunction"
        ]
      },
      {
        "name": "g_current_locale",
        "parameterTypes": []
      },
      {
        "name": "g_default_locale",
        "parameterTypes": []
      },
      {
        "name": "g_make_node",
        "parameterTypes": [
          "java.lang.String",
          "java.util.Map"
        ]
      },
      {
        "name": "get",
        "parameterTypes": [
          "io.nop.core.lang.eval.IEvalScope",
          "java.lang.String"
        ]
      },
      {
        "name": "getByPropPath",
        "parameterTypes": [
          "io.nop.core.lang.eval.IEvalScope",
          "java.lang.String"
        ]
      },
      {
        "name": "hasClass",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "inject",
        "parameterTypes": [
          "io.nop.core.lang.eval.IEvalScope",
          "java.lang.Object"
        ]
      },
      {
        "name": "jpath",
        "parameterTypes": [
          "io.nop.xlang.api.IXLangCompileScope",
          "io.nop.xlang.ast.CallExpression"
        ]
      },
      {
        "name": "location",
        "parameterTypes": [
          "io.nop.xlang.api.IXLangCompileScope",
          "io.nop.xlang.ast.CallExpression"
        ]
      },
      {
        "name": "masked",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "newChildScope",
        "parameterTypes": [
          "io.nop.core.lang.eval.IEvalScope",
          "java.util.Map"
        ]
      },
      {
        "name": "now",
        "parameterTypes": []
      },
      {
        "name": "optional",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "order_by",
        "parameterTypes": [
          "io.nop.xlang.api.IXLangCompileScope",
          "io.nop.xlang.ast.CallExpression"
        ]
      },
      {
        "name": "raw",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "selection",
        "parameterTypes": [
          "io.nop.xlang.api.IXLangCompileScope",
          "io.nop.xlang.ast.CallExpression"
        ]
      },
      {
        "name": "sql",
        "parameterTypes": [
          "io.nop.xlang.api.IXLangCompileScope",
          "io.nop.xlang.ast.CallExpression"
        ]
      },
      {
        "name": "static_eval",
        "parameterTypes": [
          "io.nop.xlang.api.IXLangCompileScope",
          "io.nop.xlang.ast.CallExpression"
        ]
      },
      {
        "name": "static_eval2",
        "parameterTypes": [
          "io.nop.api.core.util.SourceLocation",
          "java.lang.Object"
        ]
      },
      {
        "name": "today",
        "parameterTypes": []
      },
      {
        "name": "tpl",
        "parameterTypes": [
          "io.nop.xlang.api.IXLangCompileScope",
          "io.nop.xlang.ast.CallExpression"
        ]
      },
      {
        "name": "track",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "xml",
        "parameterTypes": [
          "io.nop.xlang.api.IXLangCompileScope",
          "io.nop.xlang.ast.CallExpression"
        ]
      },
      {
        "name": "xpath",
        "parameterTypes": [
          "io.nop.xlang.api.IXLangCompileScope",
          "io.nop.xlang.ast.CallExpression"
        ]
      },
      {
        "name": "xpl",
        "parameterTypes": [
          "io.nop.xlang.api.IXLangCompileScope",
          "io.nop.xlang.ast.CallExpression"
        ]
      }
    ],
    "name": "io.nop.xlang.functions.GlobalFunctions"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "logDebug",
        "parameterTypes": [
          "io.nop.xlang.api.IXLangCompileScope",
          "io.nop.xlang.ast.CallExpression"
        ]
      },
      {
        "name": "logError",
        "parameterTypes": [
          "io.nop.xlang.api.IXLangCompileScope",
          "io.nop.xlang.ast.CallExpression"
        ]
      },
      {
        "name": "logInfo",
        "parameterTypes": [
          "io.nop.xlang.api.IXLangCompileScope",
          "io.nop.xlang.ast.CallExpression"
        ]
      },
      {
        "name": "logTrace",
        "parameterTypes": [
          "io.nop.xlang.api.IXLangCompileScope",
          "io.nop.xlang.ast.CallExpression"
        ]
      },
      {
        "name": "logWarn",
        "parameterTypes": [
          "io.nop.xlang.api.IXLangCompileScope",
          "io.nop.xlang.ast.CallExpression"
        ]
      }
    ],
    "name": "io.nop.xlang.functions.LogFunctions"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.xlang.initialize.RegisterModelCoreInitializer"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.xlang.initialize.XLangCoreInitializer"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.xlang.initialize.XLangDebuggerInitializer"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.xlang.initialize.XLangInitializer"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [
      {
        "name": "LOG"
      }
    ],
    "methods": [
      {
        "name": "reparse",
        "parameterTypes": [
          "io.nop.core.lang.xml.XNode",
          "io.nop.core.resource.IResource"
        ]
      },
      {
        "name": "v",
        "parameterTypes": [
          "io.nop.api.core.util.SourceLocation",
          "java.lang.String",
          "java.lang.String",
          "java.lang.Object"
        ]
      }
    ],
    "name": "io.nop.xlang.utils.DebugHelper"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [
      {
        "name": "LOG"
      }
    ],
    "methods": [
      {
        "name": "debug",
        "parameterTypes": [
          "java.lang.String",
          "[Ljava.lang.Object;"
        ]
      },
      {
        "name": "error",
        "parameterTypes": [
          "java.lang.String",
          "[Ljava.lang.Object;"
        ]
      },
      {
        "name": "info",
        "parameterTypes": [
          "java.lang.String",
          "[Ljava.lang.Object;"
        ]
      },
      {
        "name": "trace",
        "parameterTypes": [
          "java.lang.String",
          "[Ljava.lang.Object;"
        ]
      },
      {
        "name": "warn",
        "parameterTypes": [
          "java.lang.String",
          "[Ljava.lang.Object;"
        ]
      }
    ],
    "name": "io.nop.xlang.utils.LogHelper"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getImportExprs",
        "parameterTypes": []
      },
      {
        "name": "getXdslSchema",
        "parameterTypes": []
      },
      {
        "name": "getXdslTransform",
        "parameterTypes": []
      },
      {
        "name": "setImportExprs",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setXdslSchema",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setXdslTransform",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.xlang.xdsl.AbstractDslModel"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [
      {
        "name": "LOG"
      },
      {
        "allowWrite": true,
        "name": "g_excelModelLoaderClass"
      },
      {
        "allowWrite": true,
        "name": "g_excelModelLoaderFactory"
      }
    ],
    "methods": [
      {
        "name": "dslJsonListToNodeList",
        "parameterTypes": [
          "io.nop.xlang.xmeta.ISchema",
          "java.util.List"
        ]
      },
      {
        "name": "dslJsonToNode",
        "parameterTypes": [
          "io.nop.xlang.xmeta.ISchema",
          "java.lang.Object"
        ]
      },
      {
        "name": "dslModelToXNode",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object"
        ]
      },
      {
        "name": "dslNodeToJson",
        "parameterTypes": [
          "io.nop.xlang.xdef.IXDefNode",
          "io.nop.core.lang.xml.XNode"
        ]
      },
      {
        "name": "getXdefPath",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.String"
        ]
      },
      {
        "name": "loadDslModel",
        "parameterTypes": [
          "io.nop.core.resource.IResource"
        ]
      },
      {
        "name": "loadDslModelAsJson",
        "parameterTypes": [
          "io.nop.core.resource.IResource",
          "boolean"
        ]
      },
      {
        "name": "loadDslModelFromPath",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "newExcelModelLoader",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "parseDslModelNode",
        "parameterTypes": [
          "java.lang.String",
          "io.nop.core.lang.xml.XNode"
        ]
      },
      {
        "name": "registerExcelModelLoaderClass",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "registerExcelModelLoaderFactory",
        "parameterTypes": [
          "io.nop.xlang.xdsl.IExcelModelLoaderFactory"
        ]
      },
      {
        "name": "saveDslModel",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object",
          "io.nop.core.resource.IResource"
        ]
      },
      {
        "name": "supportExcelModelLoader",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.xlang.xdsl.DslModelHelper"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getXdslSchema",
        "parameterTypes": []
      },
      {
        "name": "getXdslTransform",
        "parameterTypes": []
      },
      {
        "name": "setXdslSchema",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setXdslTransform",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.xlang.xdsl.IXDslModel"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.xlang.xdsl.transformer.InOutNodeTransformer"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getItemSchema",
        "parameterTypes": []
      },
      {
        "name": "getKeyAttr",
        "parameterTypes": []
      },
      {
        "name": "getKeyProp",
        "parameterTypes": []
      },
      {
        "name": "getMaxItems",
        "parameterTypes": []
      },
      {
        "name": "getMinItems",
        "parameterTypes": []
      },
      {
        "name": "getOrderAttr",
        "parameterTypes": []
      },
      {
        "name": "getOrderProp",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.xlang.xmeta.IListSchema"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getMapValueSchema",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.xlang.xmeta.IMapSchema"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getClassName",
        "parameterTypes": []
      },
      {
        "name": "getExtendsType",
        "parameterTypes": []
      },
      {
        "name": "getImplementsTypes",
        "parameterTypes": []
      },
      {
        "name": "getMaxProperties",
        "parameterTypes": []
      },
      {
        "name": "getMinProperties",
        "parameterTypes": []
      },
      {
        "name": "getProp",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getProps",
        "parameterTypes": []
      },
      {
        "name": "getSupportExtends",
        "parameterTypes": []
      },
      {
        "name": "getType",
        "parameterTypes": []
      },
      {
        "name": "getTypeValue",
        "parameterTypes": []
      },
      {
        "name": "getUniqueProp",
        "parameterTypes": []
      },
      {
        "name": "getUnknownAttrSchema",
        "parameterTypes": []
      },
      {
        "name": "getUnknownTagSchema",
        "parameterTypes": []
      },
      {
        "name": "hasProp",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "hasProps",
        "parameterTypes": []
      },
      {
        "name": "isAbstract",
        "parameterTypes": []
      },
      {
        "name": "isInterface",
        "parameterTypes": []
      },
      {
        "name": "isPropInherited",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setTypeValue",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.xlang.xmeta.IObjSchema"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "isExplicitDefine",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.xlang.xmeta.ISchema"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getBizObjName",
        "parameterTypes": []
      },
      {
        "name": "getClassName",
        "parameterTypes": []
      },
      {
        "name": "getDescription",
        "parameterTypes": []
      },
      {
        "name": "getDisplayName",
        "parameterTypes": []
      },
      {
        "name": "getDomain",
        "parameterTypes": []
      },
      {
        "name": "getId",
        "parameterTypes": []
      },
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "getRef",
        "parameterTypes": []
      },
      {
        "name": "getRefSchema",
        "parameterTypes": []
      },
      {
        "name": "getSchemaKind",
        "parameterTypes": []
      },
      {
        "name": "getStdDomain",
        "parameterTypes": []
      },
      {
        "name": "getType",
        "parameterTypes": []
      },
      {
        "name": "getValidator",
        "parameterTypes": []
      },
      {
        "name": "isRefResolved",
        "parameterTypes": []
      },
      {
        "name": "setRefResolved",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setRefSchema",
        "parameterTypes": [
          "io.nop.xlang.xmeta.ISchema"
        ]
      },
      {
        "name": "toNode",
        "parameterTypes": [
          "java.util.Map"
        ]
      }
    ],
    "name": "io.nop.xlang.xmeta.ISchemaNode"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getDict",
        "parameterTypes": []
      },
      {
        "name": "getDomain",
        "parameterTypes": []
      },
      {
        "name": "getExcludeMax",
        "parameterTypes": []
      },
      {
        "name": "getExcludeMin",
        "parameterTypes": []
      },
      {
        "name": "getMax",
        "parameterTypes": []
      },
      {
        "name": "getMaxLength",
        "parameterTypes": []
      },
      {
        "name": "getMin",
        "parameterTypes": []
      },
      {
        "name": "getMinLength",
        "parameterTypes": []
      },
      {
        "name": "getMultipleOf",
        "parameterTypes": []
      },
      {
        "name": "getPattern",
        "parameterTypes": []
      },
      {
        "name": "getPrecision",
        "parameterTypes": []
      },
      {
        "name": "getScale",
        "parameterTypes": []
      },
      {
        "name": "getType",
        "parameterTypes": []
      },
      {
        "name": "matchPattern",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.xlang.xmeta.ISimpleSchema"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getOneOf",
        "parameterTypes": []
      },
      {
        "name": "getSubTypeProp",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.xlang.xmeta.IUnionSchema"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "transform",
        "parameterTypes": [
          "io.nop.xlang.xmeta.IObjMeta"
        ]
      }
    ],
    "name": "io.nop.xlang.xmeta.impl.ObjMetaToXDef"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "addProp",
        "parameterTypes": [
          "io.nop.xlang.xmeta.impl.ObjPropMetaImpl"
        ]
      },
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "getAbstract",
        "parameterTypes": []
      },
      {
        "name": "getDict",
        "parameterTypes": []
      },
      {
        "name": "getExcludeMax",
        "parameterTypes": []
      },
      {
        "name": "getExcludeMin",
        "parameterTypes": []
      },
      {
        "name": "getExtendsType",
        "parameterTypes": []
      },
      {
        "name": "getImplementsTypes",
        "parameterTypes": []
      },
      {
        "name": "getInterface",
        "parameterTypes": []
      },
      {
        "name": "getItemSchema",
        "parameterTypes": []
      },
      {
        "name": "getKeyAttr",
        "parameterTypes": []
      },
      {
        "name": "getKeyProp",
        "parameterTypes": []
      },
      {
        "name": "getMapValueSchema",
        "parameterTypes": []
      },
      {
        "name": "getMax",
        "parameterTypes": []
      },
      {
        "name": "getMaxItems",
        "parameterTypes": []
      },
      {
        "name": "getMaxLength",
        "parameterTypes": []
      },
      {
        "name": "getMaxProperties",
        "parameterTypes": []
      },
      {
        "name": "getMin",
        "parameterTypes": []
      },
      {
        "name": "getMinItems",
        "parameterTypes": []
      },
      {
        "name": "getMinLength",
        "parameterTypes": []
      },
      {
        "name": "getMinProperties",
        "parameterTypes": []
      },
      {
        "name": "getMultipleOf",
        "parameterTypes": []
      },
      {
        "name": "getOneOf",
        "parameterTypes": []
      },
      {
        "name": "getOrderAttr",
        "parameterTypes": []
      },
      {
        "name": "getOrderProp",
        "parameterTypes": []
      },
      {
        "name": "getPattern",
        "parameterTypes": []
      },
      {
        "name": "getPrecision",
        "parameterTypes": []
      },
      {
        "name": "getProp",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getProps",
        "parameterTypes": []
      },
      {
        "name": "getScale",
        "parameterTypes": []
      },
      {
        "name": "getSchemaKind",
        "parameterTypes": []
      },
      {
        "name": "getSubTypeProp",
        "parameterTypes": []
      },
      {
        "name": "getSupportExtends",
        "parameterTypes": []
      },
      {
        "name": "getTypeValue",
        "parameterTypes": []
      },
      {
        "name": "getUniqueProp",
        "parameterTypes": []
      },
      {
        "name": "getUnknownAttrSchema",
        "parameterTypes": []
      },
      {
        "name": "getUnknownTagSchema",
        "parameterTypes": []
      },
      {
        "name": "hasProp",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "hasProps",
        "parameterTypes": []
      },
      {
        "name": "isExplicitDefine",
        "parameterTypes": []
      },
      {
        "name": "isPropInherited",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "key",
        "parameterTypes": []
      },
      {
        "name": "matchPattern",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "setAbstract",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setDict",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setExcludeMax",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setExcludeMin",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setExplicitDefine",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setExtendsType",
        "parameterTypes": [
          "io.nop.core.type.IGenericType"
        ]
      },
      {
        "name": "setImplementsTypes",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setInterface",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setItemSchema",
        "parameterTypes": [
          "io.nop.xlang.xmeta.ISchema"
        ]
      },
      {
        "name": "setKeyProp",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setMapValueSchema",
        "parameterTypes": [
          "io.nop.xlang.xmeta.ISchema"
        ]
      },
      {
        "name": "setMax",
        "parameterTypes": [
          "java.lang.Double"
        ]
      },
      {
        "name": "setMaxItems",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setMaxLength",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setMaxProperties",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setMin",
        "parameterTypes": [
          "java.lang.Double"
        ]
      },
      {
        "name": "setMinItems",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setMinLength",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setMinProperties",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setMultipleOf",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setOneOf",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setOrderProp",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setPattern",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setPrecision",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setProps",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setScale",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setSubTypeProp",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setSupportExtends",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setTypeValue",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setUniqueProp",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setUnknownAttrSchema",
        "parameterTypes": [
          "io.nop.xlang.xmeta.ISchema"
        ]
      },
      {
        "name": "setUnknownTagSchema",
        "parameterTypes": [
          "io.nop.xlang.xmeta.ISchema"
        ]
      },
      {
        "name": "toNode",
        "parameterTypes": [
          "java.util.Map"
        ]
      }
    ],
    "name": "io.nop.xlang.xmeta.impl.SchemaImpl"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getClassName",
        "parameterTypes": []
      },
      {
        "name": "getRefSchema",
        "parameterTypes": []
      },
      {
        "name": "setRefSchema",
        "parameterTypes": [
          "io.nop.xlang.xmeta.ISchema"
        ]
      },
      {
        "name": "toNode",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "toString",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.xlang.xmeta.impl.SchemaNodeImpl"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "copyTo",
        "parameterTypes": [
          "io.nop.xlang.xmeta.impl.SchemaNodeImpl"
        ]
      },
      {
        "name": "freeze",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getBizObjName",
        "parameterTypes": []
      },
      {
        "name": "getDescription",
        "parameterTypes": []
      },
      {
        "name": "getDisplayName",
        "parameterTypes": []
      },
      {
        "name": "getDomain",
        "parameterTypes": []
      },
      {
        "name": "getId",
        "parameterTypes": []
      },
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "getRef",
        "parameterTypes": []
      },
      {
        "name": "getRefResolved",
        "parameterTypes": []
      },
      {
        "name": "getStdDomain",
        "parameterTypes": []
      },
      {
        "name": "getType",
        "parameterTypes": []
      },
      {
        "name": "getValidator",
        "parameterTypes": []
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "outputJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      },
      {
        "name": "setBizObjName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDescription",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDisplayName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDomain",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setRef",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setRefResolved",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setStdDomain",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setType",
        "parameterTypes": [
          "io.nop.core.type.IGenericType"
        ]
      },
      {
        "name": "setValidator",
        "parameterTypes": [
          "io.nop.core.lang.eval.IEvalAction"
        ]
      },
      {
        "name": "setValidator",
        "parameterTypes": [
          "io.nop.core.lang.eval.IEvalFunction"
        ]
      },
      {
        "name": "setValidator",
        "parameterTypes": [
          "io.nop.core.model.validator.ValidatorModel"
        ]
      }
    ],
    "name": "io.nop.xlang.xmeta.impl._gen._SchemaNodeImpl"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowWrite": true,
        "name": "baseLoc"
      },
      {
        "allowWrite": true,
        "name": "packageName"
      },
      {
        "allowWrite": true,
        "name": "typeAliases"
      },
      {
        "allowWrite": true,
        "name": "typeCache"
      }
    ],
    "methods": [
      {
        "name": "addTypeAlias",
        "parameterTypes": [
          "org.codehaus.janino.Java$Locatable",
          "io.nop.core.type.IGenericType"
        ]
      },
      {
        "name": "buildClassType",
        "parameterTypes": [
          "org.codehaus.janino.Java$Locatable",
          "java.lang.String"
        ]
      },
      {
        "name": "buildLoc",
        "parameterTypes": [
          "org.codehaus.janino.Java$Locatable"
        ]
      },
      {
        "name": "buildReferenceType",
        "parameterTypes": [
          "org.codehaus.janino.Java$ReferenceType"
        ]
      },
      {
        "name": "buildType",
        "parameterTypes": [
          "org.codehaus.janino.Java$Type"
        ]
      },
      {
        "name": "buildTypes",
        "parameterTypes": [
          "[Lorg.codehaus.janino.Java$Type;"
        ]
      },
      {
        "name": "doParse",
        "parameterTypes": [
          "org.codehaus.janino.Java$CompilationUnit"
        ]
      },
      {
        "name": "doParseText",
        "parameterTypes": [
          "io.nop.api.core.util.SourceLocation",
          "java.lang.String"
        ]
      },
      {
        "name": "getAnnotation",
        "parameterTypes": [
          "org.codehaus.janino.Java$Annotatable",
          "java.lang.String"
        ]
      },
      {
        "name": "parseAnnotationValue",
        "parameterTypes": [
          "org.codehaus.janino.Java$Annotation",
          "java.lang.annotation.Annotation"
        ]
      },
      {
        "name": "resolveAlias",
        "parameterTypes": [
          "org.codehaus.janino.Java$Located",
          "java.lang.String"
        ]
      },
      {
        "name": "setRawTypeResolver",
        "parameterTypes": [
          "io.nop.core.type.IRawTypeResolver"
        ]
      }
    ],
    "name": "io.nop.xlang.xmeta.xjava.JaninoParser"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "buildTypeReference",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "doParse",
        "parameterTypes": [
          "org.codehaus.janino.Java$CompilationUnit"
        ]
      },
      {
        "name": "resolveRef",
        "parameterTypes": [
          "boolean"
        ]
      }
    ],
    "name": "io.nop.xlang.xmeta.xjava.JavaObjMetaParser"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.xlang.xpl.XplSlotType"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "loadObjectFromPath",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.xlang.xpl.impl.XplTaskLoader"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.xlang.xpl.loader.HtmlXplModelLoader"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.xlang.xpl.loader.NoneXplModelLoader"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "loadObjectFromPath",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.xlang.xpl.loader.XplModelLoader"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getFunctionModel",
        "parameterTypes": []
      },
      {
        "name": "getTagCompiler",
        "parameterTypes": []
      },
      {
        "name": "getTagFuncName",
        "parameterTypes": []
      },
      {
        "name": "init",
        "parameterTypes": []
      },
      {
        "name": "setTagCompiler",
        "parameterTypes": [
          "io.nop.xlang.xpl.xlib.XplLibTagCompiler"
        ]
      },
      {
        "name": "setTagFuncName",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.xlang.xpl.xlib.XplTag"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.xlang.xpl.xlib.XplTagAttribute"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "freeze",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getDefaultNamespace",
        "parameterTypes": []
      },
      {
        "name": "getImportExprs",
        "parameterTypes": []
      },
      {
        "name": "init",
        "parameterTypes": []
      },
      {
        "name": "setDefaultNamespace",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setImportExprs",
        "parameterTypes": [
          "java.util.List"
        ]
      }
    ],
    "name": "io.nop.xlang.xpl.xlib.XplTagLib"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getSlotFuncName",
        "parameterTypes": []
      },
      {
        "name": "setSlotFuncName",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.xlang.xpl.xlib.XplTagSlot"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.xlang.xpl.xlib.XplTagSlotArg"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "addAttr",
        "parameterTypes": [
          "io.nop.xlang.xpl.xlib.XplTagAttribute"
        ]
      },
      {
        "name": "addSlot",
        "parameterTypes": [
          "io.nop.xlang.xpl.xlib.XplTagSlot"
        ]
      },
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "copyTo",
        "parameterTypes": [
          "io.nop.xlang.xpl.xlib.XplTag"
        ]
      },
      {
        "name": "freeze",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getAttr",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getAttrs",
        "parameterTypes": []
      },
      {
        "name": "getAttrsVar",
        "parameterTypes": []
      },
      {
        "name": "getBodyType",
        "parameterTypes": []
      },
      {
        "name": "getCallLocationVar",
        "parameterTypes": []
      },
      {
        "name": "getCheckNs",
        "parameterTypes": []
      },
      {
        "name": "getDescription",
        "parameterTypes": []
      },
      {
        "name": "getDisplayName",
        "parameterTypes": []
      },
      {
        "name": "getExample",
        "parameterTypes": []
      },
      {
        "name": "getOutputMode",
        "parameterTypes": []
      },
      {
        "name": "getSchema",
        "parameterTypes": []
      },
      {
        "name": "getSlot",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getSlots",
        "parameterTypes": []
      },
      {
        "name": "getSource",
        "parameterTypes": []
      },
      {
        "name": "getTagName",
        "parameterTypes": []
      },
      {
        "name": "getTagReturn",
        "parameterTypes": []
      },
      {
        "name": "getTransform",
        "parameterTypes": []
      },
      {
        "name": "getTransformer",
        "parameterTypes": []
      },
      {
        "name": "getUnknownAttrsVar",
        "parameterTypes": []
      },
      {
        "name": "getValidator",
        "parameterTypes": []
      },
      {
        "name": "hasAttr",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "hasAttrs",
        "parameterTypes": []
      },
      {
        "name": "hasSlot",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "hasSlots",
        "parameterTypes": []
      },
      {
        "name": "isConditionTag",
        "parameterTypes": []
      },
      {
        "name": "isDeprecated",
        "parameterTypes": []
      },
      {
        "name": "isDump",
        "parameterTypes": []
      },
      {
        "name": "isIgnoreUnknownAttrs",
        "parameterTypes": []
      },
      {
        "name": "isInternal",
        "parameterTypes": []
      },
      {
        "name": "isMacro",
        "parameterTypes": []
      },
      {
        "name": "keySet_attrs",
        "parameterTypes": []
      },
      {
        "name": "keySet_slots",
        "parameterTypes": []
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "outputJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      },
      {
        "name": "setAttrs",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setAttrsVar",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setBodyType",
        "parameterTypes": [
          "io.nop.xlang.xpl.XplSlotType"
        ]
      },
      {
        "name": "setCallLocationVar",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setCheckNs",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setConditionTag",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setDeprecated",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setDescription",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDisplayName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDump",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setExample",
        "parameterTypes": [
          "io.nop.core.lang.xml.XNode"
        ]
      },
      {
        "name": "setIgnoreUnknownAttrs",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setInternal",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setMacro",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setOutputMode",
        "parameterTypes": [
          "io.nop.xlang.ast.XLangOutputMode"
        ]
      },
      {
        "name": "setSchema",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setSlots",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setSource",
        "parameterTypes": [
          "io.nop.core.lang.xml.XNode"
        ]
      },
      {
        "name": "setTagName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setTagReturn",
        "parameterTypes": [
          "io.nop.xlang.xpl.xlib.XplTagReturn"
        ]
      },
      {
        "name": "setTransform",
        "parameterTypes": [
          "io.nop.core.lang.eval.IEvalFunction"
        ]
      },
      {
        "name": "setTransformer",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setUnknownAttrsVar",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setValidator",
        "parameterTypes": [
          "io.nop.core.lang.eval.IEvalAction"
        ]
      },
      {
        "name": "setValidator",
        "parameterTypes": [
          "io.nop.core.model.validator.ValidatorModel"
        ]
      }
    ],
    "name": "io.nop.xlang.xpl.xlib._gen._XplTag"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "copyTo",
        "parameterTypes": [
          "io.nop.xlang.xpl.xlib.XplTagAttribute"
        ]
      },
      {
        "name": "freeze",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getDefaultValue",
        "parameterTypes": []
      },
      {
        "name": "getDescription",
        "parameterTypes": []
      },
      {
        "name": "getDisplayName",
        "parameterTypes": []
      },
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "getStdDomain",
        "parameterTypes": []
      },
      {
        "name": "getType",
        "parameterTypes": []
      },
      {
        "name": "getVarName",
        "parameterTypes": []
      },
      {
        "name": "isDeprecated",
        "parameterTypes": []
      },
      {
        "name": "isImplicit",
        "parameterTypes": []
      },
      {
        "name": "isInternal",
        "parameterTypes": []
      },
      {
        "name": "isMandatory",
        "parameterTypes": []
      },
      {
        "name": "isOptional",
        "parameterTypes": []
      },
      {
        "name": "isRuntime",
        "parameterTypes": []
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "outputJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      },
      {
        "name": "setDefaultValue",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDeprecated",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setDescription",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDisplayName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setImplicit",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setInternal",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setMandatory",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setOptional",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setRuntime",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setStdDomain",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setType",
        "parameterTypes": [
          "io.nop.core.type.IGenericType"
        ]
      },
      {
        "name": "setVarName",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.xlang.xpl.xlib._gen._XplTagAttribute"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "copyTo",
        "parameterTypes": [
          "io.nop.xlang.xpl.xlib.XplTagLib"
        ]
      },
      {
        "name": "freeze",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getDefaultOutputMode",
        "parameterTypes": []
      },
      {
        "name": "getDescription",
        "parameterTypes": []
      },
      {
        "name": "getDisplayName",
        "parameterTypes": []
      },
      {
        "name": "getInterfaces",
        "parameterTypes": []
      },
      {
        "name": "getNamespace",
        "parameterTypes": []
      },
      {
        "name": "getTag",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getTags",
        "parameterTypes": []
      },
      {
        "name": "hasTag",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "hasTags",
        "parameterTypes": []
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "outputJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      },
      {
        "name": "setDefaultOutputMode",
        "parameterTypes": [
          "io.nop.xlang.ast.XLangOutputMode"
        ]
      },
      {
        "name": "setDescription",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDisplayName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setInterfaces",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setNamespace",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setTags",
        "parameterTypes": [
          "java.util.Map"
        ]
      }
    ],
    "name": "io.nop.xlang.xpl.xlib._gen._XplTagLib"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "addArg",
        "parameterTypes": [
          "io.nop.xlang.xpl.xlib.XplTagSlotArg"
        ]
      },
      {
        "name": "addAttr",
        "parameterTypes": [
          "io.nop.xlang.xpl.xlib.XplTagAttribute"
        ]
      },
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "copyTo",
        "parameterTypes": [
          "io.nop.xlang.xpl.xlib.XplTagSlot"
        ]
      },
      {
        "name": "freeze",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getArg",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getArgs",
        "parameterTypes": []
      },
      {
        "name": "getAttr",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getAttrs",
        "parameterTypes": []
      },
      {
        "name": "getDescription",
        "parameterTypes": []
      },
      {
        "name": "getDisplayName",
        "parameterTypes": []
      },
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "getOutputMode",
        "parameterTypes": []
      },
      {
        "name": "getSchema",
        "parameterTypes": []
      },
      {
        "name": "getSlotType",
        "parameterTypes": []
      },
      {
        "name": "getStdDomain",
        "parameterTypes": []
      },
      {
        "name": "getType",
        "parameterTypes": []
      },
      {
        "name": "getVarName",
        "parameterTypes": []
      },
      {
        "name": "hasArg",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "hasArgs",
        "parameterTypes": []
      },
      {
        "name": "hasAttr",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "hasAttrs",
        "parameterTypes": []
      },
      {
        "name": "isDeprecated",
        "parameterTypes": []
      },
      {
        "name": "isMandatory",
        "parameterTypes": []
      },
      {
        "name": "isMultiple",
        "parameterTypes": []
      },
      {
        "name": "isRuntime",
        "parameterTypes": []
      },
      {
        "name": "keySet_args",
        "parameterTypes": []
      },
      {
        "name": "keySet_attrs",
        "parameterTypes": []
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "outputJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      },
      {
        "name": "setArgs",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setAttrs",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setDeprecated",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setDescription",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDisplayName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setMandatory",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setMultiple",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setOutputMode",
        "parameterTypes": [
          "io.nop.xlang.ast.XLangOutputMode"
        ]
      },
      {
        "name": "setRuntime",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setSchema",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setSlotType",
        "parameterTypes": [
          "io.nop.xlang.xpl.XplSlotType"
        ]
      },
      {
        "name": "setStdDomain",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setType",
        "parameterTypes": [
          "io.nop.core.type.IGenericType"
        ]
      },
      {
        "name": "setVarName",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.xlang.xpl.xlib._gen._XplTagSlot"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "copyTo",
        "parameterTypes": [
          "io.nop.xlang.xpl.xlib.XplTagSlotArg"
        ]
      },
      {
        "name": "freeze",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getDefaultValue",
        "parameterTypes": []
      },
      {
        "name": "getDescription",
        "parameterTypes": []
      },
      {
        "name": "getDisplayName",
        "parameterTypes": []
      },
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "getStdDomain",
        "parameterTypes": []
      },
      {
        "name": "getType",
        "parameterTypes": []
      },
      {
        "name": "isDeprecated",
        "parameterTypes": []
      },
      {
        "name": "isImplicit",
        "parameterTypes": []
      },
      {
        "name": "isMandatory",
        "parameterTypes": []
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "outputJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      },
      {
        "name": "setDefaultValue",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "setDeprecated",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setDescription",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDisplayName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setImplicit",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setMandatory",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setStdDomain",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setType",
        "parameterTypes": [
          "io.nop.core.type.IGenericType"
        ]
      }
    ],
    "name": "io.nop.xlang.xpl.xlib._gen._XplTagSlotArg"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.xui.initialize.XuiCoreInitializer"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "java.io.File"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "java.io.Serializable"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "java.lang.AutoCloseable"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [
      {
        "name": "FALSE"
      },
      {
        "name": "TRUE"
      },
      {
        "name": "TYPE"
      }
    ],
    "methods": [
      {
        "name": "booleanValue",
        "parameterTypes": []
      },
      {
        "name": "compare",
        "parameterTypes": [
          "boolean",
          "boolean"
        ]
      },
      {
        "name": "compareTo",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "describeConstable",
        "parameterTypes": []
      },
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "getBoolean",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "hashCode",
        "parameterTypes": []
      },
      {
        "name": "hashCode",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "logicalAnd",
        "parameterTypes": [
          "boolean",
          "boolean"
        ]
      },
      {
        "name": "logicalOr",
        "parameterTypes": [
          "boolean",
          "boolean"
        ]
      },
      {
        "name": "logicalXor",
        "parameterTypes": [
          "boolean",
          "boolean"
        ]
      },
      {
        "name": "parseBoolean",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "toString",
        "parameterTypes": []
      },
      {
        "name": "toString",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "valueOf",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "valueOf",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "java.lang.Boolean"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "compareTo",
        "parameterTypes": [
          "java.lang.Object"
        ]
      }
    ],
    "name": "java.lang.Comparable"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "compareTo",
        "parameterTypes": [
          "java.lang.Enum"
        ]
      },
      {
        "name": "describeConstable",
        "parameterTypes": []
      },
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "getDeclaringClass",
        "parameterTypes": []
      },
      {
        "name": "hashCode",
        "parameterTypes": []
      },
      {
        "name": "name",
        "parameterTypes": []
      },
      {
        "name": "ordinal",
        "parameterTypes": []
      },
      {
        "name": "toString",
        "parameterTypes": []
      },
      {
        "name": "valueOf",
        "parameterTypes": [
          "java.lang.Class",
          "java.lang.String"
        ]
      }
    ],
    "name": "java.lang.Enum"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "java.lang.Integer"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "iterator",
        "parameterTypes": []
      }
    ],
    "name": "java.lang.Iterable"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "java.lang.Long"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "java.lang.Number"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "hashCode",
        "parameterTypes": []
      },
      {
        "name": "toString",
        "parameterTypes": []
      }
    ],
    "name": "java.lang.Object"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [
      {
        "name": "CASE_INSENSITIVE_ORDER"
      }
    ],
    "methods": [
      {
        "name": "charAt",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "chars",
        "parameterTypes": []
      },
      {
        "name": "codePointAt",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "codePointBefore",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "codePointCount",
        "parameterTypes": [
          "int",
          "int"
        ]
      },
      {
        "name": "codePoints",
        "parameterTypes": []
      },
      {
        "name": "compareTo",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "compareToIgnoreCase",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "concat",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "contains",
        "parameterTypes": [
          "java.lang.CharSequence"
        ]
      },
      {
        "name": "contentEquals",
        "parameterTypes": [
          "java.lang.CharSequence"
        ]
      },
      {
        "name": "contentEquals",
        "parameterTypes": [
          "java.lang.StringBuffer"
        ]
      },
      {
        "name": "copyValueOf",
        "parameterTypes": [
          "[C"
        ]
      },
      {
        "name": "copyValueOf",
        "parameterTypes": [
          "[C",
          "int",
          "int"
        ]
      },
      {
        "name": "describeConstable",
        "parameterTypes": []
      },
      {
        "name": "endsWith",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "equalsIgnoreCase",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "format",
        "parameterTypes": [
          "java.lang.String",
          "[Ljava.lang.Object;"
        ]
      },
      {
        "name": "format",
        "parameterTypes": [
          "java.util.Locale",
          "java.lang.String",
          "[Ljava.lang.Object;"
        ]
      },
      {
        "name": "formatted",
        "parameterTypes": [
          "[Ljava.lang.Object;"
        ]
      },
      {
        "name": "getBytes",
        "parameterTypes": []
      },
      {
        "name": "getBytes",
        "parameterTypes": [
          "int",
          "int",
          "[B",
          "int"
        ]
      },
      {
        "name": "getBytes",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getBytes",
        "parameterTypes": [
          "java.nio.charset.Charset"
        ]
      },
      {
        "name": "getChars",
        "parameterTypes": [
          "int",
          "int",
          "[C",
          "int"
        ]
      },
      {
        "name": "hashCode",
        "parameterTypes": []
      },
      {
        "name": "indent",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "indexOf",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "indexOf",
        "parameterTypes": [
          "int",
          "int"
        ]
      },
      {
        "name": "indexOf",
        "parameterTypes": [
          "int",
          "int",
          "int"
        ]
      },
      {
        "name": "indexOf",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "indexOf",
        "parameterTypes": [
          "java.lang.String",
          "int"
        ]
      },
      {
        "name": "indexOf",
        "parameterTypes": [
          "java.lang.String",
          "int",
          "int"
        ]
      },
      {
        "name": "intern",
        "parameterTypes": []
      },
      {
        "name": "isBlank",
        "parameterTypes": []
      },
      {
        "name": "isEmpty",
        "parameterTypes": []
      },
      {
        "name": "join",
        "parameterTypes": [
          "java.lang.CharSequence",
          "[Ljava.lang.CharSequence;"
        ]
      },
      {
        "name": "join",
        "parameterTypes": [
          "java.lang.CharSequence",
          "java.lang.Iterable"
        ]
      },
      {
        "name": "lastIndexOf",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "lastIndexOf",
        "parameterTypes": [
          "int",
          "int"
        ]
      },
      {
        "name": "lastIndexOf",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "lastIndexOf",
        "parameterTypes": [
          "java.lang.String",
          "int"
        ]
      },
      {
        "name": "length",
        "parameterTypes": []
      },
      {
        "name": "lines",
        "parameterTypes": []
      },
      {
        "name": "matches",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "offsetByCodePoints",
        "parameterTypes": [
          "int",
          "int"
        ]
      },
      {
        "name": "regionMatches",
        "parameterTypes": [
          "boolean",
          "int",
          "java.lang.String",
          "int",
          "int"
        ]
      },
      {
        "name": "regionMatches",
        "parameterTypes": [
          "int",
          "java.lang.String",
          "int",
          "int"
        ]
      },
      {
        "name": "repeat",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "replace",
        "parameterTypes": [
          "char",
          "char"
        ]
      },
      {
        "name": "replace",
        "parameterTypes": [
          "java.lang.CharSequence",
          "java.lang.CharSequence"
        ]
      },
      {
        "name": "replaceAll",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "replaceFirst",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "resolveConstantDesc",
        "parameterTypes": [
          "java.lang.invoke.MethodHandles$Lookup"
        ]
      },
      {
        "name": "split",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "split",
        "parameterTypes": [
          "java.lang.String",
          "int"
        ]
      },
      {
        "name": "splitWithDelimiters",
        "parameterTypes": [
          "java.lang.String",
          "int"
        ]
      },
      {
        "name": "startsWith",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "startsWith",
        "parameterTypes": [
          "java.lang.String",
          "int"
        ]
      },
      {
        "name": "strip",
        "parameterTypes": []
      },
      {
        "name": "stripIndent",
        "parameterTypes": []
      },
      {
        "name": "stripLeading",
        "parameterTypes": []
      },
      {
        "name": "stripTrailing",
        "parameterTypes": []
      },
      {
        "name": "subSequence",
        "parameterTypes": [
          "int",
          "int"
        ]
      },
      {
        "name": "substring",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "substring",
        "parameterTypes": [
          "int",
          "int"
        ]
      },
      {
        "name": "toCharArray",
        "parameterTypes": []
      },
      {
        "name": "toLowerCase",
        "parameterTypes": []
      },
      {
        "name": "toLowerCase",
        "parameterTypes": [
          "java.util.Locale"
        ]
      },
      {
        "name": "toString",
        "parameterTypes": []
      },
      {
        "name": "toUpperCase",
        "parameterTypes": []
      },
      {
        "name": "toUpperCase",
        "parameterTypes": [
          "java.util.Locale"
        ]
      },
      {
        "name": "transform",
        "parameterTypes": [
          "java.util.function.Function"
        ]
      },
      {
        "name": "translateEscapes",
        "parameterTypes": []
      },
      {
        "name": "trim",
        "parameterTypes": []
      },
      {
        "name": "valueOf",
        "parameterTypes": [
          "[C"
        ]
      },
      {
        "name": "valueOf",
        "parameterTypes": [
          "[C",
          "int",
          "int"
        ]
      },
      {
        "name": "valueOf",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "valueOf",
        "parameterTypes": [
          "char"
        ]
      },
      {
        "name": "valueOf",
        "parameterTypes": [
          "double"
        ]
      },
      {
        "name": "valueOf",
        "parameterTypes": [
          "float"
        ]
      },
      {
        "name": "valueOf",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "valueOf",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "valueOf",
        "parameterTypes": [
          "long"
        ]
      }
    ],
    "name": "java.lang.String"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "describeConstable",
        "parameterTypes": []
      }
    ],
    "name": "java.lang.constant.Constable"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "java.lang.reflect.Type"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "java.sql.Connection"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "java.sql.Wrapper"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "java.time.LocalDate"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "add",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "addAll",
        "parameterTypes": [
          "java.util.Collection"
        ]
      },
      {
        "name": "clear",
        "parameterTypes": []
      },
      {
        "name": "contains",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "containsAll",
        "parameterTypes": [
          "java.util.Collection"
        ]
      },
      {
        "name": "isEmpty",
        "parameterTypes": []
      },
      {
        "name": "iterator",
        "parameterTypes": []
      },
      {
        "name": "remove",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "removeAll",
        "parameterTypes": [
          "java.util.Collection"
        ]
      },
      {
        "name": "retainAll",
        "parameterTypes": [
          "java.util.Collection"
        ]
      },
      {
        "name": "size",
        "parameterTypes": []
      },
      {
        "name": "toArray",
        "parameterTypes": []
      },
      {
        "name": "toArray",
        "parameterTypes": [
          "[Ljava.lang.Object;"
        ]
      },
      {
        "name": "toString",
        "parameterTypes": []
      }
    ],
    "name": "java.util.AbstractCollection"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "add",
        "parameterTypes": [
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "add",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "addAll",
        "parameterTypes": [
          "int",
          "java.util.Collection"
        ]
      },
      {
        "name": "clear",
        "parameterTypes": []
      },
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "get",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "hashCode",
        "parameterTypes": []
      },
      {
        "name": "indexOf",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "iterator",
        "parameterTypes": []
      },
      {
        "name": "lastIndexOf",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "listIterator",
        "parameterTypes": []
      },
      {
        "name": "listIterator",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "remove",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "set",
        "parameterTypes": [
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "subList",
        "parameterTypes": [
          "int",
          "int"
        ]
      }
    ],
    "name": "java.util.AbstractList"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "clear",
        "parameterTypes": []
      },
      {
        "name": "containsKey",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "containsValue",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "entrySet",
        "parameterTypes": []
      },
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "get",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "hashCode",
        "parameterTypes": []
      },
      {
        "name": "isEmpty",
        "parameterTypes": []
      },
      {
        "name": "keySet",
        "parameterTypes": []
      },
      {
        "name": "put",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.Object"
        ]
      },
      {
        "name": "putAll",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "remove",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "size",
        "parameterTypes": []
      },
      {
        "name": "toString",
        "parameterTypes": []
      },
      {
        "name": "values",
        "parameterTypes": []
      }
    ],
    "name": "java.util.AbstractMap"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "hashCode",
        "parameterTypes": []
      },
      {
        "name": "removeAll",
        "parameterTypes": [
          "java.util.Collection"
        ]
      }
    ],
    "name": "java.util.AbstractSet"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "add",
        "parameterTypes": [
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "add",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "addAll",
        "parameterTypes": [
          "int",
          "java.util.Collection"
        ]
      },
      {
        "name": "addAll",
        "parameterTypes": [
          "java.util.Collection"
        ]
      },
      {
        "name": "addFirst",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "addLast",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "clear",
        "parameterTypes": []
      },
      {
        "name": "clone",
        "parameterTypes": []
      },
      {
        "name": "contains",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "ensureCapacity",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "forEach",
        "parameterTypes": [
          "java.util.function.Consumer"
        ]
      },
      {
        "name": "get",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "getFirst",
        "parameterTypes": []
      },
      {
        "name": "getLast",
        "parameterTypes": []
      },
      {
        "name": "hashCode",
        "parameterTypes": []
      },
      {
        "name": "indexOf",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "isEmpty",
        "parameterTypes": []
      },
      {
        "name": "iterator",
        "parameterTypes": []
      },
      {
        "name": "lastIndexOf",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "listIterator",
        "parameterTypes": []
      },
      {
        "name": "listIterator",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "remove",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "remove",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "removeAll",
        "parameterTypes": [
          "java.util.Collection"
        ]
      },
      {
        "name": "removeFirst",
        "parameterTypes": []
      },
      {
        "name": "removeIf",
        "parameterTypes": [
          "java.util.function.Predicate"
        ]
      },
      {
        "name": "removeLast",
        "parameterTypes": []
      },
      {
        "name": "replaceAll",
        "parameterTypes": [
          "java.util.function.UnaryOperator"
        ]
      },
      {
        "name": "retainAll",
        "parameterTypes": [
          "java.util.Collection"
        ]
      },
      {
        "name": "set",
        "parameterTypes": [
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "size",
        "parameterTypes": []
      },
      {
        "name": "sort",
        "parameterTypes": [
          "java.util.Comparator"
        ]
      },
      {
        "name": "spliterator",
        "parameterTypes": []
      },
      {
        "name": "subList",
        "parameterTypes": [
          "int",
          "int"
        ]
      },
      {
        "name": "toArray",
        "parameterTypes": []
      },
      {
        "name": "toArray",
        "parameterTypes": [
          "[Ljava.lang.Object;"
        ]
      },
      {
        "name": "trimToSize",
        "parameterTypes": []
      }
    ],
    "name": "java.util.ArrayList"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "add",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "addAll",
        "parameterTypes": [
          "java.util.Collection"
        ]
      },
      {
        "name": "clear",
        "parameterTypes": []
      },
      {
        "name": "contains",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "containsAll",
        "parameterTypes": [
          "java.util.Collection"
        ]
      },
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "hashCode",
        "parameterTypes": []
      },
      {
        "name": "isEmpty",
        "parameterTypes": []
      },
      {
        "name": "iterator",
        "parameterTypes": []
      },
      {
        "name": "remove",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "removeAll",
        "parameterTypes": [
          "java.util.Collection"
        ]
      },
      {
        "name": "retainAll",
        "parameterTypes": [
          "java.util.Collection"
        ]
      },
      {
        "name": "size",
        "parameterTypes": []
      },
      {
        "name": "toArray",
        "parameterTypes": []
      },
      {
        "name": "toArray",
        "parameterTypes": [
          "[Ljava.lang.Object;"
        ]
      }
    ],
    "name": "java.util.Collection"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "java.util.Collections$EmptyMap"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "java.util.Dictionary"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "clear",
        "parameterTypes": []
      },
      {
        "name": "clone",
        "parameterTypes": []
      },
      {
        "name": "compute",
        "parameterTypes": [
          "java.lang.Object",
          "java.util.function.BiFunction"
        ]
      },
      {
        "name": "computeIfAbsent",
        "parameterTypes": [
          "java.lang.Object",
          "java.util.function.Function"
        ]
      },
      {
        "name": "computeIfPresent",
        "parameterTypes": [
          "java.lang.Object",
          "java.util.function.BiFunction"
        ]
      },
      {
        "name": "containsKey",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "containsValue",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "entrySet",
        "parameterTypes": []
      },
      {
        "name": "forEach",
        "parameterTypes": [
          "java.util.function.BiConsumer"
        ]
      },
      {
        "name": "get",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "getOrDefault",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.Object"
        ]
      },
      {
        "name": "isEmpty",
        "parameterTypes": []
      },
      {
        "name": "keySet",
        "parameterTypes": []
      },
      {
        "name": "merge",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.Object",
          "java.util.function.BiFunction"
        ]
      },
      {
        "name": "newHashMap",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "put",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.Object"
        ]
      },
      {
        "name": "putAll",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "putIfAbsent",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.Object"
        ]
      },
      {
        "name": "remove",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "remove",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.Object"
        ]
      },
      {
        "name": "replace",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.Object"
        ]
      },
      {
        "name": "replace",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object"
        ]
      },
      {
        "name": "replaceAll",
        "parameterTypes": [
          "java.util.function.BiFunction"
        ]
      },
      {
        "name": "size",
        "parameterTypes": []
      },
      {
        "name": "values",
        "parameterTypes": []
      }
    ],
    "name": "java.util.HashMap"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "add",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "clear",
        "parameterTypes": []
      },
      {
        "name": "clone",
        "parameterTypes": []
      },
      {
        "name": "contains",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "isEmpty",
        "parameterTypes": []
      },
      {
        "name": "iterator",
        "parameterTypes": []
      },
      {
        "name": "newHashSet",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "remove",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "size",
        "parameterTypes": []
      },
      {
        "name": "spliterator",
        "parameterTypes": []
      },
      {
        "name": "toArray",
        "parameterTypes": []
      },
      {
        "name": "toArray",
        "parameterTypes": [
          "[Ljava.lang.Object;"
        ]
      }
    ],
    "name": "java.util.HashSet"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "java.util.Hashtable"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "clear",
        "parameterTypes": []
      },
      {
        "name": "containsValue",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "entrySet",
        "parameterTypes": []
      },
      {
        "name": "forEach",
        "parameterTypes": [
          "java.util.function.BiConsumer"
        ]
      },
      {
        "name": "get",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "getOrDefault",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.Object"
        ]
      },
      {
        "name": "keySet",
        "parameterTypes": []
      },
      {
        "name": "newLinkedHashMap",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "putFirst",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.Object"
        ]
      },
      {
        "name": "putLast",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.Object"
        ]
      },
      {
        "name": "replaceAll",
        "parameterTypes": [
          "java.util.function.BiFunction"
        ]
      },
      {
        "name": "reversed",
        "parameterTypes": []
      },
      {
        "name": "sequencedEntrySet",
        "parameterTypes": []
      },
      {
        "name": "sequencedKeySet",
        "parameterTypes": []
      },
      {
        "name": "sequencedValues",
        "parameterTypes": []
      },
      {
        "name": "values",
        "parameterTypes": []
      }
    ],
    "name": "java.util.LinkedHashMap"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "addFirst",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "addLast",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "clear",
        "parameterTypes": []
      },
      {
        "name": "contains",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "forEach",
        "parameterTypes": [
          "java.util.function.Consumer"
        ]
      },
      {
        "name": "getFirst",
        "parameterTypes": []
      },
      {
        "name": "getLast",
        "parameterTypes": []
      },
      {
        "name": "iterator",
        "parameterTypes": []
      },
      {
        "name": "removeFirst",
        "parameterTypes": []
      },
      {
        "name": "removeLast",
        "parameterTypes": []
      },
      {
        "name": "reversed",
        "parameterTypes": []
      },
      {
        "name": "size",
        "parameterTypes": []
      },
      {
        "name": "spliterator",
        "parameterTypes": []
      },
      {
        "name": "toArray",
        "parameterTypes": []
      },
      {
        "name": "toArray",
        "parameterTypes": [
          "[Ljava.lang.Object;"
        ]
      }
    ],
    "name": "java.util.LinkedHashMap$LinkedValues"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "addFirst",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "addLast",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "getFirst",
        "parameterTypes": []
      },
      {
        "name": "getLast",
        "parameterTypes": []
      },
      {
        "name": "newLinkedHashSet",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "removeFirst",
        "parameterTypes": []
      },
      {
        "name": "removeLast",
        "parameterTypes": []
      },
      {
        "name": "reversed",
        "parameterTypes": []
      },
      {
        "name": "spliterator",
        "parameterTypes": []
      }
    ],
    "name": "java.util.LinkedHashSet"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "add",
        "parameterTypes": [
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "add",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "addAll",
        "parameterTypes": [
          "int",
          "java.util.Collection"
        ]
      },
      {
        "name": "addAll",
        "parameterTypes": [
          "java.util.Collection"
        ]
      },
      {
        "name": "clear",
        "parameterTypes": []
      },
      {
        "name": "contains",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "containsAll",
        "parameterTypes": [
          "java.util.Collection"
        ]
      },
      {
        "name": "copyOf",
        "parameterTypes": [
          "java.util.Collection"
        ]
      },
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "get",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "hashCode",
        "parameterTypes": []
      },
      {
        "name": "indexOf",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "isEmpty",
        "parameterTypes": []
      },
      {
        "name": "iterator",
        "parameterTypes": []
      },
      {
        "name": "lastIndexOf",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "listIterator",
        "parameterTypes": []
      },
      {
        "name": "listIterator",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "of",
        "parameterTypes": []
      },
      {
        "name": "of",
        "parameterTypes": [
          "[Ljava.lang.Object;"
        ]
      },
      {
        "name": "of",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "of",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.Object"
        ]
      },
      {
        "name": "of",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object"
        ]
      },
      {
        "name": "of",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object"
        ]
      },
      {
        "name": "of",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object"
        ]
      },
      {
        "name": "of",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object"
        ]
      },
      {
        "name": "of",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object"
        ]
      },
      {
        "name": "of",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object"
        ]
      },
      {
        "name": "of",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object"
        ]
      },
      {
        "name": "of",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object"
        ]
      },
      {
        "name": "remove",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "remove",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "removeAll",
        "parameterTypes": [
          "java.util.Collection"
        ]
      },
      {
        "name": "retainAll",
        "parameterTypes": [
          "java.util.Collection"
        ]
      },
      {
        "name": "set",
        "parameterTypes": [
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "size",
        "parameterTypes": []
      },
      {
        "name": "subList",
        "parameterTypes": [
          "int",
          "int"
        ]
      },
      {
        "name": "toArray",
        "parameterTypes": []
      },
      {
        "name": "toArray",
        "parameterTypes": [
          "[Ljava.lang.Object;"
        ]
      }
    ],
    "name": "java.util.List"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "clear",
        "parameterTypes": []
      },
      {
        "name": "containsKey",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "containsValue",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "copyOf",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "entry",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.Object"
        ]
      },
      {
        "name": "entrySet",
        "parameterTypes": []
      },
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "get",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "hashCode",
        "parameterTypes": []
      },
      {
        "name": "isEmpty",
        "parameterTypes": []
      },
      {
        "name": "keySet",
        "parameterTypes": []
      },
      {
        "name": "of",
        "parameterTypes": []
      },
      {
        "name": "of",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.Object"
        ]
      },
      {
        "name": "of",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object"
        ]
      },
      {
        "name": "of",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object"
        ]
      },
      {
        "name": "of",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object"
        ]
      },
      {
        "name": "of",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object"
        ]
      },
      {
        "name": "of",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object"
        ]
      },
      {
        "name": "of",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object"
        ]
      },
      {
        "name": "of",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object"
        ]
      },
      {
        "name": "of",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object"
        ]
      },
      {
        "name": "of",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object"
        ]
      },
      {
        "name": "ofEntries",
        "parameterTypes": [
          "[Ljava.util.Map$Entry;"
        ]
      },
      {
        "name": "put",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.Object"
        ]
      },
      {
        "name": "putAll",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "remove",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "size",
        "parameterTypes": []
      },
      {
        "name": "values",
        "parameterTypes": []
      }
    ],
    "name": "java.util.Map"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "java.util.Properties"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "reversed",
        "parameterTypes": []
      }
    ],
    "name": "java.util.SequencedCollection"
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicFields": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "add",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "addAll",
        "parameterTypes": [
          "java.util.Collection"
        ]
      },
      {
        "name": "clear",
        "parameterTypes": []
      },
      {
        "name": "contains",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "containsAll",
        "parameterTypes": [
          "java.util.Collection"
        ]
      },
      {
        "name": "copyOf",
        "parameterTypes": [
          "java.util.Collection"
        ]
      },
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "hashCode",
        "parameterTypes": []
      },
      {
        "name": "isEmpty",
        "parameterTypes": []
      },
      {
        "name": "iterator",
        "parameterTypes": []
      },
      {
        "name": "of",
        "parameterTypes": []
      },
      {
        "name": "of",
        "parameterTypes": [
          "[Ljava.lang.Object;"
        ]
      },
      {
        "name": "of",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "of",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.Object"
        ]
      },
      {
        "name": "of",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object"
        ]
      },
      {
        "name": "of",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object"
        ]
      },
      {
        "name": "of",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object"
        ]
      },
      {
        "name": "of",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object"
        ]
      },
      {
        "name": "of",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object"
        ]
      },
      {
        "name": "of",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object"
        ]
      },
      {
        "name": "of",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object"
        ]
      },
      {
        "name": "of",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object"
        ]
      },
      {
        "name": "remove",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "removeAll",
        "parameterTypes": [
          "java.util.Collection"
        ]
      },
      {
        "name": "retainAll",
        "parameterTypes": [
          "java.util.Collection"
        ]
      },
      {
        "name": "size",
        "parameterTypes": []
      },
      {
        "name": "toArray",
        "parameterTypes": []
      },
      {
        "name": "toArray",
        "parameterTypes": [
          "[Ljava.lang.Object;"
        ]
      }
    ],
    "name": "java.util.Set"
  }
]