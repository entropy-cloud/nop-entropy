nop:
  auth:
    sso:
      enabled: false
      server-url: http://localhost:8041
      realm: app
      client-id: test-client
      client-secret: qpgEjwXqd1TpgaA3aIi1jd4AVTLCrs8o
    site-map:
      static-config-path: /nop/demo/app.action-auth.xml
      cache-timeout: 1s
      support-debug: true

    data-auth-config-path: /nop/demo/app.data-auth.xml
    enable-data-auth: false
    enable-action-auth: false
    use-data-auth-table: false

    login:
      allow-create-default-user: true # 如果用户表为空，则自动创建缺省账户nop, 密码nop-test
      use-dao-user-context-cache: true

    web:
      validate-page-model: true

    jwt:
      enc-key: dij3)(4ldt[]erq=2mfKID

  orm:
    init-database-schema: true
    enable-tenant-by-default: true
    auto-add-tenant-col: true

  datasource:
    #    driver-class-name: org.h2.Driver
    #    jdbc-url: jdbc:h2:./db/test
    #    username: sa
    #    password:
    # driver-class-name: com.mysql.cj.jdbc.Driver
    # jdbc-url: jdbc:mysql://127.0.0.1:3306/dev?useUnicode=true&characterEncoding=utf-8&useSSL=true&serverTimezone=UTC
    # username: nop
    # password: nop-test
    metrics-enabled: true
    driver-class-name: org.h2.Driver
    jdbc-url: jdbc:h2:./db/test
    username: sa
    password:

  gateway:
    http-filter:
      enabled: true

  file:
  #store-impl: oss

  integration:
    oss:
      enabled: false
      endpoint: http://localhost:9000
      access-key: nop
      secret-key: nop-test


  core:
    tenant-resource:
      enabled: true
  web:
    page-validation-thread-count: 4

  cluster:
    use-empty-naming-service: true
# 开发模式配置

"%dev":
  nop:
    debug: true
    # log:
    #   level: trace

    auth:
      login:
        allow-create-default-user: true # 如果用户表为空，则自动创建缺省账户nop, 密码nop-test

    datasource:
      driver-class-name: org.h2.Driver
      jdbc-url: jdbc:h2:./db/test
      username: sa
      password:

    web:
      validate-page-model: true
      auto-load-dynamic-file: false

    orm:
      init-database-schema: true
      db-differ:
        auto-upgrade-database: false

    # 支持graphql __schema查询，
    graphql:
      schema-introspection:
        enabled: true

    ioc:
      app-beans-container:
        concurrent-start: false

# devservices 会启用testcontainers来管理测试数据库
quarkus:
  devservices:
    enabled: false

  datasource:
    devservices:
      enabled: false

  vertx-graphql:
    ui:
      always-include: true


  http:
    host: 0.0.0.0
    cors: true
    http2: true

  log:
    level: info
    min-level: trace

#    console:
#      json: true

    category:
      "io.nop":
        level: DEBUG
      "io.nop.api.core.context":
        level: INFO
      "io.nop.http.api.server":
          level: INFO

    file:
      enable: false
      path: log/app-demo.log
      #      # 输出格式
      #      format: %d{yyyy-MM-dd HH:mm:ss,SSS} %h %N[%i] %-5p [%c{3.}] (%t) %s%e%n
      #      # Indicates whether to log asynchronously
      async: true
      rotation:
        max-file-size: 100M
        max-backup-index: 3
        file-suffix: .yyyy-MM-dd


  redis:
    hosts: redis://localhost/


  dev:
    watch:
      enabled: false


  live-reload:
    enabled: false