<?xml version="1.0" encoding="UTF-8" ?>

<beans x:schema="/nop/schema/beans.xdef" xmlns:x="/nop/schema/xdsl.xdef"
       xmlns:ioc="ioc" xmlns:util="util" xmlns:feature="feature">


    <import resource="load-balance-defaults.beans.xml"/>

    <bean id="nopAutoRegistration" class="io.nop.cluster.naming.AutoRegistration"
          feature:on="nop.cluster.registration.enabled">
        <property name="addr" value="@cfg:nop.server.addr|"/>
        <property name="port" value="@cfg:nop.server.port"/>
        <property name="serviceName" value="@cfg:nop.application.name"/>
        <property name="tags" value="@cfg:nop.cluster.registration.tags|"/>
        <property name="metadata">
            <map>
                <entry key="version" value="@cfg:nop.application.version|1.0.0"/>
                <entry key="group" value="@cfg:nop.application.group|default"/>
                <entry key="zone" value="@cfg:nop.application.zone|"/>
                <entry key="kind" value="@cfg:nop.application.kind|http"/>
            </map>
        </property>
    </bean>

    <bean id="nopLocalIpFinder" class="io.nop.commons.io.net.DefaultServerAddrFinder" ioc:default="true"/>

    <bean id="nopHttpRpcClientInstanceProvider" ioc:default="true"
          class="io.nop.rpc.cluster.http.HttpRpcClientInstanceProvider">
        <property name="useHttps" value="@cfg:nop.cluster.rpc.use-https|false"/>
    </bean>

    <util:list id="nopRequestServiceInstanceFilters">
        <ref bean="nopServiceInstanceFilter_healthy"/>
        <ref bean="nopServiceInstanceFilter_specific"/>

        <ref bean="nopServiceInstanceFilter_tag"/>
        <ref bean="nopServiceInstanceFilter_zone"/>
        <ref bean="nopServiceInstanceFilter_route"/>

    </util:list>

    <bean id="nopServiceInstanceFilter_healthy" class="io.nop.cluster.chooser.filter.HealthyServiceInstanceFilter"/>

    <bean id="nopServiceInstanceFilter_zone" class="io.nop.cluster.chooser.filter.ZoneServiceInstanceFilter">
        <property name="zone" value="@cfg:nop.rpc.cluster.prefer-zone|"/>
        <property name="force" value="@cfg:nop.rpc.cluster.force-zone|false"/>
    </bean>

    <bean id="nopServiceInstanceFilter_route" class="io.nop.cluster.chooser.filter.RouteServiceInstanceFilter"/>

    <bean id="nopServiceInstanceFilter_tag" class="io.nop.cluster.chooser.filter.TagServiceInstanceFilter"/>

    <bean id="nopServiceInstanceFilter_specific" class="io.nop.cluster.chooser.filter.SpecificServiceInstanceFilter"/>


    <bean id="nopServerChooser_base" abstract="true"
          class="io.nop.cluster.chooser.LoadBalanceServerChooser">
        <property name="filters" ref="nopRequestServiceInstanceFilters"/>
    </bean>

    <bean id="nopServerChooser_random" parent="nopServerChooser_base">
        <property name="loadBalance" ref="nopLoadBalance_random"/>
    </bean>

    <bean id="nopServerChooser_roundRobin" parent="nopServerChooser_base">
        <property name="loadBalance" ref="nopLoadBalance_random"/>
    </bean>

    <bean id="nopServerChooser_leastActive" parent="nopServerChooser_base">
        <property name="loadBalance" ref="nopLoadBalance_leastActive"/>
    </bean>

    <alias alias="nopServerChooser_default" name="nopServerChooser_random"/>

    <bean id="nopEmptyNamingService" class="io.nop.cluster.naming.EmptyNamingService">
        <ioc:condition>
            <if-property name="nop.cluster.use-empty-naming-service"/>
        </ioc:condition>
    </bean>

    <bean id="AbstractClusterRpcProxyFactoryBean" abstract="true" ioc:default="true"
          ioc:bean-method="getObject"
          class="io.nop.rpc.cluster.ClusterRpcProxyFactoryBean">
        <property name="serverChooser" ref="nopServerChooser_default"/>
        <property name="interceptors" ref="nopRpcServiceClientInterceptors"/>
        <property name="serviceClass" value="@bean:type"/>
        <property name="retryCount" value="@cfg:nop.rpc.cluster-client-retry-count|2"/>
    </bean>

    <bean id="AbstractRpcProxyFactoryBean" abstract="true" parent="AbstractClusterRpcProxyFactoryBean"
          feature:off="nop.rpc.service-mesh.enabled or nop.rpc.mock-all"/>

    <bean id="AbstractRpcProxyFactoryBean" abstract="true" parent="AbstractHttpRpcProxyFactoryBean"
          feature:on="nop.rpc.service-mesh.enabled and !nop.rpc.mock-all">
        <property name="baseUrl" value="@cfg:nop.rpc.service-mesh.base-url"/>
    </bean>

    <bean id="AbstractHttpRpcProxyFactoryBean" abstract="true" ioc:default="true"
          ioc:bean-method="getObject"
          class="io.nop.rpc.cluster.http.HttpRpcProxyFactoryBean">
        <property name="interceptors" ref="nopRpcServiceClientInterceptors"/>
        <property name="serviceClass" value="@bean:type"/>
        <property name="retryCount" value="@cfg:nop.rpc.cluster-client-retry-count|2"/>
    </bean>

    <bean id="AbstractBroadcastRpcProxyFactoryBean" abstract="true" ioc:default="true"
          ioc:bean-method="getObject"
          class="io.nop.rpc.cluster.ClusterRpcProxyFactoryBean">
        <property name="serverChooser" ref="nopServerChooser_default"/>
        <property name="interceptors" ref="nopRpcServiceClientInterceptors"/>
        <property name="serviceClass" value="@bean:type"/>
    </bean>

    <bean id="nopRpcServiceInterceptor_stat"
          class="io.nop.rpc.core.interceptors.StatRpcServiceInterceptor"/>

    <bean id="nopRpcServiceInterceptor_log"
          class="io.nop.rpc.core.interceptors.LogRpcServiceInterceptor"/>

    <bean id="nopRpcServiceInterceptor_clientContext"
          class="io.nop.rpc.core.interceptors.ClientContextRpcServiceInterceptor"/>

    <util:list id="nopRpcServiceClientInterceptors">
        <ref bean="nopRpcServiceInterceptor_stat"/>
        <ref bean="nopRpcServiceInterceptor_log"/>
        <ref bean="nopRpcServiceInterceptor_clientContext"/>
        <ref bean="nopRpcServiceInterceptor_tcc" ioc:optional="true"/>
    </util:list>

    <bean id="nopClusterRpcServiceInvoker" class="io.nop.rpc.cluster.ClusterRpcServiceInvoker">
        <property name="serverChooser" ref="nopServerChooser_default"/>
        <property name="interceptors" ref="nopRpcServiceClientInterceptors"/>
        <property name="retryCount" value="@cfg:nop.rpc.proxy.client-retry-count|1"/>
        <property name="allowedServiceNames" value="@cfg:nop.rpc.proxy.allowed-service-names|"/>
    </bean>

    <alias name="nopClusterRpcServiceInvoker" alias="nopProxyRpcServiceInvoker"/>

    <bean id="nopDynamicRpcService" parent="AbstractRpcProxyFactoryBean"
          ioc:type="io.nop.rpc.api.IDynamicRpcService">
        <property name="serviceName" value="DynamicRpcService"/>
    </bean>
</beans>